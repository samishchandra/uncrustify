# Uncrustify_d-1.80.2
input_tab_size                  = 2
output_tab_size                 = 2
disable_processing_cmt          = "UNCRUSTIFY_FORMAT_OFF"
enable_processing_cmt           = "UNCRUSTIFY_FORMAT_ON"
sp_do_brace_open                = force
sp_brace_close_while            = force
sp_while_paren_open             = force
sp_assign                       = force
sp_cpp_lambda_assign            = remove
sp_cpp_lambda_square_paren      = remove
sp_cpp_lambda_square_brace      = force
sp_cpp_lambda_paren_brace       = force
sp_cpp_lambda_fparen            = remove
sp_assign_default               = force
sp_before_assign                = force
sp_after_assign                 = force
sp_enum_paren                   = remove
sp_enum_assign                  = force
sp_enum_before_assign           = force
sp_enum_after_assign            = force
sp_pp_concat                    = force
sp_bool                         = force
sp_compare                      = force
sp_inside_paren                 = remove
sp_paren_brace                  = force
sp_before_ptr_star              = force
sp_after_ptr_star               = remove
sp_after_ptr_star_func          = remove
sp_ptr_star_paren               = remove
sp_before_ptr_star_func         = force
sp_before_byref                 = force
sp_before_unnamed_byref         = force
sp_after_byref                  = remove
sp_after_byref_func             = remove
sp_before_byref_func            = force
sp_before_template_paren        = remove
sp_template_angle               = force
sp_before_angle                 = remove
sp_inside_angle                 = remove
sp_inside_angle_empty           = remove
sp_angle_paren                  = remove
sp_angle_paren_empty            = remove
sp_angle_word                   = force
sp_angle_shift                  = remove
sp_permit_cpp11_shift           = true
sp_before_sparen                = force
sp_inside_sparen                = remove
sp_inside_sparen_open           = remove
sp_inside_sparen_close          = remove
sp_sparen_brace                 = force
sp_after_semi                   = ignore
sp_inside_square                = remove
sp_after_comma                  = force
sp_paren_comma                  = remove
sp_inside_paren_cast            = remove
sp_cpp_cast_paren               = remove
sp_sizeof_paren                 = remove
sp_inside_braces_enum           = force
sp_inside_braces_struct         = remove
sp_inside_braces_empty          = remove
sp_type_brace_init_lst          = remove
sp_func_proto_paren             = remove
sp_func_def_paren               = remove
sp_inside_fparens               = remove
sp_inside_fparen                = remove
sp_inside_tparen                = remove
sp_after_tparen_close           = remove
sp_fparen_brace                 = force
sp_func_call_paren_empty        = remove
sp_return_paren                 = force
sp_return_brace                 = force
sp_catch_paren                  = force
sp_oc_classname_paren           = force
sp_scope_paren                  = force
sp_else_brace                   = force
sp_brace_else                   = force
sp_catch_brace                  = force
sp_finally_brace                = force
sp_try_brace                    = force
sp_getset_brace                 = force
sp_before_dc                    = remove
sp_after_dc                     = remove
sp_after_oc_scope               = force
sp_after_oc_colon               = remove
sp_before_oc_colon              = remove
sp_after_oc_dict_colon          = force
sp_before_oc_dict_colon         = force
sp_after_send_oc_colon          = remove
sp_before_send_oc_colon         = remove
sp_after_oc_type                = remove
sp_after_oc_return_type         = remove
sp_after_oc_at_sel              = remove
sp_after_oc_at_sel_parens       = force
sp_inside_oc_at_sel_parens      = remove
sp_after_oc_block_caret         = remove
sp_after_oc_property            = force
sp_after_oc_synchronized        = force
sp_cond_colon                   = force
sp_cond_colon_before            = force
sp_cond_colon_after             = force
sp_cond_question                = force
sp_cond_question_before         = force
sp_cond_question_after          = force
sp_cond_ternary_short           = remove
sp_case_label                   = force
sp_cmt_cpp_start                = force
sp_cmt_cpp_doxygen              = true
sp_before_tr_emb_cmt            = force
indent_columns                  = 2
indent_with_tabs                = 0
indent_paren_open_brace         = true
indent_namespace                = true
indent_class                    = true
indent_func_call_param          = true
indent_func_class_param         = true
indent_func_ctor_var_param      = true
indent_relative_single_line_comments = true
indent_switch_case              = 2
indent_col1_comment             = true
indent_label                    = -2
indent_access_spec              = -2
indent_paren_close              = 2
indent_align_assign             = false
indent_align_paren              = false
indent_oc_block                 = true
indent_oc_msg_prioritize_first_colon = false
indent_oc_block_msg_xcode_style = true
indent_compound_literal_return  = false
indent_off_after_return_new     = true
indent_single_after_return      = true
nl_class_leave_one_liners       = true
nl_enum_leave_one_liners        = true
nl_func_leave_one_liners        = true
nl_cpp_lambda_leave_one_liners  = true
nl_oc_msg_leave_one_liner       = true
nl_oc_mdef_brace                = force
nl_oc_block_brace               = remove
nl_oc_before_implementation     = force
nl_oc_interface_brace           = force
nl_oc_implementation_brace      = force
nl_start_of_file                = remove
nl_end_of_file                  = force
nl_end_of_file_min              = 1
nl_enum_brace                   = remove
nl_struct_brace                 = remove
nl_union_brace                  = remove
nl_if_brace                     = remove
nl_brace_else                   = remove
nl_elseif_brace                 = remove
nl_else_brace                   = remove
nl_else_if                      = remove
nl_brace_finally                = remove
nl_finally_brace                = remove
nl_try_brace                    = remove
nl_for_brace                    = remove
nl_catch_brace                  = remove
nl_brace_catch                  = remove
nl_while_brace                  = remove
nl_do_brace                     = remove
nl_brace_while                  = remove
nl_switch_brace                 = remove
nl_multi_line_define            = true
nl_case_colon_brace             = remove
nl_namespace_brace              = remove
nl_class_brace                  = remove
nl_constr_init_args             = force
nl_func_paren                   = remove
nl_func_def_paren               = remove
nl_func_def_start               = remove
nl_func_decl_start_single       = remove
nl_func_def_start_single        = remove
nl_func_decl_end_single         = remove
nl_func_decl_empty              = remove
nl_func_call_start_multi_line   = true
nl_func_call_args_multi_line    = true
nl_func_call_end_multi_line     = true
nl_fdef_brace                   = force
nl_cpp_ldef_brace               = remove
nl_constr_colon                 = force
nl_create_if_one_liner          = true
nl_max                          = 2
nl_after_func_body              = 2
nl_after_func_body_one_liner    = 2
nl_after_multiline_comment      = true
nl_before_class                 = 1
nl_after_class                  = 1
nl_before_namespace             = 1
nl_after_access_spec            = 1
eat_blanks_after_open_brace     = true
eat_blanks_before_close_brace   = true
pos_arith                       = lead
pos_bool                        = lead
pos_conditional                 = lead
pos_enum_comma                  = trail_break
pos_constr_comma                = trail_break
pos_constr_colon                = trail_break
align_oc_msg_colon_span         = 1
align_oc_decl_colon             = true
align_oc_msg_colon_xcode_like   = true
cmt_convert_tab_to_spaces       = true
cmt_indent_multi                = false
cmt_c_nl_start                  = true
cmt_cpp_nl_start                = true
cmt_cpp_nl_end                  = true
cmt_sp_after_star_cont          = 1
mod_full_brace_for              = force
mod_full_brace_if               = force
mod_full_brace_nl_block_rem_mlcond = true
mod_sort_case_sensitive         = true
mod_sort_import                 = true
mod_sort_include                = true
mod_remove_empty_return         = true
mod_enum_last_comma             = force
mod_sort_oc_properties          = true
mod_sort_oc_property_class_weight = 7
mod_sort_oc_property_thread_safe_weight = 5
mod_sort_oc_property_readwrite_weight = 4
mod_sort_oc_property_reference_weight = 1
mod_sort_oc_property_getter_weight = 3
mod_sort_oc_property_setter_weight = 2
mod_sort_oc_property_nullability_weight = 6
pp_indent                       = force
pp_indent_at_level              = true
pp_indent_if                    = -2
# option(s) with 'not default' value: 224
#
# -=====-
# Line                Tag              Parent          Columns Br/Lvl/pp     Flag   Nl  Text
#   1>        COMMENT_CPP[      COMMENT_WHOLE][  1/  1/ 31/  0][0/0/0][          0][0-0] // newlines for function calls
#   1>            NEWLINE[               NONE][ 31/ 31/  1/  0][0/0/0][          0][1-0]
#   2>          FUNC_CALL[               NONE][  1/  1/  8/  0][0/0/0][      60000][0-0] options
#   2>        FPAREN_OPEN[          FUNC_CALL][  8/  8/  9/  0][0/0/0][  100000000][0-0]        (
#   2>         BRACE_OPEN[   BRACED_INIT_LIST][  9/  9/ 10/  0][0/1/0][  100040010][0-0]         {
#   2>            NEWLINE[               NONE][ 10/ 10/ 11/  0][1/2/0][         10][1-0]
#   3>         C99_MEMBER[               NONE][  3/ 11/ 12/  0][1/2/0][  110060010][0-0]   .
#   3>               WORD[         C99_MEMBER][  4/ 12/ 24/  0][1/2/0][   10000010][0-0]    cornerRadius
#   3>             ASSIGN[               NONE][ 17/ 25/ 26/  1][1/2/0][  100000010][0-0]                 =
#   3>               WORD[               NONE][ 19/ 27/ 38/  1][1/2/0][      40010][0-0]                   CGFLOAT_MAX
#   3>              COMMA[               NONE][ 30/ 38/ 39/  0][1/2/0][  100000010][0-0]                              ,
#   3>            NEWLINE[               NONE][ 31/ 39/  9/  0][1/2/0][         10][1-0]
#   4>        BRACE_CLOSE[   BRACED_INIT_LIST][  1/  9/ 10/  0][0/1/0][  100000010][0-0] }
#   4>       FPAREN_CLOSE[          FUNC_CALL][  2/ 10/ 11/  0][0/0/0][  100000010][0-0]  )
#   4>          SEMICOLON[               NONE][  3/ 11/ 12/  0][0/0/0][  100000000][0-0]   ;
#   4>            NEWLINE[               NONE][  4/ 12/  1/  0][0/0/0][          0][2-0]
#   6>          FUNC_CALL[               NONE][  1/  1/  9/  0][0/0/0][      60000][0-0] mapToPtr
#   6>        FPAREN_OPEN[          FUNC_CALL][  9/  9/ 10/  0][0/0/0][  100000000][0-0]         (
#   6>        SQUARE_OPEN[         CPP_LAMBDA][ 10/ 10/ 11/  0][0/1/0][  100040010][0-0]          [
#   6>               ADDR[               NONE][ 11/ 11/ 12/  0][0/2/0][  100060010][0-0]           &
#   6>       SQUARE_CLOSE[         CPP_LAMBDA][ 12/ 12/ 13/  0][0/1/0][  100000010][0-0]            ]
#   6>        FPAREN_OPEN[         CPP_LAMBDA][ 13/ 13/ 14/  0][0/1/0][  100000010][0-0]             (
#   6>          QUALIFIER[               NONE][ 14/ 14/ 19/  0][0/2/0][      50010][0-0]              const
#   6>               TYPE[               NONE][ 20/ 20/ 29/  1][0/2/0][     400010][0-0]                    LeftAddOn
#   6>          DC_MEMBER[               NONE][ 29/ 29/ 31/  0][0/2/0][  100000010][0-0]                             ::
#   6>               TYPE[               NONE][ 31/ 31/ 36/  0][0/2/0][     400010][0-0]                               Props
#   6>              BYREF[               NONE][ 37/ 37/ 38/  1][0/2/0][  100000010][0-0]                                     &
#   6>               WORD[               NONE][ 38/ 38/ 48/  0][0/2/0][     800010][0-0]                                      addOnProps
#   6>       FPAREN_CLOSE[         CPP_LAMBDA][ 48/ 48/ 49/  0][0/1/0][  100000010][0-0]                                                )
#   6>         BRACE_OPEN[         CPP_LAMBDA][ 50/ 50/ 51/  1][0/1/0][  100000010][0-0]                                                  {
#   6>            NEWLINE[               NONE][ 51/ 51/  7/  0][1/2/0][         10][1-0]
#   7>               TYPE[               NONE][  3/  7/ 14/  0][1/2/0][   10460010][0-0]   FSTheme
#   7>           PTR_TYPE[               NONE][ 11/ 15/ 16/  1][1/2/0][  110400010][0-0]           *
#   7>          QUALIFIER[               NONE][ 12/ 16/ 21/  0][1/2/0][   10450010][0-0]            const
#   7>               WORD[               NONE][ 18/ 22/ 27/  1][1/2/0][   11800010][0-0]                  theme
#   7>             ASSIGN[               NONE][ 24/ 28/ 29/  1][1/2/0][  100000010][0-0]                        =
#   7>               TYPE[               NONE][ 26/ 30/ 32/  1][1/2/0][      40010][0-0]                          CK
#   7>          DC_MEMBER[               NONE][ 28/ 32/ 34/  0][1/2/0][  100000010][0-0]                            ::
#   7>          FUNC_CALL[               NONE][ 30/ 34/ 42/  0][1/2/0][         10][0-0]                              getTheme
#   7>        FPAREN_OPEN[          FUNC_CALL][ 38/ 42/ 43/  0][1/2/0][  100000010][0-0]                                      (
#   7>       FPAREN_CLOSE[          FUNC_CALL][ 39/ 43/ 44/  0][1/2/0][  100000010][0-0]                                       )
#   7>          SEMICOLON[               NONE][ 40/ 44/ 45/  0][1/2/0][  100000010][0-0]                                        ;
#   7>            NEWLINE[               NONE][ 41/ 45/  1/  0][1/2/0][         10][1-0]
#   8>        BRACE_CLOSE[         CPP_LAMBDA][  1/  1/  2/  0][0/1/0][  100000010][0-0] }
#   8>       FPAREN_CLOSE[          FUNC_CALL][  2/  2/  3/  0][0/0/0][  100000010][0-0]  )
#   8>          SEMICOLON[               NONE][  3/  3/  4/  0][0/0/0][  100000000][0-0]   ;
#   8>            NEWLINE[               NONE][  4/  4/  1/  0][0/0/0][          0][2-0]
#  10>          FUNC_CALL[               NONE][  1/  1/  9/  0][0/0/0][      60000][0-0] mapToPtr
#  10>        FPAREN_OPEN[          FUNC_CALL][  9/  9/ 10/  0][0/0/0][  100000000][0-0]         (
#  10>            NEWLINE[               NONE][ 10/ 10/  0/  0][0/0/0][          0][1-0]
#  10>               WORD[               NONE][  3/ 10/ 11/  0][0/1/0][      40010][0-0]   x
#  10>              COMMA[               NONE][  4/ 11/ 12/  0][0/1/0][  100000010][0-0]    ,
#  10>            NEWLINE[               NONE][  5/ 13/  0/  0][0/1/0][         10][1-0]
#  10>        SQUARE_OPEN[         CPP_LAMBDA][  3/ 13/ 14/  1][0/1/0][  100040010][0-0]   [
#  10>               ADDR[               NONE][  4/ 14/ 15/  0][0/2/0][  100060010][0-0]    &
#  10>       SQUARE_CLOSE[         CPP_LAMBDA][  5/ 15/ 16/  0][0/1/0][  100000010][0-0]     ]
#  10>        FPAREN_OPEN[         CPP_LAMBDA][  6/ 16/ 17/  0][0/1/0][  100000010][0-0]      (
#  10>          QUALIFIER[               NONE][  7/ 17/ 22/  0][0/2/0][      50010][0-0]       const
#  10>               TYPE[               NONE][ 13/ 23/ 28/  1][0/2/0][     400010][0-0]             Props
#  10>              BYREF[               NONE][ 19/ 29/ 30/  1][0/2/0][  100000010][0-0]                   &
#  10>               WORD[               NONE][ 20/ 30/ 40/  0][0/2/0][     800010][0-0]                    addOnProps
#  10>       FPAREN_CLOSE[         CPP_LAMBDA][ 30/ 40/ 41/  0][0/1/0][  100000010][0-0]                              )
#  10>         BRACE_OPEN[         CPP_LAMBDA][ 32/ 42/ 43/  1][0/1/0][  100000010][0-0]                                {
#  10>            NEWLINE[               NONE][ 33/ 43/  7/  0][1/2/0][         10][1-0]
#  11>               TYPE[               NONE][  5/  7/ 14/  0][1/2/0][   10460010][0-0]     FSTheme
#  11>           PTR_TYPE[               NONE][ 13/ 15/ 16/  1][1/2/0][  110400010][0-0]             *
#  11>          QUALIFIER[               NONE][ 14/ 16/ 21/  0][1/2/0][   10450010][0-0]              const
#  11>               WORD[               NONE][ 20/ 22/ 27/  1][1/2/0][   11800010][0-0]                    theme
#  11>             ASSIGN[               NONE][ 26/ 28/ 29/  1][1/2/0][  100000010][0-0]                          =
#  11>               TYPE[               NONE][ 28/ 30/ 32/  1][1/2/0][      40010][0-0]                            CK
#  11>          DC_MEMBER[               NONE][ 30/ 32/ 34/  0][1/2/0][  100000010][0-0]                              ::
#  11>          FUNC_CALL[               NONE][ 32/ 34/ 42/  0][1/2/0][         10][0-0]                                getTheme
#  11>        FPAREN_OPEN[          FUNC_CALL][ 40/ 42/ 43/  0][1/2/0][  100000010][0-0]                                        (
#  11>       FPAREN_CLOSE[          FUNC_CALL][ 41/ 43/ 44/  0][1/2/0][  100000010][0-0]                                         )
#  11>          SEMICOLON[               NONE][ 42/ 44/ 45/  0][1/2/0][  100000010][0-0]                                          ;
#  11>            NEWLINE[               NONE][ 43/ 45/  1/  0][1/2/0][         10][1-0]
#  12>        BRACE_CLOSE[         CPP_LAMBDA][  3/  1/  2/  0][0/1/0][  100000010][0-0]   }
#  12>            NEWLINE[               NONE][  4/  2/  0/  0][0/1/0][         10][1-0]
#  12>       FPAREN_CLOSE[          FUNC_CALL][  1/  2/  3/  0][0/0/0][  100000010][0-0] )
#  12>          SEMICOLON[               NONE][  2/  3/  4/  0][0/0/0][  100000000][0-0]  ;
#  12>            NEWLINE[               NONE][  3/  4/  1/  0][0/0/0][          0][2-0]
#  14>          FUNC_CALL[               NONE][  1/  1/  9/  0][0/0/0][      60000][0-0] mapToPtr
#  14>        FPAREN_OPEN[          FUNC_CALL][  9/  9/ 10/  0][0/0/0][  100000000][0-0]         (
#  14>        SQUARE_OPEN[         CPP_LAMBDA][ 10/ 10/ 11/  0][0/1/0][  100040010][0-0]          [
#  14>               ADDR[               NONE][ 11/ 11/ 12/  0][0/2/0][  100060010][0-0]           &
#  14>       SQUARE_CLOSE[         CPP_LAMBDA][ 12/ 12/ 13/  0][0/1/0][  100000010][0-0]            ]
#  14>        FPAREN_OPEN[         CPP_LAMBDA][ 13/ 13/ 14/  0][0/1/0][  100000010][0-0]             (
#  14>          QUALIFIER[               NONE][ 14/ 14/ 19/  0][0/2/0][      50010][0-0]              const
#  14>               TYPE[               NONE][ 20/ 20/ 25/  1][0/2/0][     400010][0-0]                    Props
#  14>              BYREF[               NONE][ 26/ 26/ 27/  1][0/2/0][  100000010][0-0]                          &
#  14>               WORD[               NONE][ 27/ 27/ 37/  0][0/2/0][     800010][0-0]                           addOnProps
#  14>       FPAREN_CLOSE[         CPP_LAMBDA][ 37/ 37/ 38/  0][0/1/0][  100000010][0-0]                                     )
#  14>         BRACE_OPEN[         CPP_LAMBDA][ 39/ 39/ 40/  1][0/1/0][  100000010][0-0]                                       {
#  14>            NEWLINE[               NONE][ 40/ 40/  7/  0][1/2/0][         10][1-0]
#  15>               TYPE[               NONE][  3/  7/ 14/  0][1/2/0][   10460010][0-0]   FSTheme
#  15>           PTR_TYPE[               NONE][ 11/ 15/ 16/  1][1/2/0][  110400010][0-0]           *
#  15>          QUALIFIER[               NONE][ 12/ 16/ 21/  0][1/2/0][   10450010][0-0]            const
#  15>               WORD[               NONE][ 18/ 22/ 27/  1][1/2/0][   11800010][0-0]                  theme
#  15>             ASSIGN[               NONE][ 24/ 28/ 29/  1][1/2/0][  100000010][0-0]                        =
#  15>               TYPE[               NONE][ 26/ 30/ 32/  1][1/2/0][      40010][0-0]                          CK
#  15>          DC_MEMBER[               NONE][ 28/ 32/ 34/  0][1/2/0][  100000010][0-0]                            ::
#  15>          FUNC_CALL[               NONE][ 30/ 34/ 42/  0][1/2/0][         10][0-0]                              getTheme
#  15>        FPAREN_OPEN[          FUNC_CALL][ 38/ 42/ 43/  0][1/2/0][  100000010][0-0]                                      (
#  15>       FPAREN_CLOSE[          FUNC_CALL][ 39/ 43/ 44/  0][1/2/0][  100000010][0-0]                                       )
#  15>          SEMICOLON[               NONE][ 40/ 44/ 45/  0][1/2/0][  100000010][0-0]                                        ;
#  15>            NEWLINE[               NONE][ 41/ 45/  1/  0][1/2/0][         10][1-0]
#  16>        BRACE_CLOSE[         CPP_LAMBDA][  1/  1/  2/  0][0/1/0][  100000010][0-0] }
#  16>       FPAREN_CLOSE[          FUNC_CALL][  2/  2/  3/  0][0/0/0][  100000010][0-0]  )
#  16>          SEMICOLON[               NONE][  3/  3/  4/  0][0/0/0][  100000000][0-0]   ;
#  16>            NEWLINE[               NONE][  4/  4/  1/  0][0/0/0][          0][2-0]
#  18>          FUNC_CALL[               NONE][  1/  1/ 11/  0][0/0/0][      60000][0-0] methodCall
#  18>        FPAREN_OPEN[          FUNC_CALL][ 11/ 11/ 12/  0][0/0/0][  100000000][0-0]           (
#  18>            NEWLINE[               NONE][ 12/ 12/  0/  0][0/0/0][          0][1-0]
#  18>               WORD[               NONE][  3/ 12/ 13/  0][0/1/0][      40010][0-0]   x
#  18>              COMMA[               NONE][  4/ 13/ 14/  0][0/1/0][  100000010][0-0]    ,
#  18>            NEWLINE[               NONE][  5/ 15/  0/  0][0/1/0][         10][1-0]
#  18>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][  3/ 15/ 16/  1][0/1/0][  100040010][0-0]   ^
#  18>               TYPE[      OC_BLOCK_EXPR][  4/ 16/ 18/  0][0/1/0][ 2000040010][0-0]    FS
#  18>          DC_MEMBER[      OC_BLOCK_EXPR][  6/ 18/ 20/  0][0/1/0][ 2100000010][0-0]      ::
#  18>               TYPE[      OC_BLOCK_EXPR][  8/ 20/ 30/  0][0/1/0][ 2000000010][0-0]        ActionCell
#  18>          DC_MEMBER[      OC_BLOCK_EXPR][ 18/ 30/ 32/  0][0/1/0][ 2100000010][0-0]                  ::
#  18>               TYPE[      OC_BLOCK_EXPR][ 20/ 32/ 36/  0][0/1/0][ 2000000010][0-0]                    Item
#  18>        FPAREN_OPEN[      OC_BLOCK_EXPR][ 25/ 37/ 38/  1][0/1/0][  100000010][0-0]                         (
#  18>               TYPE[      OC_BLOCK_EXPR][ 26/ 38/ 42/  0][0/2/0][ 4000450010][0-0]                          Item
#  18>               WORD[      OC_BLOCK_EXPR][ 31/ 43/ 47/  1][0/2/0][ 4000800010][0-0]                               item
#  18>       FPAREN_CLOSE[      OC_BLOCK_EXPR][ 35/ 47/ 48/  0][0/1/0][ 4100000010][0-0]                                   )
#  18>         BRACE_OPEN[      OC_BLOCK_EXPR][ 37/ 49/ 50/  1][0/1/0][  100000010][0-0]                                     {
#  18>            NEWLINE[               NONE][ 38/ 50/ 15/  0][1/2/0][         10][1-0]
#  19>               TYPE[               NONE][  5/ 15/ 22/  0][1/2/0][     460010][0-0]     variant
#  19>             MEMBER[               NONE][ 12/ 22/ 23/  0][1/2/0][  100400010][0-0]            .
#  19>               TYPE[               NONE][ 13/ 23/ 29/  0][1/2/0][     400010][0-0]             action
#  19>             MEMBER[               NONE][ 19/ 29/ 30/  0][1/2/0][  100000010][0-0]                   .
#  19>          FUNC_CALL[               NONE][ 20/ 30/ 34/  0][1/2/0][         10][0-0]                    send
#  19>        FPAREN_OPEN[          FUNC_CALL][ 24/ 34/ 35/  0][1/2/0][  100000010][0-0]                        (
#  19>               WORD[               NONE][ 25/ 35/ 44/  0][1/3/0][      40010][0-0]                         component
#  19>       FPAREN_CLOSE[          FUNC_CALL][ 34/ 44/ 45/  0][1/2/0][  100000010][0-0]                                  )
#  19>          SEMICOLON[               NONE][ 35/ 45/ 46/  0][1/2/0][  100000010][0-0]                                   ;
#  19>            NEWLINE[               NONE][ 36/ 46/  7/  0][1/2/0][         10][1-0]
#  20>        BRACE_CLOSE[      OC_BLOCK_EXPR][  3/  7/  8/  0][0/1/0][  100000010][0-0]   }
#  20>            NEWLINE[               NONE][  4/  8/  0/  0][0/1/0][         10][1-0]
#  20>       FPAREN_CLOSE[          FUNC_CALL][  1/  8/  9/  0][0/0/0][  100000010][0-0] )
#  20>          SEMICOLON[               NONE][  2/  9/ 10/  0][0/0/0][  100000000][0-0]  ;
#  20>            NEWLINE[               NONE][  3/ 10/  7/  0][0/0/0][          0][2-0]
#  22>          FUNC_CALL[               NONE][  1/  7/ 17/  0][0/0/0][      60000][0-0] methodCall
#  22>        FPAREN_OPEN[          FUNC_CALL][ 11/ 17/ 18/  0][0/0/0][  100000000][0-0]           (
#  22>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 12/ 18/ 19/  0][0/1/0][  100040000][0-0]            ^
#  22>               TYPE[      OC_BLOCK_EXPR][ 13/ 19/ 21/  0][0/1/0][ 2000040000][0-0]             FS
#  22>          DC_MEMBER[      OC_BLOCK_EXPR][ 15/ 21/ 23/  0][0/1/0][ 2100000000][0-0]               ::
#  22>               TYPE[      OC_BLOCK_EXPR][ 17/ 23/ 33/  0][0/1/0][ 2000000000][0-0]                 ActionCell
#  22>          DC_MEMBER[      OC_BLOCK_EXPR][ 27/ 33/ 35/  0][0/1/0][ 2100000000][0-0]                           ::
#  22>               TYPE[      OC_BLOCK_EXPR][ 29/ 35/ 39/  0][0/1/0][ 2000000000][0-0]                             Item
#  22>        FPAREN_OPEN[      OC_BLOCK_EXPR][ 34/ 40/ 41/  1][0/1/0][  100000000][0-0]                                  (
#  22>               TYPE[      OC_BLOCK_EXPR][ 35/ 41/ 45/  0][0/2/0][ 4000450000][0-0]                                   Item
#  22>               WORD[      OC_BLOCK_EXPR][ 40/ 46/ 50/  1][0/2/0][ 4000800000][0-0]                                        item
#  22>       FPAREN_CLOSE[      OC_BLOCK_EXPR][ 44/ 50/ 51/  0][0/1/0][ 4100000000][0-0]                                            )
#  22>         BRACE_OPEN[      OC_BLOCK_EXPR][ 46/ 52/ 53/  1][0/1/0][  100000000][0-0]                                              {
#  22>            NEWLINE[               NONE][ 47/ 53/ 15/  0][1/2/0][          0][1-0]
#  23>               TYPE[               NONE][  3/ 15/ 22/  0][1/2/0][     460000][0-0]   variant
#  23>             MEMBER[               NONE][ 10/ 22/ 23/  0][1/2/0][  100400000][0-0]          .
#  23>               TYPE[               NONE][ 11/ 23/ 29/  0][1/2/0][     400000][0-0]           action
#  23>             MEMBER[               NONE][ 17/ 29/ 30/  0][1/2/0][  100000000][0-0]                 .
#  23>          FUNC_CALL[               NONE][ 18/ 30/ 34/  0][1/2/0][          0][0-0]                  send
#  23>        FPAREN_OPEN[          FUNC_CALL][ 22/ 34/ 35/  0][1/2/0][  100000000][0-0]                      (
#  23>               WORD[               NONE][ 23/ 35/ 44/  0][1/3/0][      40010][0-0]                       component
#  23>       FPAREN_CLOSE[          FUNC_CALL][ 32/ 44/ 45/  0][1/2/0][  100000010][0-0]                                )
#  23>          SEMICOLON[               NONE][ 33/ 45/ 46/  0][1/2/0][  100000000][0-0]                                 ;
#  23>            NEWLINE[               NONE][ 34/ 46/  7/  0][1/2/0][          0][1-0]
#  24>        BRACE_CLOSE[      OC_BLOCK_EXPR][  1/  7/  8/  0][0/1/0][  100000000][0-0] }
#  24>       FPAREN_CLOSE[          FUNC_CALL][  2/  8/  9/  0][0/0/0][  100000000][0-0]  )
#  24>          SEMICOLON[               NONE][  3/  9/ 10/  0][0/0/0][  100000000][0-0]   ;
#  24>            NEWLINE[               NONE][  4/ 10/  1/  0][0/0/0][          0][2-0]
#  26>          FUNC_CALL[               NONE][  1/  1/ 11/  0][0/0/0][      60000][0-0] methodCall
#  26>        FPAREN_OPEN[          FUNC_CALL][ 11/ 11/ 12/  0][0/0/0][  100000000][0-0]           (
#  26>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 12/ 12/ 13/  0][0/1/0][  100040000][0-0]            ^
#  26>               TYPE[      OC_BLOCK_EXPR][ 13/ 13/ 15/  0][0/1/0][ 2000040000][0-0]             FS
#  26>          DC_MEMBER[      OC_BLOCK_EXPR][ 15/ 15/ 17/  0][0/1/0][ 2100000000][0-0]               ::
#  26>               TYPE[      OC_BLOCK_EXPR][ 17/ 17/ 27/  0][0/1/0][ 2000000000][0-0]                 ActionCell
#  26>          DC_MEMBER[      OC_BLOCK_EXPR][ 27/ 27/ 29/  0][0/1/0][ 2100000000][0-0]                           ::
#  26>               TYPE[      OC_BLOCK_EXPR][ 29/ 29/ 33/  0][0/1/0][ 2000000000][0-0]                             Item
#  26>        FPAREN_OPEN[      OC_BLOCK_EXPR][ 34/ 34/ 35/  1][0/1/0][  100000000][0-0]                                  (
#  26>               TYPE[      OC_BLOCK_EXPR][ 35/ 35/ 39/  0][0/2/0][ 4000450000][0-0]                                   Item
#  26>               WORD[      OC_BLOCK_EXPR][ 40/ 40/ 44/  1][0/2/0][ 4000800000][0-0]                                        item
#  26>       FPAREN_CLOSE[      OC_BLOCK_EXPR][ 44/ 44/ 45/  0][0/1/0][ 4100000000][0-0]                                            )
#  26>         BRACE_OPEN[      OC_BLOCK_EXPR][ 46/ 46/ 47/  1][0/1/0][  100000000][0-0]                                              {
#  26>            NEWLINE[               NONE][ 47/ 47/ 15/  0][1/2/0][          0][1-0]
#  27>               TYPE[               NONE][  3/ 15/ 22/  0][1/2/0][     460000][0-0]   variant
#  27>             MEMBER[               NONE][ 10/ 22/ 23/  0][1/2/0][  100400000][0-0]          .
#  27>               TYPE[               NONE][ 11/ 23/ 29/  0][1/2/0][     400000][0-0]           action
#  27>             MEMBER[               NONE][ 17/ 29/ 30/  0][1/2/0][  100000000][0-0]                 .
#  27>          FUNC_CALL[               NONE][ 18/ 30/ 34/  0][1/2/0][          0][0-0]                  send
#  27>        FPAREN_OPEN[          FUNC_CALL][ 22/ 34/ 35/  0][1/2/0][  100000000][0-0]                      (
#  27>               WORD[               NONE][ 23/ 35/ 44/  0][1/3/0][      40010][0-0]                       component
#  27>       FPAREN_CLOSE[          FUNC_CALL][ 32/ 44/ 45/  0][1/2/0][  100000010][0-0]                                )
#  27>          SEMICOLON[               NONE][ 33/ 45/ 46/  0][1/2/0][  100000000][0-0]                                 ;
#  27>            NEWLINE[               NONE][ 34/ 46/  7/  0][1/2/0][          0][1-0]
#  28>        BRACE_CLOSE[      OC_BLOCK_EXPR][  1/  7/  8/  0][0/1/0][  100000000][0-0] }
#  28>       FPAREN_CLOSE[          FUNC_CALL][  2/  8/  9/  0][0/0/0][  100000000][0-0]  )
#  28>          SEMICOLON[               NONE][  3/  9/ 10/  0][0/0/0][  100000000][0-0]   ;
#  28>            NEWLINE[               NONE][  4/ 10/  1/  0][0/0/0][          0][2-0]
#  31>          FUNC_CALL[               NONE][  1/  1/ 11/  0][0/0/0][      60000][0-0] methodCall
#  31>        FPAREN_OPEN[          FUNC_CALL][ 11/ 11/ 12/  0][0/0/0][  100000000][0-0]           (
#  31>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 12/ 12/ 13/  0][0/1/0][  100040000][0-0]            ^
#  31>         BRACE_OPEN[      OC_BLOCK_EXPR][ 13/ 13/ 14/  0][0/1/0][  100040000][0-0]             {
#  31>            NEWLINE[               NONE][ 14/ 14/ 15/  0][1/2/0][          0][1-0]
#  32>               TYPE[               NONE][  3/ 15/ 22/  0][1/2/0][     460000][0-0]   variant
#  32>             MEMBER[               NONE][ 10/ 22/ 23/  0][1/2/0][  100400000][0-0]          .
#  32>               TYPE[               NONE][ 11/ 23/ 29/  0][1/2/0][     400000][0-0]           action
#  32>             MEMBER[               NONE][ 17/ 29/ 30/  0][1/2/0][  100000000][0-0]                 .
#  32>          FUNC_CALL[               NONE][ 18/ 30/ 34/  0][1/2/0][          0][0-0]                  send
#  32>        FPAREN_OPEN[          FUNC_CALL][ 22/ 34/ 35/  0][1/2/0][  100000000][0-0]                      (
#  32>               WORD[               NONE][ 23/ 35/ 44/  0][1/3/0][      40010][0-0]                       component
#  32>       FPAREN_CLOSE[          FUNC_CALL][ 32/ 44/ 45/  0][1/2/0][  100000010][0-0]                                )
#  32>          SEMICOLON[               NONE][ 33/ 45/ 46/  0][1/2/0][  100000000][0-0]                                 ;
#  32>            NEWLINE[               NONE][ 34/ 46/  7/  0][1/2/0][          0][1-0]
#  33>        BRACE_CLOSE[      OC_BLOCK_EXPR][  1/  7/  8/  0][0/1/0][  100000000][0-0] }
#  33>       FPAREN_CLOSE[          FUNC_CALL][  2/  8/  9/  0][0/0/0][  100000000][0-0]  )
#  33>          SEMICOLON[               NONE][  3/  9/ 10/  0][0/0/0][  100000000][0-0]   ;
#  33>            NEWLINE[               NONE][  4/ 10/  7/  0][0/0/0][          0][2-0]
#  35>               WORD[               NONE][  1/  7/ 17/  0][0/0/0][      60000][0-0] methodCall
#  35>         PAREN_OPEN[               NONE][ 12/ 17/ 18/  0][0/0/0][  100000000][0-0]            (
#  35>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 13/ 18/ 19/  0][0/1/0][  100040000][0-0]             ^
#  35>         BRACE_OPEN[      OC_BLOCK_EXPR][ 14/ 19/ 20/  0][0/1/0][  100040000][0-0]              {
#  35>            NEWLINE[               NONE][ 15/ 20/ 15/  0][1/2/0][          0][1-0]
#  36>               TYPE[               NONE][  3/ 15/ 22/  0][1/2/0][     460000][0-0]   variant
#  36>             MEMBER[               NONE][ 10/ 22/ 23/  0][1/2/0][  100400000][0-0]          .
#  36>               TYPE[               NONE][ 11/ 23/ 29/  0][1/2/0][     400000][0-0]           action
#  36>             MEMBER[               NONE][ 17/ 29/ 30/  0][1/2/0][  100000000][0-0]                 .
#  36>          FUNC_CALL[               NONE][ 18/ 30/ 34/  0][1/2/0][          0][0-0]                  send
#  36>        FPAREN_OPEN[          FUNC_CALL][ 22/ 34/ 35/  0][1/2/0][  100000000][0-0]                      (
#  36>               WORD[               NONE][ 23/ 35/ 44/  0][1/3/0][      40010][0-0]                       component
#  36>       FPAREN_CLOSE[          FUNC_CALL][ 32/ 44/ 45/  0][1/2/0][  100000010][0-0]                                )
#  36>          SEMICOLON[               NONE][ 33/ 45/ 46/  0][1/2/0][  100000000][0-0]                                 ;
#  36>            NEWLINE[               NONE][ 34/ 46/  7/  0][1/2/0][          0][1-0]
#  37>        BRACE_CLOSE[      OC_BLOCK_EXPR][  1/  7/  8/  0][0/1/0][  100000000][0-0] }
#  37>              COMMA[               NONE][  2/  8/  9/  0][0/1/0][  100060000][0-0]  ,
#  37>               WORD[               NONE][  4/ 10/ 11/  1][0/1/0][      40000][0-0]    x
#  37>        PAREN_CLOSE[               NONE][  5/ 11/ 12/  0][0/0/0][  100000000][0-0]     )
#  37>          SEMICOLON[               NONE][  6/ 12/ 13/  0][0/0/0][  100000000][0-0]      ;
#  37>            NEWLINE[               NONE][  7/ 13/  1/  0][0/0/0][          0][2-0]
#  40>          FUNC_CALL[               NONE][  1/  1/ 11/  0][0/0/0][      60000][0-0] methodCall
#  40>        FPAREN_OPEN[          FUNC_CALL][ 11/ 11/ 12/  0][0/0/0][  100000000][0-0]           (
#  40>            NEWLINE[               NONE][ 12/ 14/  0/  0][0/0/0][          0][1-0]
#  40>               WORD[               NONE][  3/ 14/ 15/  2][0/1/0][      40010][0-0]   x
#  40>              COMMA[               NONE][  4/ 15/ 16/  0][0/1/0][  100000010][0-0]    ,
#  40>            NEWLINE[               NONE][  5/ 17/  0/  0][0/1/0][         10][1-0]
#  40>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][  3/ 17/ 18/  1][0/1/0][  100040010][0-0]   ^
#  40>               TYPE[      OC_BLOCK_EXPR][  4/ 18/ 20/  0][0/1/0][ 2000040010][0-0]    id
#  40>        FPAREN_OPEN[      OC_BLOCK_EXPR][  7/ 21/ 22/  1][0/1/0][  100000010][0-0]       (
#  40>               TYPE[      OC_BLOCK_EXPR][  8/ 22/ 31/  0][0/2/0][ 4000440010][0-0]        Component
#  40>           PTR_TYPE[      OC_BLOCK_EXPR][ 18/ 32/ 33/  1][0/2/0][ 4100000010][0-0]                  *
#  40>               WORD[      OC_BLOCK_EXPR][ 19/ 33/ 34/  0][0/2/0][ 4000840010][0-0]                   c
#  40>       FPAREN_CLOSE[      OC_BLOCK_EXPR][ 20/ 34/ 35/  0][0/1/0][ 4100000010][0-0]                    )
#  40>         BRACE_OPEN[      OC_BLOCK_EXPR][ 22/ 36/ 37/  1][0/1/0][  100000010][0-0]                      {
#  40>            NEWLINE[               NONE][ 23/ 37/ 33/  0][1/2/0][         10][1-0]
#  41>          FUNC_CALL[               NONE][  5/ 33/ 38/  0][1/2/0][      60010][0-0]     NSLog
#  41>        FPAREN_OPEN[          FUNC_CALL][ 10/ 38/ 39/  0][1/2/0][  100000010][0-0]          (
#  41>             STRING[               NONE][ 11/ 39/ 51/  0][1/3/0][      40010][0-0]           @"Something"
#  41>       FPAREN_CLOSE[          FUNC_CALL][ 23/ 51/ 52/  0][1/2/0][  100000010][0-0]                       )
#  41>          SEMICOLON[               NONE][ 24/ 52/ 53/  0][1/2/0][  100000010][0-0]                        ;
#  41>            NEWLINE[               NONE][ 25/ 53/ 31/  0][1/2/0][         10][1-0]
#  42>        BRACE_CLOSE[      OC_BLOCK_EXPR][  3/ 31/ 32/  0][0/1/0][  100000010][0-0]   }
#  42>            NEWLINE[               NONE][  4/ 32/  0/  0][0/1/0][         10][1-0]
#  42>       FPAREN_CLOSE[          FUNC_CALL][  1/ 32/ 33/  0][0/0/0][  100000010][0-0] )
#  42>          SEMICOLON[               NONE][  2/ 33/ 34/  0][0/0/0][  100000000][0-0]  ;
#  42>            NEWLINE[               NONE][  3/ 34/  1/  0][0/0/0][          0][2-0]
#  44>          FUNC_CALL[               NONE][  1/  1/ 11/  0][0/0/0][      60000][0-0] methodCall
#  44>        FPAREN_OPEN[          FUNC_CALL][ 11/ 11/ 12/  0][0/0/0][  100000000][0-0]           (
#  44>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 14/ 14/ 15/  2][0/1/0][  100040000][0-0]              ^
#  44>               TYPE[      OC_BLOCK_EXPR][ 15/ 15/ 17/  0][0/1/0][ 2000040000][0-0]               id
#  44>        FPAREN_OPEN[      OC_BLOCK_EXPR][ 18/ 18/ 19/  1][0/1/0][  100000000][0-0]                  (
#  44>               TYPE[      OC_BLOCK_EXPR][ 19/ 19/ 28/  0][0/2/0][ 4000440000][0-0]                   Component
#  44>           PTR_TYPE[      OC_BLOCK_EXPR][ 29/ 29/ 30/  1][0/2/0][ 4100000000][0-0]                             *
#  44>               WORD[      OC_BLOCK_EXPR][ 30/ 30/ 31/  0][0/2/0][ 4000840000][0-0]                              c
#  44>       FPAREN_CLOSE[      OC_BLOCK_EXPR][ 31/ 31/ 32/  0][0/1/0][ 4100000000][0-0]                               )
#  44>         BRACE_OPEN[      OC_BLOCK_EXPR][ 33/ 33/ 34/  1][0/1/0][  100000000][0-0]                                 {
#  44>            NEWLINE[               NONE][ 34/ 34/ 33/  0][1/2/0][          0][1-0]
#  45>          FUNC_CALL[               NONE][  3/ 33/ 38/  0][1/2/0][      60000][0-0]   NSLog
#  45>        FPAREN_OPEN[          FUNC_CALL][  8/ 38/ 39/  0][1/2/0][  100000000][0-0]        (
#  45>             STRING[               NONE][  9/ 39/ 51/  0][1/3/0][      40010][0-0]         @"Something"
#  45>       FPAREN_CLOSE[          FUNC_CALL][ 21/ 51/ 52/  0][1/2/0][  100000010][0-0]                     )
#  45>          SEMICOLON[               NONE][ 22/ 52/ 53/  0][1/2/0][  100000000][0-0]                      ;
#  45>            NEWLINE[               NONE][ 23/ 53/ 31/  0][1/2/0][          0][1-0]
#  46>        BRACE_CLOSE[      OC_BLOCK_EXPR][  1/ 31/ 32/  0][0/1/0][  100000000][0-0] }
#  46>       FPAREN_CLOSE[          FUNC_CALL][  2/ 32/ 33/  0][0/0/0][  100000000][0-0]  )
#  46>          SEMICOLON[               NONE][  3/ 33/ 34/  0][0/0/0][  100000000][0-0]   ;
#  46>            NEWLINE[               NONE][  4/ 34/  1/  0][0/0/0][          0][2-0]
#  48>          FUNC_CALL[               NONE][  1/  1/ 11/  0][0/0/0][      60000][0-0] methodCall
#  48>        FPAREN_OPEN[          FUNC_CALL][ 11/ 11/ 12/  0][0/0/0][  100000000][0-0]           (
#  48>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 14/ 14/ 15/  2][0/1/0][  100040000][0-0]              ^
#  48>        FPAREN_OPEN[      OC_BLOCK_EXPR][ 15/ 15/ 16/  0][0/1/0][  100040000][0-0]               (
#  48>               TYPE[      OC_BLOCK_EXPR][ 16/ 16/ 25/  0][0/2/0][ 4000440000][0-0]                Component
#  48>           PTR_TYPE[      OC_BLOCK_EXPR][ 26/ 26/ 27/  1][0/2/0][ 4100000000][0-0]                          *
#  48>               WORD[      OC_BLOCK_EXPR][ 27/ 27/ 28/  0][0/2/0][ 4000840000][0-0]                           c
#  48>       FPAREN_CLOSE[      OC_BLOCK_EXPR][ 28/ 28/ 29/  0][0/1/0][ 4100000000][0-0]                            )
#  48>         BRACE_OPEN[      OC_BLOCK_EXPR][ 30/ 30/ 31/  1][0/1/0][  100000000][0-0]                              {
#  48>            NEWLINE[               NONE][ 31/ 31/ 30/  0][1/2/0][          0][1-0]
#  49>          FUNC_CALL[               NONE][  3/ 30/ 35/  0][1/2/0][      60000][0-0]   NSLog
#  49>        FPAREN_OPEN[          FUNC_CALL][  8/ 35/ 36/  0][1/2/0][  100000000][0-0]        (
#  49>             STRING[               NONE][  9/ 36/ 48/  0][1/3/0][      40010][0-0]         @"Something"
#  49>       FPAREN_CLOSE[          FUNC_CALL][ 21/ 48/ 49/  0][1/2/0][  100000010][0-0]                     )
#  49>          SEMICOLON[               NONE][ 22/ 49/ 50/  0][1/2/0][  100000000][0-0]                      ;
#  49>            NEWLINE[               NONE][ 23/ 50/ 28/  0][1/2/0][          0][1-0]
#  50>        BRACE_CLOSE[      OC_BLOCK_EXPR][  1/ 28/ 29/  0][0/1/0][  100000000][0-0] }
#  50>       FPAREN_CLOSE[          FUNC_CALL][  2/ 29/ 30/  0][0/0/0][  100000000][0-0]  )
#  50>          SEMICOLON[               NONE][  3/ 30/ 31/  0][0/0/0][  100000000][0-0]   ;
#  50>            NEWLINE[               NONE][  4/ 31/  1/  0][0/0/0][          0][2-0]
#  52>               WORD[               NONE][  1/  1/ 11/  0][0/0/0][      60000][0-0] methodCall
#  52>         PAREN_OPEN[               NONE][ 12/ 11/ 12/  0][0/0/0][  100000000][0-0]            (
#  52>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 13/ 12/ 13/  0][0/1/0][  100040000][0-0]             ^
#  52>        FPAREN_OPEN[      OC_BLOCK_EXPR][ 14/ 14/ 15/  1][0/1/0][  100040000][0-0]              (
#  52>               TYPE[      OC_BLOCK_EXPR][ 15/ 15/ 24/  0][0/2/0][ 4000440000][0-0]               Component
#  52>           PTR_TYPE[      OC_BLOCK_EXPR][ 25/ 25/ 26/  1][0/2/0][ 4100000000][0-0]                         *
#  52>               WORD[      OC_BLOCK_EXPR][ 26/ 26/ 27/  0][0/2/0][ 4000840000][0-0]                          c
#  52>       FPAREN_CLOSE[      OC_BLOCK_EXPR][ 27/ 27/ 28/  0][0/1/0][ 4100000000][0-0]                           )
#  52>         BRACE_OPEN[      OC_BLOCK_EXPR][ 29/ 29/ 30/  1][0/1/0][  100000000][0-0]                             {
#  52>            NEWLINE[               NONE][ 30/ 30/ 30/  0][1/2/0][          0][1-0]
#  53>          FUNC_CALL[               NONE][  3/ 30/ 35/  0][1/2/0][      60000][0-0]   NSLog
#  53>        FPAREN_OPEN[          FUNC_CALL][  8/ 35/ 36/  0][1/2/0][  100000000][0-0]        (
#  53>             STRING[               NONE][  9/ 36/ 48/  0][1/3/0][      40010][0-0]         @"Something"
#  53>       FPAREN_CLOSE[          FUNC_CALL][ 21/ 48/ 49/  0][1/2/0][  100000010][0-0]                     )
#  53>          SEMICOLON[               NONE][ 22/ 49/ 50/  0][1/2/0][  100000000][0-0]                      ;
#  53>            NEWLINE[               NONE][ 23/ 50/ 28/  0][1/2/0][          0][1-0]
#  54>        BRACE_CLOSE[      OC_BLOCK_EXPR][  1/ 28/ 29/  0][0/1/0][  100000000][0-0] }
#  54>              COMMA[               NONE][  2/ 29/ 30/  0][0/1/0][  100060000][0-0]  ,
#  54>               WORD[               NONE][  4/ 31/ 32/  1][0/1/0][      40000][0-0]    y
#  54>        PAREN_CLOSE[               NONE][  5/ 32/ 33/  0][0/0/0][  100000000][0-0]     )
#  54>          SEMICOLON[               NONE][  6/ 33/ 34/  0][0/0/0][  100000000][0-0]      ;
#  54>            NEWLINE[               NONE][  7/ 34/  3/  0][0/0/0][          0][2-0]
#  56>          FUNC_CALL[               NONE][  1/  3/ 13/  0][0/0/0][      60000][0-0] methodCall
#  56>        FPAREN_OPEN[          FUNC_CALL][ 11/ 13/ 14/  0][0/0/0][  100000000][0-0]           (
#  56>            NEWLINE[               NONE][ 12/ 14/  0/  0][0/0/0][          0][1-0]
#  56>               WORD[               NONE][  3/ 14/ 15/  0][0/1/0][      40010][0-0]   x
#  56>              COMMA[               NONE][  4/ 15/ 16/  0][0/1/0][  100000010][0-0]    ,
#  56>            NEWLINE[               NONE][  5/ 18/  0/  0][0/1/0][         10][1-0]
#  56>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][  3/ 18/ 19/  2][0/1/0][  100040010][0-0]   ^
#  56>        FPAREN_OPEN[      OC_BLOCK_EXPR][  4/ 19/ 20/  0][0/1/0][  100040010][0-0]    (
#  56>               TYPE[      OC_BLOCK_EXPR][  5/ 20/ 29/  0][0/2/0][ 4000440010][0-0]     Component
#  56>           PTR_TYPE[      OC_BLOCK_EXPR][ 15/ 30/ 31/  1][0/2/0][ 4100000010][0-0]               *
#  56>               WORD[      OC_BLOCK_EXPR][ 16/ 31/ 32/  0][0/2/0][ 4000840010][0-0]                c
#  56>       FPAREN_CLOSE[      OC_BLOCK_EXPR][ 17/ 32/ 33/  0][0/1/0][ 4100000010][0-0]                 )
#  56>         BRACE_OPEN[      OC_BLOCK_EXPR][ 19/ 34/ 35/  1][0/1/0][  100000010][0-0]                   {
#  56>            NEWLINE[               NONE][ 20/ 35/ 30/  0][1/2/0][         10][1-0]
#  57>          FUNC_CALL[               NONE][  5/ 30/ 35/  0][1/2/0][      60010][0-0]     NSLog
#  57>        FPAREN_OPEN[          FUNC_CALL][ 10/ 35/ 36/  0][1/2/0][  100000010][0-0]          (
#  57>             STRING[               NONE][ 11/ 36/ 48/  0][1/3/0][      40010][0-0]           @"Something"
#  57>       FPAREN_CLOSE[          FUNC_CALL][ 23/ 48/ 49/  0][1/2/0][  100000010][0-0]                       )
#  57>          SEMICOLON[               NONE][ 24/ 49/ 50/  0][1/2/0][  100000010][0-0]                        ;
#  57>            NEWLINE[               NONE][ 25/ 50/ 28/  0][1/2/0][         10][1-0]
#  58>        BRACE_CLOSE[      OC_BLOCK_EXPR][  3/ 28/ 29/  0][0/1/0][  100000010][0-0]   }
#  58>              COMMA[               NONE][  4/ 29/ 30/  0][0/1/0][  100060010][0-0]    ,
#  58>            NEWLINE[               NONE][  5/ 31/  0/  0][0/1/0][         10][1-0]
#  58>               WORD[               NONE][  3/ 31/ 32/  1][0/1/0][      40010][0-0]   y
#  58>            NEWLINE[               NONE][  4/ 32/  0/  0][0/1/0][         10][1-0]
#  58>       FPAREN_CLOSE[          FUNC_CALL][  1/ 32/ 33/  0][0/0/0][  100000010][0-0] )
#  58>          SEMICOLON[               NONE][  2/ 33/ 34/  0][0/0/0][  100000000][0-0]  ;
#  58>            NEWLINE[               NONE][  3/ 34/  1/  0][0/0/0][          0][2-0]
#  60>        COMMENT_CPP[      COMMENT_WHOLE][  1/  1/ 20/  0][0/0/0][          0][0-0] // ternary operator
#  60>            NEWLINE[               NONE][ 20/ 20/  1/  0][0/0/0][          0][2-0]
#  62>               WORD[               NONE][  1/  1/  5/  0][0/0/0][      60000][0-0] flag
#  62>            NEWLINE[               NONE][  5/  5/  8/  0][0/0/0][          0][1-0]
#  63>           QUESTION[               NONE][  1/  8/  9/  0][0/0/0][  100000000][0-0] ?
#  63>               WORD[               NONE][  3/ 10/ 17/  1][0/0/0][      40000][0-0]   isChild
#  63>            NEWLINE[               NONE][ 10/ 17/  5/  0][0/0/0][          0][1-0]
#  64>           QUESTION[               NONE][  3/  5/  6/  0][0/0/0][  100000000][0-0]   ?
#  64>               WORD[               NONE][  5/  7/ 15/  1][0/0/0][      40000][0-0]     TypeBack
#  64>            NEWLINE[               NONE][ 13/ 15/  1/  0][0/0/0][          0][1-0]
#  65>         COND_COLON[               NONE][  3/  1/  2/  0][0/0/0][  100000000][0-0]   :
#  65>               WORD[               NONE][  5/  3/ 13/  1][0/0/0][      60000][0-0]     TypeCancel
#  65>            NEWLINE[               NONE][ 15/ 13/  8/  0][0/0/0][          0][1-0]
#  66>         COND_COLON[               NONE][  1/  8/  9/  0][0/0/0][  100000000][0-0] :
#  66>               WORD[               NONE][  3/ 10/ 13/  1][0/0/0][      60000][0-0]   nil
#  66>          SEMICOLON[               NONE][  6/ 13/ 14/  0][0/0/0][  100000000][0-0]      ;
#  66>            NEWLINE[               NONE][  7/ 14/  1/  0][0/0/0][          0][2-0]
#  68>               WORD[               NONE][  1/  1/  5/  0][0/0/0][      60000][0-0] flag
#  68>            NEWLINE[               NONE][  5/  5/  8/  0][0/0/0][          0][1-0]
#  69>           QUESTION[               NONE][  1/  8/  9/  0][0/0/0][  100000000][0-0] ?
#  69>        SQUARE_OPEN[             OC_MSG][  3/ 10/ 11/  1][0/0/0][  100044000][0-0]   [
#  69>       OC_MSG_CLASS[               NONE][  4/ 11/ 20/  0][0/1/0][      64000][0-0]    Component
#  69>            NEWLINE[               NONE][ 13/ 20/ 11/  0][0/1/0][       4000][1-0]
#  70>        OC_MSG_FUNC[               NONE][  4/ 11/ 20/  0][0/1/0][       4000][0-0]    component
#  70>           OC_COLON[               NONE][ 13/ 20/ 21/  0][0/1/0][  100004000][0-0]             :
#  70>         PAREN_OPEN[               NONE][ 14/ 21/ 22/  0][0/1/0][  100064000][0-0]              (
#  70>               WORD[               NONE][ 15/ 22/ 40/  0][0/2/0][      44000][0-0]               isChildActionSheet
#  70>           QUESTION[               NONE][ 34/ 41/ 42/  1][0/2/0][  100004000][0-0]                                  ?
#  70>               WORD[               NONE][ 36/ 43/ 51/  1][0/2/0][      44000][0-0]                                    TypeBack
#  70>         COND_COLON[               NONE][ 45/ 52/ 53/  1][0/2/0][  100004000][0-0]                                             :
#  70>               WORD[               NONE][ 47/ 54/ 64/  1][0/2/0][      64000][0-0]                                               TypeCancel
#  70>        PAREN_CLOSE[               NONE][ 57/ 64/ 65/  0][0/1/0][  100004000][0-0]                                                         )
#  70>       SQUARE_CLOSE[             OC_MSG][ 58/ 65/ 66/  0][0/0/0][  100004000][0-0]                                                          ]
#  70>            NEWLINE[               NONE][ 59/ 66/  8/  0][0/0/0][          0][1-0]
#  71>         COND_COLON[               NONE][  1/  8/  9/  0][0/0/0][  100000000][0-0] :
#  71>               WORD[               NONE][  3/ 10/ 13/  1][0/0/0][      60000][0-0]   nil
#  71>          SEMICOLON[               NONE][  6/ 13/ 14/  0][0/0/0][  100000000][0-0]      ;
#  71>            NEWLINE[               NONE][  7/ 14/  1/  0][0/0/0][          0][2-0]
#  73>        SQUARE_OPEN[             OC_MSG][  1/  1/  2/  0][0/0/0][  100064000][0-0] [
#  73>        SQUARE_OPEN[             OC_MSG][  2/  2/  3/  0][0/1/0][  100064000][0-0]  [
#  73>       OC_MSG_CLASS[               NONE][  3/  3/ 18/  0][0/2/0][      74000][0-0]   BottomSheetItem
#  73>        OC_MSG_FUNC[               NONE][ 19/ 19/ 24/  1][0/2/0][       4000][0-0]                   alloc
#  73>       SQUARE_CLOSE[             OC_MSG][ 24/ 24/ 25/  0][0/1/0][  100004000][0-0]                        ]
#  73>            NEWLINE[               NONE][ 25/ 25/  2/  0][0/1/0][       4000][1-0]
#  74>        OC_MSG_FUNC[               NONE][  2/  2/ 10/  0][0/1/0][       4000][0-0]  iconName
#  74>           OC_COLON[               NONE][ 10/ 10/ 11/  0][0/1/0][  100004000][0-0]          :
#  74>               WORD[               NONE][ 11/ 11/ 19/  0][0/1/0][      64000][0-0]           selected
#  74>            NEWLINE[               NONE][ 19/ 19/  2/  0][0/1/0][       4000][1-0]
#  75>           QUESTION[               NONE][  2/  2/  3/  0][0/1/0][  100004000][0-0]  ?
#  75>               WORD[               NONE][  4/  4/  5/  1][0/1/0][      44000][0-0]    g
#  75>             MEMBER[               NONE][  5/  5/  6/  0][0/1/0][  100004000][0-0]     .
#  75>               WORD[               NONE][  6/  6/  8/  0][0/1/0][       4000][0-0]      re
#  75>            NEWLINE[               NONE][  8/  8/ 11/  0][0/1/0][       4000][1-0]
#  76>             MEMBER[               NONE][  4/ 11/ 12/  0][0/1/0][  100004000][0-0]    .
#  76>               WORD[               NONE][  5/ 12/ 14/  0][0/1/0][       4000][0-0]     at
#  76>            NEWLINE[               NONE][  7/ 14/ 11/  0][0/1/0][       4000][1-0]
#  77>         COND_COLON[               NONE][  2/ 11/ 12/  0][0/1/0][  100004000][0-0]  :
#  77>               WORD[               NONE][  4/ 13/ 14/  1][0/1/0][      64000][0-0]    g
#  77>            NEWLINE[               NONE][  5/ 14/ 11/  0][0/1/0][       4000][1-0]
#  78>             MEMBER[               NONE][  4/ 11/ 12/  0][0/1/0][  100004000][0-0]    .
#  78>               WORD[               NONE][  5/ 12/ 14/  0][0/1/0][       4000][0-0]     re
#  78>            NEWLINE[               NONE][  7/ 14/ 11/  0][0/1/0][       4000][1-0]
#  79>             MEMBER[               NONE][  4/ 11/ 12/  0][0/1/0][  100004000][0-0]    .
#  79>               TYPE[               NONE][  5/ 12/ 14/  0][0/1/0][       4000][0-0]     at
#  79>            NEWLINE[               NONE][  7/ 14/  4/  0][0/1/0][       4000][1-0]
#  80>        OC_MSG_NAME[               NONE][  2/  4/ 11/  0][0/1/0][       4000][0-0]  builder
#  80>           OC_COLON[        OC_MSG_NAME][  9/ 11/ 12/  0][0/1/0][  100004000][0-0]         :
#  80>               TYPE[               NONE][ 10/ 12/ 15/  0][0/1/0][      64000][0-0]          nil
#  80>            NEWLINE[               NONE][ 13/ 15/  7/  0][0/1/0][       4000][1-0]
#  81>        OC_MSG_NAME[               NONE][  2/  7/ 14/  0][0/1/0][       4000][0-0]  handler
#  81>           OC_COLON[        OC_MSG_NAME][  9/ 14/ 15/  0][0/1/0][  100004000][0-0]         :
#  81>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 10/ 15/ 16/  0][0/1/0][  100064000][0-0]          ^
#  81>         BRACE_OPEN[      OC_BLOCK_EXPR][ 11/ 16/ 17/  0][0/1/0][  140044000][0-0]           {
#  81>            NEWLINE[               NONE][ 12/ 17/  4/  0][1/2/0][       4000][1-0]
#  82>        BRACE_CLOSE[      OC_BLOCK_EXPR][  2/  4/  5/  0][0/1/0][  140004000][0-0]  }
#  82>            NEWLINE[               NONE][  3/  5/  1/  0][0/1/0][       4000][1-0]
#  83>       SQUARE_CLOSE[             OC_MSG][  1/  1/  2/  0][0/0/0][  100004000][0-0] ]
#  83>            NEWLINE[               NONE][  2/  2/  1/  0][0/0/0][          0][2-0]
#  85>        SQUARE_OPEN[               NONE][  1/  1/  2/  0][0/0/0][  100000000][0-0] [
#  85>        SQUARE_OPEN[             OC_MSG][  2/  2/  3/  0][0/1/0][  100064000][0-0]  [
#  85>       OC_MSG_CLASS[               NONE][  3/  3/ 18/  0][0/2/0][      74000][0-0]   BottomSheetItem
#  85>        OC_MSG_FUNC[               NONE][ 19/ 19/ 24/  1][0/2/0][       4000][0-0]                   alloc
#  85>       SQUARE_CLOSE[             OC_MSG][ 24/ 24/ 25/  0][0/1/0][  100004000][0-0]                        ]
#  85>            NEWLINE[               NONE][ 25/ 25/  2/  0][0/1/0][          0][1-0]
#  86>              LABEL[               NONE][  0/  2/ 10/  0][0/1/0][          0][0-0]iconName
#  86>        LABEL_COLON[               NONE][  9/ 10/ 11/  0][0/1/0][  100000000][0-0]         :
#  86>               WORD[               NONE][ 11/ 11/ 19/  0][0/1/0][      60000][0-0]           selected
#  86>           QUESTION[               NONE][ 20/ 20/ 21/  1][0/1/0][  100000000][0-0]                    ?
#  86>               WORD[               NONE][ 22/ 22/ 30/  1][0/1/0][      40000][0-0]                      iconName
#  86>         COND_COLON[               NONE][ 31/ 31/ 32/  1][0/1/0][  100000000][0-0]                               :
#  86>               WORD[               NONE][ 33/ 33/ 34/  1][0/1/0][      60000][0-0]                                 g
#  86>            NEWLINE[               NONE][ 34/ 34/ 11/  0][0/1/0][          0][1-0]
#  87>             MEMBER[               NONE][  4/ 11/ 12/  0][0/1/0][  100000000][0-0]    .
#  87>               WORD[               NONE][  5/ 12/ 14/  0][0/1/0][          0][0-0]     re
#  87>            NEWLINE[               NONE][  7/ 14/ 11/  0][0/1/0][          0][1-0]
#  88>             MEMBER[               NONE][  4/ 11/ 12/  0][0/1/0][  100000000][0-0]    .
#  88>               TYPE[               NONE][  5/ 12/ 14/  0][0/1/0][          0][0-0]     at
#  88>            NEWLINE[               NONE][  7/ 14/  4/  0][0/1/0][          0][1-0]
#  89>              LABEL[               NONE][  2/  4/ 11/  0][0/1/0][          0][0-0]  builder
#  89>        LABEL_COLON[               NONE][  9/ 11/ 12/  0][0/1/0][  100000000][0-0]         :
#  89>               TYPE[               NONE][ 11/ 12/ 15/  0][0/1/0][      60000][0-0]           nil
#  89>            NEWLINE[               NONE][ 14/ 15/  7/  0][0/1/0][          0][1-0]
#  90>              LABEL[               NONE][  2/  7/ 14/  0][0/1/0][          0][0-0]  handler
#  90>        LABEL_COLON[               NONE][  9/ 14/ 15/  0][0/1/0][  100000000][0-0]         :
#  90>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 10/ 15/ 16/  0][0/1/0][  100060000][0-0]          ^
#  90>         BRACE_OPEN[      OC_BLOCK_EXPR][ 11/ 16/ 17/  0][0/1/0][  140040000][0-0]           {
#  90>            NEWLINE[               NONE][ 12/ 17/  4/  0][1/2/0][          0][1-0]
#  91>        BRACE_CLOSE[      OC_BLOCK_EXPR][  2/  4/  5/  0][0/1/0][  150000000][0-0]  }
#  91>            NEWLINE[               NONE][  3/  5/  1/  0][0/1/0][          0][1-0]
#  92>       SQUARE_CLOSE[               NONE][  1/  1/  2/  0][0/0/0][  110000000][0-0] ]
#  92>            NEWLINE[               NONE][  2/  2/  1/  0][0/0/0][          0][2-0]
#  94>               WORD[               NONE][  1/  1/ 14/  0][0/0/0][   10000000][0-0] accessoryType
#  94>            NEWLINE[               NONE][ 14/ 14/  7/  0][0/0/0][          0][1-0]
#  95>           QUESTION[               NONE][  1/  7/  8/  0][0/0/0][  110000000][0-0] ?
#  95>               WORD[               NONE][  3/  9/ 16/  1][0/0/0][   10040000][0-0]   Config1
#  95>         BRACE_OPEN[   BRACED_INIT_LIST][ 10/ 16/ 17/  0][0/0/0][  160000000][0-0]          {
#  95>        BRACE_CLOSE[   BRACED_INIT_LIST][ 11/ 17/ 18/  0][0/0/0][  170000000][0-0]           }
#  95>            NEWLINE[               NONE][ 12/ 18/  5/  0][0/0/0][          0][1-0]
#  96>         COND_COLON[               NONE][  1/  5/  6/  0][0/0/0][  110000000][0-0] :
#  96>               WORD[               NONE][  3/  7/ 11/  1][0/0/0][   10060000][0-0]   flag
#  96>            COMPARE[               NONE][  8/ 12/ 14/  1][0/0/0][  110000000][0-0]        ==
#  96>               WORD[               NONE][ 11/ 15/ 20/  1][0/0/0][   10040000][0-0]           false
#  96>            NEWLINE[               NONE][ 16/ 20/  9/  0][0/0/0][          0][1-0]
#  97>           QUESTION[               NONE][  3/  9/ 10/  0][0/0/0][  110000000][0-0]   ?
#  97>               WORD[               NONE][  5/ 11/ 18/  1][0/0/0][   10040000][0-0]     Config2
#  97>         BRACE_OPEN[   BRACED_INIT_LIST][ 12/ 18/ 19/  0][0/0/0][  160000000][0-0]            {
#  97>        BRACE_CLOSE[   BRACED_INIT_LIST][ 13/ 19/ 20/  0][0/0/0][  160000000][0-0]             }
#  97>            NEWLINE[               NONE][ 14/ 20/  9/  0][0/0/0][          0][1-0]
#  98>             MEMBER[               NONE][  5/  9/ 10/  0][0/0/0][  100000000][0-0]     .
#  98>          FUNC_CALL[               NONE][  6/ 10/ 15/  0][0/0/0][          0][0-0]      build
#  98>        FPAREN_OPEN[          FUNC_CALL][ 11/ 15/ 16/  0][0/0/0][  100000000][0-0]           (
#  98>       FPAREN_CLOSE[          FUNC_CALL][ 12/ 16/ 17/  0][0/0/0][  110000010][0-0]            )
#  98>            NEWLINE[               NONE][ 13/ 17/  3/  0][0/0/0][          0][1-0]
#  99>         COND_COLON[               NONE][  3/  3/  4/  0][0/0/0][  110000000][0-0]   :
#  99>               WORD[               NONE][  5/  5/  9/  1][0/0/0][   10060000][0-0]     flag
#  99>            COMPARE[               NONE][ 10/ 10/ 12/  1][0/0/0][  110000000][0-0]          ==
#  99>               WORD[               NONE][ 13/ 13/ 17/  1][0/0/0][   10040000][0-0]             true
#  99>            NEWLINE[               NONE][ 17/ 17/  7/  0][0/0/0][          0][1-0]
# 100>           QUESTION[               NONE][  5/  7/  8/  0][0/0/0][  110000000][0-0]     ?
# 100>               WORD[               NONE][  7/  9/ 16/  1][0/0/0][   10040000][0-0]       Config3
# 100>         BRACE_OPEN[   BRACED_INIT_LIST][ 14/ 16/ 17/  0][0/0/0][  160000000][0-0]              {
# 100>        BRACE_CLOSE[   BRACED_INIT_LIST][ 15/ 17/ 18/  0][0/0/0][  160000000][0-0]               }
# 100>            NEWLINE[               NONE][ 16/ 18/  7/  0][0/0/0][          0][1-0]
# 101>             MEMBER[               NONE][  7/  7/  8/  0][0/0/0][  100000000][0-0]       .
# 101>          FUNC_CALL[               NONE][  8/  8/ 13/  0][0/0/0][          0][0-0]        build
# 101>        FPAREN_OPEN[          FUNC_CALL][ 13/ 13/ 14/  0][0/0/0][  100000000][0-0]             (
# 101>       FPAREN_CLOSE[          FUNC_CALL][ 14/ 14/ 15/  0][0/0/0][  110000010][0-0]              )
# 101>            NEWLINE[               NONE][ 15/ 15/  3/  0][0/0/0][          0][1-0]
# 102>         COND_COLON[               NONE][  5/  3/  4/  0][0/0/0][  110000000][0-0]     :
# 102>               TYPE[               NONE][  7/  5/ 12/  1][0/0/0][   10060000][0-0]       Config4
# 102>         BRACE_OPEN[   BRACED_INIT_LIST][ 14/ 12/ 13/  0][0/0/0][  160000000][0-0]              {
# 102>        BRACE_CLOSE[   BRACED_INIT_LIST][ 15/ 13/ 14/  0][0/0/0][  160000000][0-0]               }
# 102>            NEWLINE[               NONE][ 16/ 14/  3/  0][0/0/0][          0][1-0]
# 103>             MEMBER[               NONE][  7/  3/  4/  0][0/0/0][  100000000][0-0]       .
# 103>          FUNC_CALL[               NONE][  8/  4/  9/  0][0/0/0][          0][0-0]        build
# 103>        FPAREN_OPEN[          FUNC_CALL][ 13/  9/ 10/  0][0/0/0][  100000000][0-0]             (
# 103>       FPAREN_CLOSE[          FUNC_CALL][ 14/ 10/ 11/  0][0/0/0][  100000010][0-0]              )
# 103>          SEMICOLON[               NONE][ 15/ 11/ 12/  0][0/0/0][  100000000][0-0]               ;
# 103>            NEWLINE[               NONE][ 16/ 12/  1/  0][0/0/0][          0][2-0]
# 105>               TYPE[               NONE][  1/  1/  8/  0][0/0/0][      60000][0-0] options
# 105>             MEMBER[               NONE][  8/  8/  9/  0][0/0/0][  100000000][0-0]        .
# 105>               WORD[               NONE][  9/  9/ 13/  0][0/0/0][          0][0-0]         meta
# 105>            COMPARE[               NONE][ 14/ 14/ 16/  1][0/0/0][  100000000][0-0]              ==
# 105>               WORD[               NONE][ 17/ 17/ 20/  1][0/0/0][      40000][0-0]                 nil
# 105>            NEWLINE[               NONE][ 20/ 20/  5/  0][0/0/0][          0][1-0]
# 106>           QUESTION[               NONE][  1/  5/  6/  0][0/0/0][  100000000][0-0] ?
# 106>               WORD[               NONE][  3/  7/ 20/  1][0/0/0][      40000][0-0]   metaComponent
# 106>            NEWLINE[               NONE][ 16/ 20/  5/  0][0/0/0][          0][1-0]
# 107>         COND_COLON[               NONE][  1/  5/  6/  0][0/0/0][  100000000][0-0] :
# 107>          FUNC_CALL[               NONE][  3/  8/ 16/  2][0/0/0][      60000][0-0]   CBuilder
# 107>        FPAREN_OPEN[          FUNC_CALL][ 11/ 16/ 17/  0][0/0/0][  100000000][0-0]           (
# 107>       FPAREN_CLOSE[          FUNC_CALL][ 12/ 17/ 18/  0][0/0/0][  100000010][0-0]            )
# 107>            NEWLINE[               NONE][ 13/ 18/  1/  0][0/0/0][          0][1-0]
# 108>             MEMBER[               NONE][  3/  1/  2/  0][0/0/0][  100000000][0-0]   .
# 108>          FUNC_CALL[               NONE][  4/  2/  9/  0][0/0/0][          0][0-0]    spacing
# 108>        FPAREN_OPEN[          FUNC_CALL][ 11/  9/ 10/  0][0/0/0][  100000000][0-0]           (
# 108>             NUMBER[               NONE][ 12/ 10/ 11/  0][0/1/0][      40010][0-0]            4
# 108>       FPAREN_CLOSE[          FUNC_CALL][ 13/ 11/ 12/  0][0/0/0][  100000010][0-0]             )
# 108>            NEWLINE[               NONE][ 14/ 12/  5/  0][0/0/0][          0][1-0]
# 109>             MEMBER[               NONE][  3/  5/  6/  0][0/0/0][  100000000][0-0]   .
# 109>          FUNC_CALL[               NONE][  4/  6/ 18/  0][0/0/0][          0][0-0]    subComponent
# 109>        FPAREN_OPEN[          FUNC_CALL][ 16/ 18/ 19/  0][0/0/0][  100000000][0-0]                (
# 109>            NEWLINE[               NONE][ 17/ 19/  3/  0][0/1/0][         10][1-0]
# 110>          FUNC_CALL[               NONE][  5/  3/ 11/  0][0/1/0][      40010][0-0]     CBuilder
# 110>        FPAREN_OPEN[          FUNC_CALL][ 13/ 11/ 12/  0][0/1/0][  100000010][0-0]             (
# 110>       FPAREN_CLOSE[          FUNC_CALL][ 14/ 12/ 13/  0][0/1/0][  100000010][0-0]              )
# 110>            NEWLINE[               NONE][ 15/ 13/  9/  0][0/1/0][         10][1-0]
# 111>             MEMBER[               NONE][  5/  9/ 10/  0][0/1/0][  100000010][0-0]     .
# 111>          FUNC_CALL[               NONE][  6/ 10/ 15/  0][0/1/0][         10][0-0]      build
# 111>        FPAREN_OPEN[          FUNC_CALL][ 11/ 15/ 16/  0][0/1/0][  100000010][0-0]           (
# 111>       FPAREN_CLOSE[          FUNC_CALL][ 12/ 16/ 17/  0][0/1/0][  100000010][0-0]            )
# 111>            NEWLINE[               NONE][ 13/ 17/  0/  0][0/1/0][         10][1-0]
# 111>       FPAREN_CLOSE[          FUNC_CALL][  3/ 17/ 18/  0][0/0/0][  100000010][0-0]   )
# 111>          SEMICOLON[               NONE][  4/ 18/ 19/  0][0/0/0][  100000000][0-0]    ;
# 111>            NEWLINE[               NONE][  5/ 19/  1/  0][0/0/0][          0][2-0]
# 113>               TYPE[               NONE][  1/  1/  8/  0][0/0/0][      60000][0-0] options
# 113>             MEMBER[               NONE][  8/  8/  9/  0][0/0/0][  100000000][0-0]        .
# 113>               WORD[               NONE][  9/  9/ 13/  0][0/0/0][          0][0-0]         meta
# 113>            COMPARE[               NONE][ 14/ 14/ 16/  1][0/0/0][  100000000][0-0]              ==
# 113>               WORD[               NONE][ 17/ 17/ 20/  1][0/0/0][      40000][0-0]                 nil
# 113>            NEWLINE[               NONE][ 20/ 20/  5/  0][0/0/0][          0][1-0]
# 114>           QUESTION[               NONE][  1/  5/  6/  0][0/0/0][  100000000][0-0] ?
# 114>          FUNC_CALL[               NONE][  3/  7/ 15/  1][0/0/0][      40000][0-0]   CBuilder
# 114>        FPAREN_OPEN[          FUNC_CALL][ 11/ 15/ 16/  0][0/0/0][  100000000][0-0]           (
# 114>       FPAREN_CLOSE[          FUNC_CALL][ 12/ 16/ 17/  0][0/0/0][  100000010][0-0]            )
# 114>            NEWLINE[               NONE][ 13/ 17/  3/  0][0/0/0][          0][1-0]
# 115>             MEMBER[               NONE][  3/  3/  4/  0][0/0/0][  100000000][0-0]   .
# 115>          FUNC_CALL[               NONE][  4/  4/ 11/  0][0/0/0][          0][0-0]    spacing
# 115>        FPAREN_OPEN[          FUNC_CALL][ 11/ 11/ 12/  0][0/0/0][  100000000][0-0]           (
# 115>             NUMBER[               NONE][ 12/ 12/ 13/  0][0/1/0][      40010][0-0]            4
# 115>       FPAREN_CLOSE[          FUNC_CALL][ 13/ 13/ 14/  0][0/0/0][  100000010][0-0]             )
# 115>            NEWLINE[               NONE][ 14/ 14/  1/  0][0/0/0][          0][1-0]
# 116>             MEMBER[               NONE][  3/  1/  2/  0][0/0/0][  100000000][0-0]   .
# 116>          FUNC_CALL[               NONE][  4/  2/ 14/  0][0/0/0][          0][0-0]    subComponent
# 116>        FPAREN_OPEN[          FUNC_CALL][ 16/ 14/ 15/  0][0/0/0][  100000000][0-0]                (
# 116>            NEWLINE[               NONE][ 17/ 15/  5/  0][0/1/0][         10][1-0]
# 117>          FUNC_CALL[               NONE][  5/  5/ 13/  0][0/1/0][      40010][0-0]     CBuilder
# 117>        FPAREN_OPEN[          FUNC_CALL][ 13/ 13/ 14/  0][0/1/0][  100000010][0-0]             (
# 117>       FPAREN_CLOSE[          FUNC_CALL][ 14/ 14/ 15/  0][0/1/0][  100000010][0-0]              )
# 117>            NEWLINE[               NONE][ 15/ 15/  1/  0][0/1/0][         10][1-0]
# 118>             MEMBER[               NONE][  5/  1/  2/  0][0/1/0][  100000010][0-0]     .
# 118>          FUNC_CALL[               NONE][  6/  2/  7/  0][0/1/0][         10][0-0]      build
# 118>        FPAREN_OPEN[          FUNC_CALL][ 11/  7/  8/  0][0/1/0][  100000010][0-0]           (
# 118>       FPAREN_CLOSE[          FUNC_CALL][ 12/  8/  9/  0][0/1/0][  100000010][0-0]            )
# 118>            NEWLINE[               NONE][ 13/  9/  1/  0][0/1/0][         10][1-0]
# 119>       FPAREN_CLOSE[          FUNC_CALL][  3/  1/  2/  0][0/0/0][  100000010][0-0]   )
# 119>            NEWLINE[               NONE][  4/  2/  1/  0][0/0/0][          0][1-0]
# 120>         COND_COLON[               NONE][  1/  1/  2/  0][0/0/0][  100000000][0-0] :
# 120>               WORD[               NONE][  3/  3/ 10/  1][0/0/0][      60000][0-0]   Builder
# 120>            NEWLINE[               NONE][ 10/ 10/  7/  0][0/0/0][          0][1-0]
# 121>             MEMBER[               NONE][  3/  7/  8/  0][0/0/0][  100000000][0-0]   .
# 121>               WORD[               NONE][  4/  8/ 15/  0][0/0/0][          0][0-0]    spacing
# 121>          SEMICOLON[               NONE][ 11/ 15/ 16/  0][0/0/0][  100000000][0-0]           ;
# 121>            NEWLINE[               NONE][ 12/ 16/  7/  0][0/0/0][          0][2-0]
# 123>               WORD[               NONE][  1/  7/ 14/  0][0/0/0][      60000][0-0] options
# 123>            COMPARE[               NONE][  9/ 15/ 17/  1][0/0/0][  100000000][0-0]         ==
# 123>               WORD[               NONE][ 12/ 18/ 21/  1][0/0/0][      40000][0-0]            nil
# 123>           QUESTION[               NONE][ 16/ 22/ 23/  1][0/0/0][  100000000][0-0]                ?
# 123>          FUNC_CALL[               NONE][ 18/ 24/ 32/  1][0/0/0][      40000][0-0]                  CBuilder
# 123>        FPAREN_OPEN[          FUNC_CALL][ 26/ 32/ 33/  0][0/0/0][  100000000][0-0]                          (
# 123>       FPAREN_CLOSE[          FUNC_CALL][ 27/ 33/ 34/  0][0/0/0][  100000010][0-0]                           )
# 123>            NEWLINE[               NONE][ 28/ 34/  3/  0][0/0/0][          0][1-0]
# 124>             MEMBER[               NONE][  3/  3/  4/  0][0/0/0][  100000000][0-0]   .
# 124>          FUNC_CALL[               NONE][  4/  4/ 11/  0][0/0/0][          0][0-0]    spacing
# 124>        FPAREN_OPEN[          FUNC_CALL][ 11/ 11/ 12/  0][0/0/0][  100000000][0-0]           (
# 124>             NUMBER[               NONE][ 12/ 12/ 13/  0][0/1/0][      40010][0-0]            6
# 124>       FPAREN_CLOSE[          FUNC_CALL][ 13/ 13/ 14/  0][0/0/0][  100000010][0-0]             )
# 124>            NEWLINE[               NONE][ 14/ 14/  1/  0][0/0/0][          0][1-0]
# 125>         COND_COLON[               NONE][  1/  1/  2/  0][0/0/0][  100000000][0-0] :
# 125>               WORD[               NONE][  3/  3/ 10/  1][0/0/0][      60000][0-0]   Builder
# 125>            NEWLINE[               NONE][ 10/ 10/  7/  0][0/0/0][          0][1-0]
# 126>             MEMBER[               NONE][  3/  7/  8/  0][0/0/0][  100000000][0-0]   .
# 126>               WORD[               NONE][  4/  8/ 15/  0][0/0/0][          0][0-0]    spacing
# 126>          SEMICOLON[               NONE][ 11/ 15/ 16/  0][0/0/0][  100000000][0-0]           ;
# 126>            NEWLINE[               NONE][ 12/ 16/  7/  0][0/0/0][          0][2-0]
# 128>               WORD[               NONE][  1/  7/ 14/  0][0/0/0][      60000][0-0] options
# 128>            COMPARE[               NONE][  9/ 15/ 17/  1][0/0/0][  100000000][0-0]         ==
# 128>               WORD[               NONE][ 12/ 18/ 21/  1][0/0/0][      40000][0-0]            nil
# 128>           QUESTION[               NONE][ 16/ 22/ 23/  1][0/0/0][  100000000][0-0]                ?
# 128>          FUNC_CALL[               NONE][ 18/ 24/ 32/  1][0/0/0][      40000][0-0]                  CBuilder
# 128>        FPAREN_OPEN[          FUNC_CALL][ 26/ 32/ 33/  0][0/0/0][  100000000][0-0]                          (
# 128>       FPAREN_CLOSE[          FUNC_CALL][ 27/ 33/ 34/  0][0/0/0][  100000010][0-0]                           )
# 128>            NEWLINE[               NONE][ 28/ 34/  3/  0][0/0/0][          0][1-0]
# 129>             MEMBER[               NONE][  3/  3/  4/  0][0/0/0][  100000000][0-0]   .
# 129>          FUNC_CALL[               NONE][  4/  4/ 11/  0][0/0/0][          0][0-0]    spacing
# 129>        FPAREN_OPEN[          FUNC_CALL][ 11/ 11/ 12/  0][0/0/0][  100000000][0-0]           (
# 129>             NUMBER[               NONE][ 12/ 12/ 13/  0][0/1/0][      40010][0-0]            6
# 129>       FPAREN_CLOSE[          FUNC_CALL][ 13/ 13/ 14/  0][0/0/0][  100000010][0-0]             )
# 129>         COND_COLON[               NONE][ 15/ 15/ 16/  1][0/0/0][  100000000][0-0]               :
# 129>               WORD[               NONE][ 17/ 17/ 24/  1][0/0/0][      60000][0-0]                 Builder
# 129>            NEWLINE[               NONE][ 24/ 24/  7/  0][0/0/0][          0][1-0]
# 130>             MEMBER[               NONE][  3/  7/  8/  0][0/0/0][  100000000][0-0]   .
# 130>               WORD[               NONE][  4/  8/ 15/  0][0/0/0][          0][0-0]    spacing
# 130>          SEMICOLON[               NONE][ 11/ 15/ 16/  0][0/0/0][  100000000][0-0]           ;
# 130>            NEWLINE[               NONE][ 12/ 16/  1/  0][0/0/0][          0][2-0]
# 133>          FUNC_CALL[               NONE][  1/  1/  9/  0][0/0/0][      60000][0-0] CBuilder
# 133>        FPAREN_OPEN[          FUNC_CALL][  9/  9/ 10/  0][0/0/0][  100000000][0-0]         (
# 133>       FPAREN_CLOSE[          FUNC_CALL][ 10/ 10/ 11/  0][0/0/0][  100000010][0-0]          )
# 133>            NEWLINE[               NONE][ 11/ 11/  1/  0][0/0/0][          0][1-0]
# 134>             MEMBER[               NONE][  1/  1/  2/  0][0/0/0][  100000000][0-0] .
# 134>          FUNC_CALL[               NONE][  2/  2/ 14/  0][0/0/0][          0][0-0]  subComponent
# 134>        FPAREN_OPEN[          FUNC_CALL][ 14/ 14/ 15/  0][0/0/0][  100000000][0-0]              (
# 134>            NEWLINE[               NONE][ 15/ 15/  3/  0][0/1/0][         10][1-0]
# 135>          FUNC_CALL[               NONE][  3/  3/ 11/  0][0/1/0][      40010][0-0]   CBuilder
# 135>        FPAREN_OPEN[          FUNC_CALL][ 11/ 11/ 12/  0][0/1/0][  100000010][0-0]           (
# 135>       FPAREN_CLOSE[          FUNC_CALL][ 12/ 12/ 13/  0][0/1/0][  100000010][0-0]            )
# 135>            NEWLINE[               NONE][ 13/ 13/  3/  0][0/1/0][         10][1-0]
# 136>             MEMBER[               NONE][  3/  3/  4/  0][0/1/0][  100000010][0-0]   .
# 136>          FUNC_CALL[               NONE][  4/  4/ 11/  0][0/1/0][         10][0-0]    spacing
# 136>        FPAREN_OPEN[          FUNC_CALL][ 11/ 11/ 12/  0][0/1/0][  100000010][0-0]           (
# 136>             NUMBER[               NONE][ 12/ 12/ 13/  0][0/2/0][      40010][0-0]            4
# 136>       FPAREN_CLOSE[          FUNC_CALL][ 13/ 13/ 14/  0][0/1/0][  100000010][0-0]             )
# 136>            NEWLINE[               NONE][ 14/ 14/  0/  0][0/1/0][         10][1-0]
# 136>       FPAREN_CLOSE[          FUNC_CALL][  1/ 14/ 15/  0][0/0/0][  100000010][0-0] )
# 136>          SEMICOLON[               NONE][  2/ 15/ 16/  0][0/0/0][  100000000][0-0]  ;
# 136>            NEWLINE[               NONE][  3/ 16/  1/  0][0/0/0][          0][2-0]
# 138>               WORD[               NONE][  1/  1/  5/  0][0/0/0][      60000][0-0] flag
# 138>            NEWLINE[               NONE][  5/  5/  1/  0][0/0/0][          0][1-0]
# 139>           QUESTION[               NONE][  1/  1/  2/  0][0/0/0][  100000000][0-0] ?
# 139>               WORD[               NONE][  3/  3/ 10/  1][0/0/0][      40000][0-0]   Builder
# 139>            NEWLINE[               NONE][ 10/ 10/  1/  0][0/0/0][          0][1-0]
# 140>             MEMBER[               NONE][  3/  1/  2/  0][0/0/0][  100000000][0-0]   .
# 140>               WORD[               NONE][  4/  2/  9/  0][0/0/0][          0][0-0]    spacing
# 140>          SEMICOLON[               NONE][ 11/  9/ 10/  0][0/0/0][  100000000][0-0]           ;
# 140>            NEWLINE[               NONE][ 12/ 10/  1/  0][0/0/0][          0][1-0]
# 141>         COND_COLON[               NONE][  1/  1/  2/  0][0/0/0][  100060000][0-0] :
# 141>               TYPE[               NONE][  3/  3/ 10/  1][0/0/0][      60000][0-0]   Builder
# 141>            NEWLINE[               NONE][ 10/ 10/  7/  0][0/0/0][          0][1-0]
# 142>             MEMBER[               NONE][  3/  7/  8/  0][0/0/0][  100000000][0-0]   .
# 142>               WORD[               NONE][  4/  8/ 15/  0][0/0/0][          0][0-0]    spacing
# 142>          SEMICOLON[               NONE][ 11/ 15/ 16/  0][0/0/0][  100000000][0-0]           ;
# 142>            NEWLINE[               NONE][ 12/ 16/  1/  0][0/0/0][          0][2-0]
# 144>               TYPE[           FUNC_DEF][  1/  1/  5/  0][0/0/0][      70000][0-0] func
# 144>           FUNC_DEF[               NONE][  6/  6/ 15/  1][0/0/0][          0][0-0]      something
# 144>        FPAREN_OPEN[           FUNC_DEF][ 15/ 15/ 16/  0][0/0/0][  100000000][0-0]               (
# 144>       FPAREN_CLOSE[           FUNC_DEF][ 16/ 16/ 17/  0][0/0/0][  100000008][0-0]                )
# 144>            NEWLINE[               NONE][ 17/ 18/  0/  0][0/0/0][          8][1-0]
# 144>         BRACE_OPEN[           FUNC_DEF][  1/ 18/ 19/  1][0/0/0][  100000000][0-0] {
# 144>            NEWLINE[               NONE][  2/ 19/  3/  0][1/1/0][          0][1-0]
# 145>                 IF[               NONE][  3/  3/  5/  0][1/1/0][      60000][0-0]   if
# 145>        SPAREN_OPEN[                 IF][  6/  6/  7/  1][1/1/0][  100000000][0-0]      (
# 145>               WORD[               NONE][  7/  7/ 11/  0][1/2/0][      40020][0-0]       flag
# 145>       SPAREN_CLOSE[                 IF][ 11/ 11/ 12/  0][1/1/0][  100000000][0-0]           )
# 145>         BRACE_OPEN[                 IF][ 13/ 13/ 14/  1][1/1/0][  100000000][0-0]             {
# 145>            NEWLINE[               NONE][ 14/ 14/  5/  0][2/2/0][          0][1-0]
# 146>               WORD[               NONE][  5/  5/  6/  0][2/2/0][      60000][0-0]     x
# 146>            COMPARE[               NONE][  7/  7/  9/  1][2/2/0][  100000000][0-0]       ==
# 146>               WORD[               NONE][ 10/ 10/ 14/  1][2/2/0][      40000][0-0]          flag
# 146>            NEWLINE[               NONE][ 14/ 14/  5/  0][2/2/0][          0][1-0]
# 147>           QUESTION[               NONE][  5/  5/  6/  0][2/2/0][  100000000][0-0]     ?
# 147>               WORD[               NONE][  7/  7/ 14/  1][2/2/0][      40000][0-0]       Builder
# 147>            NEWLINE[               NONE][ 14/ 14/ 11/  0][2/2/0][          0][1-0]
# 148>             MEMBER[               NONE][  7/ 11/ 12/  0][2/2/0][  100000000][0-0]       .
# 148>               WORD[               NONE][  8/ 12/ 19/  0][2/2/0][          0][0-0]        spacing
# 148>            NEWLINE[               NONE][ 15/ 19/  7/  0][2/2/0][          0][1-0]
# 149>         COND_COLON[               NONE][  5/  7/  8/  0][2/2/0][  100000000][0-0]     :
# 149>               WORD[               NONE][  7/  9/ 16/  1][2/2/0][      60000][0-0]       Builder
# 149>            NEWLINE[               NONE][ 14/ 16/  7/  0][2/2/0][          0][1-0]
# 150>             MEMBER[               NONE][  7/  7/  8/  0][2/2/0][  100000000][0-0]       .
# 150>               WORD[               NONE][  8/  8/ 15/  0][2/2/0][          0][0-0]        spacing
# 150>          SEMICOLON[               NONE][ 15/ 15/ 16/  0][2/2/0][  100000000][0-0]               ;
# 150>            NEWLINE[               NONE][ 16/ 16/  3/  0][2/2/0][          0][1-0]
# 151>        BRACE_CLOSE[                 IF][  3/  3/  4/  0][1/1/0][  100000000][0-0]   }
# 151>            NEWLINE[               NONE][  4/  4/  1/  0][1/1/0][          0][1-0]
# 152>        BRACE_CLOSE[           FUNC_DEF][  1/  1/  2/  0][0/0/0][  100000000][0-0] }
# 152>            NEWLINE[               NONE][  2/  2/  1/  0][0/0/0][          0][2-0]
# 155>         PAREN_OPEN[               NONE][  1/  1/  2/  0][0/0/0][  100060000][0-0] (
# 155>               WORD[               NONE][  2/  2/  7/  0][0/1/0][      40000][0-0]  event
# 155>            NEWLINE[               NONE][  7/  7/  3/  0][0/1/0][          0][1-0]
# 156>           QUESTION[               NONE][  3/  3/  4/  0][0/1/0][  100000000][0-0]   ?
# 156>        SQUARE_OPEN[             OC_MSG][  5/  7/  8/  3][0/1/0][  100044000][0-0]     [
# 156>       OC_MSG_CLASS[               NONE][  6/  8/ 47/  0][0/2/0][      64000][0-0]      FSTetraBottomSheetActionCellItemVariant
# 156>            NEWLINE[               NONE][ 45/ 47/  9/  0][0/2/0][       4000][1-0]
# 157>        OC_MSG_FUNC[               NONE][  6/  9/ 15/  0][0/2/0][       4000][0-0]      action
# 157>           OC_COLON[               NONE][ 12/ 15/ 16/  0][0/2/0][  100004000][0-0]            :
# 157>               WORD[               NONE][ 13/ 16/ 24/  0][0/2/0][      64000][0-0]             CKAction
# 157>         ANGLE_OPEN[           TEMPLATE][ 21/ 24/ 25/  0][0/2/0][  100004040][0-0]                     <
# 157>        ANGLE_CLOSE[           TEMPLATE][ 22/ 25/ 26/  0][0/2/0][  100044040][0-0]                      >
# 157>          DC_MEMBER[               NONE][ 23/ 27/ 29/  1][0/2/0][  100044000][0-0]                       ::
# 157>          FUNC_CALL[               NONE][ 25/ 30/ 55/  1][0/2/0][       4000][0-0]                         actionFromSenderlessBlock
# 157>        FPAREN_OPEN[          FUNC_CALL][ 50/ 55/ 56/  0][0/2/0][  100004000][0-0]                                                  (
# 157>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 51/ 56/ 57/  0][0/3/0][  100044000][0-0]                                                   ^
# 157>         BRACE_OPEN[      OC_BLOCK_EXPR][ 52/ 57/ 58/  0][0/3/0][  100044000][0-0]                                                    {
# 157>            NEWLINE[               NONE][ 53/ 58/  3/  0][1/4/0][       4000][1-0]
# 158>               TYPE[               NONE][  8/  3/  7/  0][1/4/0][   10074000][0-0]        auto
# 158>          QUALIFIER[               NONE][ 13/  8/ 13/  1][1/4/0][   10014000][0-0]             const
# 158>               WORD[               NONE][ 19/ 14/ 24/  1][1/4/0][   10004000][0-0]                   strongSelf
# 158>             ASSIGN[               NONE][ 30/ 25/ 26/  1][1/4/0][  100004000][0-0]                              =
# 158>               WORD[               NONE][ 32/ 27/ 35/  1][1/4/0][      44000][0-0]                                weakSelf
# 158>          SEMICOLON[               NONE][ 40/ 35/ 36/  0][1/4/0][  100004000][0-0]                                        ;
# 158>            NEWLINE[               NONE][ 41/ 36/  1/  0][1/4/0][       4000][1-0]
# 159>        BRACE_CLOSE[      OC_BLOCK_EXPR][  6/  1/  2/  0][0/3/0][  100004000][0-0]      }
# 159>       FPAREN_CLOSE[          FUNC_CALL][  7/  2/  3/  0][0/2/0][  100004000][0-0]       )
# 159>       SQUARE_CLOSE[             OC_MSG][  8/  3/  4/  0][0/1/0][  100004000][0-0]        ]
# 159>            NEWLINE[               NONE][  9/  4/  3/  0][0/1/0][          0][1-0]
# 160>         COND_COLON[               NONE][  3/  3/  4/  0][0/1/0][  100000000][0-0]   :
# 160>               WORD[               NONE][  5/  5/  8/  1][0/1/0][      60000][0-0]     nil
# 160>        PAREN_CLOSE[               NONE][  8/  8/  9/  0][0/0/0][  100000000][0-0]        )
# 160>          SEMICOLON[               NONE][  9/  9/ 10/  0][0/0/0][  100000000][0-0]         ;
# 160>            NEWLINE[               NONE][ 10/ 10/  1/  0][0/0/0][          0][2-0]
# 162>               TYPE[           FUNC_DEF][  1/  1/  5/  0][0/0/0][      70000][0-0] void
# 162>           FUNC_DEF[               NONE][  6/  6/ 12/  1][0/0/0][          0][0-0]      method
# 162>        FPAREN_OPEN[           FUNC_DEF][ 12/ 12/ 13/  0][0/0/0][  100000000][0-0]            (
# 162>       FPAREN_CLOSE[           FUNC_DEF][ 13/ 13/ 14/  0][0/0/0][  100000008][0-0]             )
# 162>            NEWLINE[               NONE][ 14/ 15/  0/  0][0/0/0][          8][1-0]
# 162>         BRACE_OPEN[           FUNC_DEF][  1/ 15/ 16/  1][0/0/0][  100000000][0-0] {
# 162>            NEWLINE[               NONE][  2/ 16/  3/  0][1/1/0][          0][1-0]
# 163>               TYPE[               NONE][  3/  3/ 10/  0][1/1/0][      60000][0-0]   options
# 163>             MEMBER[               NONE][ 10/ 10/ 11/  0][1/1/0][  100000000][0-0]          .
# 163>               WORD[               NONE][ 11/ 11/ 15/  0][1/1/0][          0][0-0]           meta
# 163>            COMPARE[               NONE][ 16/ 16/ 18/  1][1/1/0][  100000000][0-0]                ==
# 163>               WORD[               NONE][ 19/ 19/ 22/  1][1/1/0][      40000][0-0]                   nil
# 163>            NEWLINE[               NONE][ 22/ 22/  5/  0][1/1/0][          0][1-0]
# 164>           QUESTION[               NONE][  3/  5/  6/  0][1/1/0][  100000000][0-0]   ?
# 164>               WORD[               NONE][  5/  7/ 20/  1][1/1/0][      40000][0-0]     metaComponent
# 164>            NEWLINE[               NONE][ 18/ 20/  5/  0][1/1/0][          0][1-0]
# 165>         COND_COLON[               NONE][  3/  5/  6/  0][1/1/0][  100000000][0-0]   :
# 165>          FUNC_CALL[               NONE][  5/  7/ 23/  1][1/1/0][      60000][0-0]     ComponentBuilder
# 165>        FPAREN_OPEN[          FUNC_CALL][ 21/ 23/ 24/  0][1/1/0][  100000000][0-0]                     (
# 165>       FPAREN_CLOSE[          FUNC_CALL][ 22/ 24/ 25/  0][1/1/0][  100000010][0-0]                      )
# 165>            NEWLINE[               NONE][ 23/ 25/  1/  0][1/1/0][          0][1-0]
# 166>             MEMBER[               NONE][  5/  1/  2/  0][1/1/0][  100000000][0-0]     .
# 166>          FUNC_CALL[               NONE][  6/  2/  9/  0][1/1/0][          0][0-0]      spacing
# 166>        FPAREN_OPEN[          FUNC_CALL][ 13/  9/ 10/  0][1/1/0][  100000000][0-0]             (
# 166>             NUMBER[               NONE][ 14/ 10/ 11/  0][1/2/0][      40010][0-0]              4
# 166>       FPAREN_CLOSE[          FUNC_CALL][ 15/ 11/ 12/  0][1/1/0][  100000010][0-0]               )
# 166>            NEWLINE[               NONE][ 16/ 12/  1/  0][1/1/0][          0][1-0]
# 167>             MEMBER[               NONE][  5/  1/  2/  0][1/1/0][  100000000][0-0]     .
# 167>          FUNC_CALL[               NONE][  6/  2/ 14/  0][1/1/0][          0][0-0]      subComponent
# 167>        FPAREN_OPEN[          FUNC_CALL][ 18/ 14/ 15/  0][1/1/0][  100000000][0-0]                  (
# 167>            NEWLINE[               NONE][ 19/ 15/  3/  0][1/2/0][         10][1-0]
# 168>          FUNC_CALL[               NONE][  7/  3/ 19/  0][1/2/0][      40010][0-0]       ComponentBuilder
# 168>        FPAREN_OPEN[          FUNC_CALL][ 23/ 19/ 20/  0][1/2/0][  100000010][0-0]                       (
# 168>       FPAREN_CLOSE[          FUNC_CALL][ 24/ 20/ 21/  0][1/2/0][  100000010][0-0]                        )
# 168>            NEWLINE[               NONE][ 25/ 21/  1/  0][1/2/0][         10][1-0]
# 169>             MEMBER[               NONE][  7/  1/  2/  0][1/2/0][  100000010][0-0]       .
# 169>          FUNC_CALL[               NONE][  8/  2/  9/  0][1/2/0][         10][0-0]        spacing
# 169>        FPAREN_OPEN[          FUNC_CALL][ 15/  9/ 10/  0][1/2/0][  100000010][0-0]               (
# 169>             NUMBER[               NONE][ 16/ 10/ 11/  0][1/3/0][      40010][0-0]                4
# 169>       FPAREN_CLOSE[          FUNC_CALL][ 17/ 11/ 12/  0][1/2/0][  100000010][0-0]                 )
# 169>            NEWLINE[               NONE][ 18/ 12/  0/  0][1/2/0][         10][1-0]
# 169>       FPAREN_CLOSE[          FUNC_CALL][  5/ 12/ 13/  0][1/1/0][  100000010][0-0]     )
# 169>          SEMICOLON[               NONE][  6/ 13/ 14/  0][1/1/0][  100000000][0-0]      ;
# 169>            NEWLINE[               NONE][  7/ 14/  1/  0][1/1/0][          0][1-0]
# 170>        BRACE_CLOSE[           FUNC_DEF][  1/  1/  2/  0][0/0/0][  100000000][0-0] }
# 170>            NEWLINE[               NONE][  2/  2/  1/  0][0/0/0][          0][2-0]
# 172>        COMMENT_CPP[      COMMENT_WHOLE][  1/  1/ 21/  0][0/0/0][          0][0-0] // block indentation
# 172>            NEWLINE[               NONE][ 21/ 21/  1/  0][0/0/0][          0][2-0]
# 174>               TYPE[               NONE][  1/  1/ 17/  0][0/0/0][      70000][0-0] CKComponentScope
# 174>      FUNC_CTOR_VAR[               NONE][ 18/ 18/ 23/  1][0/0/0][    1800000][0-0]                  scope
# 174>        FPAREN_OPEN[      FUNC_CTOR_VAR][ 23/ 23/ 24/  0][0/0/0][  100000000][0-0]                       (
# 174>               WORD[               NONE][ 24/ 24/ 28/  0][0/1/0][20000040000][0-0]                        self
# 174>              COMMA[               NONE][ 28/ 28/ 29/  0][0/1/0][20100000000][0-0]                            ,
# 174>               WORD[               NONE][ 30/ 30/ 37/  1][0/1/0][20000040000][0-0]                              scopeId
# 174>              COMMA[               NONE][ 37/ 37/ 38/  0][0/1/0][20100000000][0-0]                                     ,
# 174>         PAREN_OPEN[             C_CAST][ 39/ 44/ 45/  6][0/1/0][20100040000][0-0]                                       (
# 174>               TYPE[             C_CAST][ 40/ 45/ 47/  0][0/2/0][20000040000][0-0]                                        id
# 174>        PAREN_CLOSE[             C_CAST][ 42/ 47/ 48/  0][0/1/0][20100000000][0-0]                                          )
# 174>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 44/ 49/ 50/  1][0/1/0][20100040000][0-0]                                            ^
# 174>         BRACE_OPEN[      OC_BLOCK_EXPR][ 45/ 51/ 52/  1][0/1/0][20100040000][0-0]                                             {
# 174>            NEWLINE[               NONE][ 46/ 52/  1/  0][1/2/0][20000000000][1-0]
# 175>             RETURN[               NONE][  3/  1/  7/  0][1/2/0][20000060000][0-0]   return
# 175>              OC_AT[               NONE][ 10/ 13/ 14/  6][1/2/0][20100040000][0-0]          @
# 175>         PAREN_OPEN[              OC_AT][ 11/ 14/ 15/  0][1/2/0][20100000000][0-0]           (
# 175>               WORD[               NONE][ 12/ 16/ 37/  1][1/3/0][20800040000][0-0]            actionSheetButtonItem
# 175>             MEMBER[               NONE][ 33/ 37/ 38/  0][1/3/0][20900000000][0-0]                                 .
# 175>               WORD[               NONE][ 34/ 38/ 48/  0][1/3/0][20800000000][0-0]                                  isSelected
# 175>        PAREN_CLOSE[              OC_AT][ 44/ 48/ 49/  0][1/2/0][20900000000][0-0]                                            )
# 175>          SEMICOLON[               NONE][ 45/ 49/ 50/  0][1/2/0][20100000000][0-0]                                             ;
# 175>            NEWLINE[               NONE][ 46/ 50/  7/  0][1/2/0][20000000000][1-0]
# 176>        BRACE_CLOSE[      OC_BLOCK_EXPR][  1/  7/  8/  0][0/1/0][20100000000][0-0] }
# 176>       FPAREN_CLOSE[      FUNC_CTOR_VAR][  2/  8/  9/  0][0/0/0][20100000000][0-0]  )
# 176>          SEMICOLON[      FUNC_CTOR_VAR][  3/  9/ 10/  0][0/0/0][  100000000][0-0]   ;
# 176>            NEWLINE[               NONE][  4/ 10/  1/  0][0/0/0][          0][2-0]
# 178>          QUALIFIER[               NONE][  1/  1/  6/  0][0/0/0][   10470000][0-0] const
# 178>               TYPE[               NONE][  7/ 10/ 18/  4][0/0/0][   10400000][0-0]       CKAction
# 178>         ANGLE_OPEN[           TEMPLATE][ 15/ 18/ 19/  0][0/0/0][  110000040][0-0]               <
# 178>        ANGLE_CLOSE[           TEMPLATE][ 16/ 19/ 20/  0][0/0/0][  110040040][0-0]                >
# 178>               WORD[               NONE][ 18/ 21/ 27/  1][0/0/0][   11840000][0-0]                  action
# 178>             ASSIGN[               NONE][ 25/ 28/ 29/  1][0/0/0][  100000000][0-0]                         =
# 178>            NEWLINE[               NONE][ 26/ 29/  9/  0][0/0/0][          0][1-0]
# 179>               WORD[               NONE][  1/  9/ 17/  0][0/0/0][      40000][0-0] CKAction
# 179>         ANGLE_OPEN[           TEMPLATE][  9/ 17/ 18/  0][0/0/0][  100000040][0-0]         <
# 179>        ANGLE_CLOSE[           TEMPLATE][ 10/ 18/ 19/  0][0/0/0][  100040040][0-0]          >
# 179>          DC_MEMBER[               NONE][ 11/ 19/ 21/  0][0/0/0][  100040000][0-0]           ::
# 179>          FUNC_CALL[               NONE][ 13/ 21/ 36/  0][0/0/0][          0][0-0]             actionFromBlock
# 179>        FPAREN_OPEN[          FUNC_CALL][ 28/ 36/ 37/  0][0/0/0][  100000000][0-0]                            (
# 179>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 29/ 37/ 38/  0][0/1/0][  100040000][0-0]                             ^
# 179>        FPAREN_OPEN[      OC_BLOCK_EXPR][ 30/ 38/ 39/  0][0/1/0][  100040000][0-0]                              (
# 179>               TYPE[      OC_BLOCK_EXPR][ 31/ 39/ 50/  0][0/2/0][ 4000440000][0-0]                               CKComponent
# 179>           PTR_TYPE[      OC_BLOCK_EXPR][ 43/ 51/ 52/  1][0/2/0][ 4100000000][0-0]                                           *
# 179>               WORD[      OC_BLOCK_EXPR][ 44/ 52/ 61/  0][0/2/0][ 4000840000][0-0]                                            component
# 179>       FPAREN_CLOSE[      OC_BLOCK_EXPR][ 53/ 61/ 62/  0][0/1/0][ 4100000000][0-0]                                                     )
# 179>         BRACE_OPEN[      OC_BLOCK_EXPR][ 55/ 63/ 64/  1][0/1/0][  100000000][0-0]                                                       {
# 179>            NEWLINE[               NONE][ 56/ 64/  3/  0][1/2/0][          0][1-0]
# 180>        SQUARE_OPEN[             OC_MSG][  3/  3/  4/  0][1/2/0][  100064000][0-0]   [
# 180>       OC_MSG_CLASS[               NONE][  4/  4/  8/  0][1/3/0][      64000][0-0]    self
# 180>             MEMBER[               NONE][  8/  8/ 10/  0][1/3/0][  100004000][0-0]        ->
# 180>               TYPE[               NONE][ 10/ 10/ 22/  0][1/3/0][      14000][0-0]          _bottomSheet
# 180>        OC_MSG_FUNC[               NONE][ 23/ 23/ 34/  1][1/3/0][     184000][0-0]                       coordinator
# 180>           OC_COLON[               NONE][ 34/ 34/ 35/  0][1/3/0][  100104000][0-0]                                  :
# 180>          FUNC_CALL[               NONE][ 35/ 35/ 46/  0][1/3/0][      64000][0-0]                                   coordinator
# 180>        FPAREN_OPEN[          FUNC_CALL][ 46/ 46/ 47/  0][1/3/0][  100004000][0-0]                                              (
# 180>       FPAREN_CLOSE[          FUNC_CALL][ 47/ 47/ 48/  0][1/3/0][  100004010][0-0]                                               )
# 180>        OC_MSG_NAME[               NONE][ 49/ 49/ 59/  1][1/3/0][       4000][0-0]                                                 completion
# 180>           OC_COLON[        OC_MSG_NAME][ 59/ 59/ 60/  0][1/3/0][  100004000][0-0]                                                           :
# 180>               WORD[               NONE][ 60/ 60/ 63/  0][1/3/0][      64000][0-0]                                                            nil
# 180>       SQUARE_CLOSE[             OC_MSG][ 63/ 63/ 64/  0][1/2/0][  100004000][0-0]                                                               ]
# 180>          SEMICOLON[             OC_MSG][ 64/ 64/ 65/  0][1/2/0][  100000000][0-0]                                                                ;
# 180>            NEWLINE[               NONE][ 65/ 65/  9/  0][1/2/0][          0][1-0]
# 181>        BRACE_CLOSE[      OC_BLOCK_EXPR][  1/  9/ 10/  0][0/1/0][  100000000][0-0] }
# 181>       FPAREN_CLOSE[          FUNC_CALL][  2/ 10/ 11/  0][0/0/0][  100000000][0-0]  )
# 181>          SEMICOLON[               NONE][  3/ 11/ 12/  0][0/0/0][  100000000][0-0]   ;
# 181>            NEWLINE[               NONE][  4/ 12/  1/  0][0/0/0][          0][2-0]
# 183>          QUALIFIER[               NONE][  1/  1/  6/  0][0/0/0][   10470000][0-0] const
# 183>               TYPE[               NONE][  7/  7/ 24/  1][0/0/0][   10410000][0-0]       CKComponentLayout
# 183>               WORD[               NONE][ 25/ 25/ 35/  1][0/0/0][   11800000][0-0]                         bodyLayout
# 183>             ASSIGN[               NONE][ 36/ 36/ 37/  1][0/0/0][  100000000][0-0]                                    =
# 183>            NEWLINE[               NONE][ 37/ 37/  1/  0][0/0/0][          0][1-0]
# 184>          FUNC_CALL[               NONE][  1/  1/  7/  0][0/0/0][      40000][0-0] Layout
# 184>        FPAREN_OPEN[          FUNC_CALL][  7/  7/  8/  0][0/0/0][  100000000][0-0]       (
# 184>            NEWLINE[               NONE][  8/  8/  7/  0][0/1/0][         10][1-0]
# 185>               WORD[               NONE][  3/  7/ 13/  0][0/1/0][      40010][0-0]   layout
# 185>              COMMA[               NONE][  9/ 13/ 14/  0][0/1/0][  100000010][0-0]         ,
# 185>            NEWLINE[               NONE][ 10/ 14/  3/  0][0/1/0][         10][1-0]
# 186>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][  3/  3/  4/  0][0/1/0][  100040010][0-0]   ^
# 186>               TYPE[      OC_BLOCK_EXPR][  4/  4/  8/  0][0/1/0][ 2000040010][0-0]    BOOL
# 186>        FPAREN_OPEN[      OC_BLOCK_EXPR][  9/  9/ 10/  1][0/1/0][  100000010][0-0]         (
# 186>          QUALIFIER[      OC_BLOCK_EXPR][ 10/ 10/ 15/  0][0/2/0][ 4000050010][0-0]          const
# 186>               TYPE[      OC_BLOCK_EXPR][ 16/ 16/ 33/  1][0/2/0][ 4000400010][0-0]                CKComponentLayout
# 186>              BYREF[      OC_BLOCK_EXPR][ 34/ 34/ 35/  1][0/2/0][ 4100000010][0-0]                                  &
# 186>               WORD[      OC_BLOCK_EXPR][ 35/ 35/ 48/  0][0/2/0][ 4000800010][0-0]                                   currentLayout
# 186>       FPAREN_CLOSE[      OC_BLOCK_EXPR][ 48/ 48/ 49/  0][0/1/0][ 4100000010][0-0]                                                )
# 186>         BRACE_OPEN[      OC_BLOCK_EXPR][ 50/ 50/ 51/  1][0/1/0][  100000010][0-0]                                                  {
# 186>            NEWLINE[               NONE][ 51/ 51/  6/  0][1/2/0][         10][1-0]
# 187>             RETURN[               NONE][  5/  6/ 12/  0][1/2/0][      70010][0-0]     return
# 187>               WORD[               NONE][ 12/ 13/ 26/  1][1/2/0][      40010][0-0]            currentLayout
# 187>             MEMBER[               NONE][ 25/ 26/ 27/  0][1/2/0][  100000010][0-0]                         .
# 187>               WORD[               NONE][ 26/ 27/ 36/  0][1/2/0][         10][0-0]                          component
# 187>            COMPARE[               NONE][ 36/ 37/ 39/  1][1/2/0][  100000010][0-0]                                    ==
# 187>               THIS[               NONE][ 39/ 40/ 44/  1][1/2/0][      40010][0-0]                                       self
# 187>             MEMBER[               NONE][ 43/ 44/ 46/  0][1/2/0][  100000010][0-0]                                           ->
# 187>               WORD[               NONE][ 45/ 46/ 59/  0][1/2/0][         10][0-0]                                             _bodyVariants
# 187>             MEMBER[               NONE][ 58/ 59/ 60/  0][1/2/0][  100000010][0-0]                                                          .
# 187>          FUNC_CALL[               NONE][ 59/ 60/ 64/  0][1/2/0][         10][0-0]                                                           back
# 187>        FPAREN_OPEN[          FUNC_CALL][ 63/ 64/ 65/  0][1/2/0][  100000010][0-0]                                                               (
# 187>       FPAREN_CLOSE[          FUNC_CALL][ 64/ 65/ 66/  0][1/2/0][  100000010][0-0]                                                                )
# 187>          SEMICOLON[               NONE][ 65/ 66/ 67/  0][1/2/0][  100000010][0-0]                                                                 ;
# 187>            NEWLINE[               NONE][ 66/ 67/ 11/  0][1/2/0][         10][1-0]
# 188>        BRACE_CLOSE[      OC_BLOCK_EXPR][  3/ 11/ 12/  0][0/1/0][  100000010][0-0]   }
# 188>            NEWLINE[               NONE][  4/ 12/  0/  0][0/1/0][         10][1-0]
# 188>       FPAREN_CLOSE[          FUNC_CALL][  1/ 12/ 13/  0][0/0/0][  100000010][0-0] )
# 188>          SEMICOLON[               NONE][  2/ 13/ 14/  0][0/0/0][  100000000][0-0]  ;
# 188>            NEWLINE[               NONE][  3/ 14/  1/  0][0/0/0][          0][2-0]
# 190>        SQUARE_OPEN[             OC_MSG][  1/  1/  2/  0][0/0/0][  100064000][0-0] [
# 190>        SQUARE_OPEN[             OC_MSG][  2/  2/  3/  0][0/1/0][  100064000][0-0]  [
# 190>       OC_MSG_CLASS[               NONE][  3/  3/ 13/  0][0/2/0][      74000][0-0]   ButtonItem
# 190>        OC_MSG_FUNC[               NONE][ 14/ 14/ 19/  1][0/2/0][       4000][0-0]              alloc
# 190>       SQUARE_CLOSE[             OC_MSG][ 19/ 19/ 20/  0][0/1/0][  100004000][0-0]                   ]
# 190>            NEWLINE[               NONE][ 20/ 20/  2/  0][0/1/0][       4000][1-0]
# 191>        OC_MSG_FUNC[               NONE][  2/  2/  8/  0][0/1/0][       4000][0-0]  action
# 191>           OC_COLON[               NONE][  8/  8/  9/  0][0/1/0][  100004000][0-0]        :
# 191>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][  9/  9/ 10/  0][0/1/0][  100064000][0-0]         ^
# 191>        FPAREN_OPEN[      OC_BLOCK_EXPR][ 10/ 10/ 11/  0][0/1/0][  100044000][0-0]          (
# 191>               TYPE[      OC_BLOCK_EXPR][ 11/ 11/ 19/  0][0/2/0][ 4000444000][0-0]           NSObject
# 191>         ANGLE_OPEN[      OC_BLOCK_EXPR][ 19/ 19/ 20/  0][0/2/0][ 4100004040][0-0]                   <
# 191>               TYPE[      OC_BLOCK_EXPR][ 20/ 20/ 28/  0][0/4/0][ 4000044040][0-0]                    Protocol
# 191>        ANGLE_CLOSE[      OC_BLOCK_EXPR][ 28/ 28/ 29/  0][0/2/0][ 4100004040][0-0]                            >
# 191>           PTR_TYPE[      OC_BLOCK_EXPR][ 30/ 30/ 31/  1][0/2/0][ 4100044000][0-0]                              *
# 191>          QUALIFIER[      OC_BLOCK_EXPR][ 31/ 31/ 39/  0][0/2/0][ 4000054000][0-0]                               _Nonnull
# 191>               WORD[      OC_BLOCK_EXPR][ 40/ 40/ 46/  1][0/2/0][ 4000804000][0-0]                                        dialog
# 191>       FPAREN_CLOSE[      OC_BLOCK_EXPR][ 46/ 46/ 47/  0][0/1/0][ 4100004000][0-0]                                              )
# 191>         BRACE_OPEN[      OC_BLOCK_EXPR][ 48/ 48/ 49/  1][0/1/0][  100004000][0-0]                                                {
# 191>            NEWLINE[               NONE][ 49/ 49/  4/  0][1/2/0][       4000][1-0]
# 192>                 IF[               NONE][  4/  4/  6/  0][1/2/0][      64000][0-0]    if
# 192>        SPAREN_OPEN[                 IF][  7/  6/  7/  0][1/2/0][  100004000][0-0]       (
# 192>               WORD[               NONE][  8/  7/ 15/  0][1/3/0][      44020][0-0]        weakSelf
# 192>       SPAREN_CLOSE[                 IF][ 16/ 15/ 16/  0][1/2/0][  100004000][0-0]                )
# 192>         BRACE_OPEN[                 IF][ 18/ 17/ 18/  1][1/2/0][  100004000][0-0]                  {
# 192>            NEWLINE[               NONE][ 19/ 18/  6/  0][2/3/0][       4000][1-0]
# 193>        SQUARE_OPEN[             OC_MSG][  6/  6/  7/  0][2/3/0][  100064000][0-0]      [
# 193>       OC_MSG_CLASS[               NONE][  7/  7/ 13/  0][2/4/0][      64000][0-0]       dialog
# 193>            NEWLINE[               NONE][ 13/ 13/  9/  0][2/4/0][       4000][1-0]
# 194>        OC_MSG_FUNC[               NONE][  7/  9/ 30/  0][2/4/0][       4000][0-0]       dismissWithCompletion
# 194>           OC_COLON[               NONE][ 28/ 30/ 31/  0][2/4/0][  100004000][0-0]                            :
# 194>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 29/ 31/ 32/  0][2/4/0][  100064000][0-0]                             ^
# 194>         BRACE_OPEN[      OC_BLOCK_EXPR][ 30/ 32/ 33/  0][2/4/0][  100044000][0-0]                              {
# 194>            NEWLINE[               NONE][ 31/ 33/ 11/  0][3/5/0][       4000][1-0]
# 195>          FUNC_CALL[               NONE][  9/ 11/ 30/  0][3/5/0][      64000][0-0]         _deleteConversation
# 195>        FPAREN_OPEN[          FUNC_CALL][ 28/ 30/ 31/  0][3/5/0][  100004000][0-0]                            (
# 195>            NEWLINE[               NONE][ 29/ 31/ 15/  0][3/6/0][       4010][1-0]
# 196>               WORD[               NONE][ 11/ 15/ 25/  0][3/6/0][      44010][0-0]           strongSelf
# 196>             MEMBER[               NONE][ 21/ 25/ 27/  0][3/6/0][  100004010][0-0]                     ->
# 196>               WORD[               NONE][ 23/ 27/ 35/  0][3/6/0][       4010][0-0]                       _session
# 196>              COMMA[               NONE][ 31/ 35/ 36/  0][3/6/0][  100004010][0-0]                               ,
# 196>            NEWLINE[               NONE][ 32/ 36/ 11/  0][3/6/0][       4010][1-0]
# 197>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 11/ 11/ 12/  0][3/6/0][  100044010][0-0]           ^
# 197>         BRACE_OPEN[      OC_BLOCK_EXPR][ 12/ 12/ 13/  0][3/6/0][  100044010][0-0]            {
# 197>            NEWLINE[               NONE][ 13/ 13/  9/  0][4/7/0][       4010][1-0]
# 198>                 IF[               NONE][ 13/  9/ 11/  0][4/7/0][      64010][0-0]             if
# 198>        SPAREN_OPEN[                 IF][ 16/ 12/ 13/  1][4/7/0][  100004010][0-0]                (
# 198>               TYPE[               NONE][ 17/ 13/ 17/  0][4/8/0][   10054030][0-0]                 auto
# 198>          QUALIFIER[               NONE][ 22/ 18/ 23/  1][4/8/0][   10014030][0-0]                      const
# 198>               WORD[               NONE][ 28/ 24/ 39/  1][4/8/0][   10004030][0-0]                            innerStrongSelf
# 198>             ASSIGN[               NONE][ 44/ 40/ 41/  1][4/8/0][  100004030][0-0]                                            =
# 198>               WORD[               NONE][ 46/ 42/ 50/  1][4/8/0][      44030][0-0]                                              weakSelf
# 198>       SPAREN_CLOSE[                 IF][ 54/ 50/ 51/  0][4/7/0][  100004010][0-0]                                                      )
# 198>         BRACE_OPEN[                 IF][ 56/ 52/ 53/  1][4/7/0][  100004010][0-0]                                                        {
# 198>            NEWLINE[               NONE][ 57/ 53/ 15/  0][5/8/0][       4010][1-0]
# 199>        SQUARE_OPEN[             OC_MSG][ 15/ 15/ 16/  0][5/8/0][  100064010][0-0]               [
# 199>          FUNC_CALL[               NONE][ 16/ 16/ 54/  0][5/9/0][      64010][0-0]                NavigationCoordinatorForViewController
# 199>        FPAREN_OPEN[          FUNC_CALL][ 54/ 54/ 55/  0][5/9/0][  100004010][0-0]                                                      (
# 199>               WORD[               NONE][ 55/ 55/ 70/  0][5/10/0][      44010][0-0]                                                       innerStrongSelf
# 199>       FPAREN_CLOSE[          FUNC_CALL][ 70/ 70/ 71/  0][5/9/0][  100004010][0-0]                                                                      )
# 199>            NEWLINE[               NONE][ 71/ 71/ 15/  0][5/9/0][       4010][1-0]
# 200>        OC_MSG_FUNC[               NONE][ 16/ 15/ 36/  0][5/9/0][       4010][0-0]                dismissViewController
# 200>           OC_COLON[               NONE][ 37/ 36/ 37/  0][5/9/0][  100004010][0-0]                                     :
# 200>               TYPE[               NONE][ 38/ 37/ 52/  0][5/9/0][      64010][0-0]                                      innerStrongSelf
# 200>            NEWLINE[               NONE][ 53/ 52/ 15/  0][5/9/0][       4010][1-0]
# 201>        OC_MSG_NAME[               NONE][ 16/ 15/ 25/  0][5/9/0][       4010][0-0]                completion
# 201>           OC_COLON[        OC_MSG_NAME][ 26/ 25/ 26/  0][5/9/0][  100004010][0-0]                          :
# 201>               WORD[               NONE][ 27/ 26/ 29/  0][5/9/0][      64010][0-0]                           nil
# 201>       SQUARE_CLOSE[             OC_MSG][ 30/ 29/ 30/  0][5/8/0][  100004010][0-0]                              ]
# 201>          SEMICOLON[             OC_MSG][ 31/ 30/ 31/  0][5/8/0][  100004010][0-0]                               ;
# 201>            NEWLINE[               NONE][ 32/ 31/ 13/  0][5/8/0][       4010][1-0]
# 202>        BRACE_CLOSE[                 IF][ 13/ 13/ 14/  0][4/7/0][  100004010][0-0]             }
# 202>            NEWLINE[               NONE][ 14/ 14/ 13/  0][4/7/0][       4010][1-0]
# 203>        BRACE_CLOSE[      OC_BLOCK_EXPR][ 11/ 13/ 14/  0][3/6/0][  100004010][0-0]           }
# 203>            NEWLINE[               NONE][ 12/ 14/  0/  0][3/6/0][       4010][1-0]
# 203>       FPAREN_CLOSE[          FUNC_CALL][  9/ 14/ 15/  0][3/5/0][  100004010][0-0]         )
# 203>          SEMICOLON[               NONE][ 10/ 15/ 16/  0][3/5/0][  100004000][0-0]          ;
# 203>            NEWLINE[               NONE][ 11/ 16/  7/  0][3/5/0][       4000][1-0]
# 204>        BRACE_CLOSE[      OC_BLOCK_EXPR][  7/  7/  8/  0][2/4/0][  100004000][0-0]       }
# 204>       SQUARE_CLOSE[             OC_MSG][  8/  8/  9/  0][2/3/0][  100004000][0-0]        ]
# 204>          SEMICOLON[             OC_MSG][  9/  9/ 10/  0][2/3/0][  100004000][0-0]         ;
# 204>            NEWLINE[               NONE][ 10/ 10/  9/  0][2/3/0][       4000][1-0]
# 205>        BRACE_CLOSE[                 IF][  4/  9/ 10/  0][1/2/0][  100004000][0-0]    }
# 205>            NEWLINE[               NONE][  5/ 10/  3/  0][1/2/0][       4000][1-0]
# 206>        BRACE_CLOSE[      OC_BLOCK_EXPR][  2/  3/  4/  0][0/1/0][  100004000][0-0]  }
# 206>       SQUARE_CLOSE[             OC_MSG][  3/  4/  5/  0][0/0/0][  100004000][0-0]   ]
# 206>          SEMICOLON[             OC_MSG][  4/  5/  6/  0][0/0/0][  100000000][0-0]    ;
# 206>            NEWLINE[               NONE][  5/  6/  3/  0][0/0/0][          0][2-0]
# 208>               WORD[               NONE][  1/  3/ 27/  0][0/0/0][      60000][0-0] ProfileBlockUserMutation
# 208>         PAREN_OPEN[               NONE][ 26/ 27/ 28/  0][0/0/0][  100000000][0-0]                          (
# 208>            NEWLINE[               NONE][ 27/ 28/ 41/  0][0/1/0][          0][1-0]
# 209>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][  3/ 41/ 42/  0][0/1/0][  100040000][0-0]   ^
# 209>        FPAREN_OPEN[      OC_BLOCK_EXPR][  4/ 42/ 43/  0][0/1/0][  100040000][0-0]    (
# 209>               TYPE[      OC_BLOCK_EXPR][  5/ 43/ 50/  0][0/2/0][ 4000440000][0-0]     NSError
# 209>           PTR_TYPE[      OC_BLOCK_EXPR][ 13/ 51/ 52/  1][0/2/0][ 4100000000][0-0]             *
# 209>               WORD[      OC_BLOCK_EXPR][ 14/ 52/ 57/  0][0/2/0][ 4000840000][0-0]              error
# 209>       FPAREN_CLOSE[      OC_BLOCK_EXPR][ 19/ 57/ 58/  0][0/1/0][ 4100000000][0-0]                   )
# 209>         BRACE_OPEN[      OC_BLOCK_EXPR][ 21/ 59/ 60/  1][0/1/0][  100000000][0-0]                     {
# 209>            NEWLINE[               NONE][ 22/ 60/  8/  0][1/2/0][          0][1-0]
# 210>                 IF[               NONE][  5/  8/ 10/  0][1/2/0][      60000][0-0]     if
# 210>        SPAREN_OPEN[                 IF][  8/ 11/ 12/  1][1/2/0][  100000000][0-0]        (
# 210>               WORD[               NONE][  9/ 12/ 20/  0][1/3/0][      40020][0-0]         weakSelf
# 210>       SPAREN_CLOSE[                 IF][ 17/ 20/ 21/  0][1/2/0][  100000000][0-0]                 )
# 210>         BRACE_OPEN[                 IF][ 19/ 22/ 23/  1][1/2/0][  100000000][0-0]                   {
# 210>            NEWLINE[               NONE][ 20/ 23/ 10/  0][2/3/0][          0][1-0]
# 211>          FUNC_CALL[               NONE][  7/ 10/ 32/  0][2/3/0][      60000][0-0]       ProfileHandleWithError
# 211>        FPAREN_OPEN[          FUNC_CALL][ 29/ 32/ 33/  0][2/3/0][  100000000][0-0]                             (
# 211>               WORD[               NONE][ 30/ 33/ 38/  0][2/4/0][      40010][0-0]                              error
# 211>       FPAREN_CLOSE[          FUNC_CALL][ 35/ 38/ 39/  0][2/3/0][  100000010][0-0]                                   )
# 211>          SEMICOLON[               NONE][ 36/ 39/ 40/  0][2/3/0][  100000000][0-0]                                    ;
# 211>            NEWLINE[               NONE][ 37/ 40/  8/  0][2/3/0][          0][1-0]
# 212>        BRACE_CLOSE[                 IF][  5/  8/  9/  0][1/2/0][  100000000][0-0]     }
# 212>            NEWLINE[               NONE][  6/  9/  6/  0][1/2/0][          0][1-0]
# 213>        BRACE_CLOSE[      OC_BLOCK_EXPR][  3/  6/  7/  0][0/1/0][  100000000][0-0]   }
# 213>              COMMA[               NONE][  4/  7/  8/  0][0/1/0][  100060000][0-0]    ,
# 213>            NEWLINE[               NONE][  5/  8/ 41/  0][0/1/0][          0][1-0]
# 214>               WORD[               NONE][  3/ 41/ 44/  0][0/1/0][      40000][0-0]   nil
# 214>        PAREN_CLOSE[               NONE][  6/ 44/ 45/  0][0/0/0][  100000000][0-0]      )
# 214>          SEMICOLON[               NONE][  7/ 45/ 46/  0][0/0/0][  100000000][0-0]       ;
# 214>            NEWLINE[               NONE][  8/ 46/  1/  0][0/0/0][          0][2-0]
# 216>        SQUARE_OPEN[             OC_MSG][  1/  1/  2/  0][0/0/0][  100064000][0-0] [
# 216>       OC_MSG_CLASS[               NONE][  2/  2/ 26/  0][0/1/0][      64000][0-0]  ActionBarButtonComponent
# 216>            NEWLINE[               NONE][ 26/ 26/  4/  0][0/1/0][       4000][1-0]
# 217>        OC_MSG_FUNC[               NONE][  2/  4/ 11/  0][0/1/0][       4000][0-0]  options
# 217>           OC_COLON[               NONE][  9/ 11/ 12/  0][0/1/0][  100004000][0-0]         :
# 217>         BRACE_OPEN[               NONE][ 10/ 12/ 13/  0][0/1/0][  100064000][0-0]          {
# 217>            NEWLINE[               NONE][ 11/ 13/  6/  0][1/2/0][       4000][1-0]
# 218>         C99_MEMBER[               NONE][  4/  6/  7/  0][1/2/0][  110064000][0-0]    .
# 218>               WORD[         C99_MEMBER][  5/  7/ 27/  0][1/2/0][   10004000][0-0]     colorForControlState
# 218>             ASSIGN[               NONE][ 26/ 28/ 29/  1][1/2/0][  100004000][0-0]                          =
# 218>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 28/ 30/ 31/  1][1/2/0][  100044000][0-0]                            ^
# 218>               TYPE[      OC_BLOCK_EXPR][ 29/ 31/ 38/  0][1/2/0][ 2000044000][0-0]                             UIColor
# 218>           PTR_TYPE[      OC_BLOCK_EXPR][ 37/ 39/ 40/  1][1/2/0][ 2100004000][0-0]                                     *
# 218>        FPAREN_OPEN[      OC_BLOCK_EXPR][ 38/ 40/ 41/  0][1/2/0][  100044000][0-0]                                      (
# 218>               TYPE[      OC_BLOCK_EXPR][ 39/ 41/ 55/  0][1/3/0][ 4000454000][0-0]                                       UIControlState
# 218>               WORD[      OC_BLOCK_EXPR][ 54/ 56/ 68/  1][1/3/0][ 4000804000][0-0]                                                      controlState
# 218>       FPAREN_CLOSE[      OC_BLOCK_EXPR][ 66/ 68/ 69/  0][1/2/0][ 4100004000][0-0]                                                                  )
# 218>         BRACE_OPEN[      OC_BLOCK_EXPR][ 68/ 70/ 71/  1][1/2/0][  100004000][0-0]                                                                    {
# 218>            NEWLINE[               NONE][ 69/ 71/  7/  0][2/3/0][       4000][1-0]
# 219>             RETURN[               NONE][  6/  7/ 13/  0][2/3/0][      64000][0-0]      return
# 219>        SQUARE_OPEN[             OC_MSG][ 13/ 14/ 15/  1][2/3/0][  100044000][0-0]             [
# 219>       OC_MSG_CLASS[               NONE][ 14/ 15/ 19/  0][2/4/0][      74000][0-0]              item
# 219>        OC_MSG_FUNC[               NONE][ 19/ 20/ 38/  1][2/4/0][     184000][0-0]                   titleColorForState
# 219>           OC_COLON[               NONE][ 37/ 38/ 39/  0][2/4/0][  100104000][0-0]                                     :
# 219>               WORD[               NONE][ 38/ 39/ 51/  0][2/4/0][      64000][0-0]                                      controlState
# 219>       SQUARE_CLOSE[             OC_MSG][ 50/ 51/ 52/  0][2/3/0][  100004000][0-0]                                                  ]
# 219>          SEMICOLON[             OC_MSG][ 51/ 52/ 53/  0][2/3/0][  100004000][0-0]                                                   ;
# 219>            NEWLINE[               NONE][ 52/ 53/  5/  0][2/3/0][       4000][1-0]
# 220>        BRACE_CLOSE[      OC_BLOCK_EXPR][  4/  5/  6/  0][1/2/0][  100004000][0-0]    }
# 220>              COMMA[               NONE][  5/  6/  7/  0][1/2/0][  100064000][0-0]     ,
# 220>            NEWLINE[               NONE][  6/  7/  4/  0][1/2/0][       4000][1-0]
# 221>        BRACE_CLOSE[               NONE][  2/  4/  5/  0][0/1/0][  100004000][0-0]  }
# 221>            NEWLINE[               NONE][  3/  5/  4/  0][0/1/0][       4000][1-0]
# 222>        OC_MSG_NAME[               NONE][  2/  4/ 11/  0][0/1/0][      64000][0-0]  session
# 222>           OC_COLON[        OC_MSG_NAME][  9/ 11/ 12/  0][0/1/0][  100004000][0-0]         :
# 222>               WORD[               NONE][ 10/ 12/ 19/  0][0/1/0][      64000][0-0]          session
# 222>       SQUARE_CLOSE[             OC_MSG][ 17/ 19/ 20/  0][0/0/0][  100004000][0-0]                 ]
# 222>          SEMICOLON[             OC_MSG][ 18/ 20/ 21/  0][0/0/0][  100000000][0-0]                  ;
# 222>            NEWLINE[               NONE][ 19/ 21/  1/  0][0/0/0][          0][2-0]
# 224>        SQUARE_OPEN[             OC_MSG][  1/  1/  2/  0][0/0/0][  100064000][0-0] [
# 224>       OC_MSG_CLASS[               NONE][  2/  2/ 20/  0][0/1/0][      64000][0-0]  CKFlexboxComponent
# 224>            NEWLINE[               NONE][ 20/ 20/  1/  0][0/1/0][       4000][1-0]
# 225>        OC_MSG_FUNC[               NONE][  2/  1/ 12/  0][0/1/0][       4000][0-0]  newWithView
# 225>           OC_COLON[               NONE][ 13/ 12/ 13/  0][0/1/0][  100004000][0-0]             :
# 225>         BRACE_OPEN[               NONE][ 14/ 13/ 14/  0][0/1/0][  100064000][0-0]              {
# 225>            NEWLINE[               NONE][ 15/ 14/  4/  0][1/2/0][       4000][1-0]
# 226>         BRACE_OPEN[   BRACED_INIT_LIST][  4/  4/  5/  0][1/2/0][  100064000][0-0]    {
# 226>            NEWLINE[               NONE][  5/  5/  3/  0][2/3/0][       4000][1-0]
# 227>         C99_MEMBER[               NONE][  6/  3/  4/  0][2/3/0][  110064000][0-0]      .
# 227>               WORD[         C99_MEMBER][  7/  4/ 22/  0][2/3/0][   10004000][0-0]       accessibilityLabel
# 227>             ASSIGN[               NONE][ 26/ 23/ 24/  1][2/3/0][  100004000][0-0]                          =
# 227>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 28/ 25/ 26/  1][2/3/0][  100044000][0-0]                            ^
# 227>         BRACE_OPEN[      OC_BLOCK_EXPR][ 29/ 26/ 27/  0][2/3/0][  100044000][0-0]                             {
# 227>            NEWLINE[               NONE][ 30/ 27/  5/  0][3/4/0][       4000][1-0]
# 228>             RETURN[               NONE][  8/  5/ 11/  0][3/4/0][      64000][0-0]        return
# 228>            NEWLINE[               NONE][ 14/ 11/  3/  0][3/4/0][       4000][1-0]
# 229>        SQUARE_OPEN[             OC_MSG][  8/  3/  4/  0][3/4/0][  100044000][0-0]        [
# 229>        SQUARE_OPEN[             OC_MSG][  9/  4/  5/  0][3/5/0][  100064000][0-0]         [
# 229>        SQUARE_OPEN[             OC_MSG][ 10/  5/  6/  0][3/6/0][  100064000][0-0]          [
# 229>        SQUARE_OPEN[             OC_MSG][ 11/  6/  7/  0][3/7/0][  100064000][0-0]           [
# 229>       OC_MSG_CLASS[               NONE][ 12/  7/ 32/  0][3/8/0][      74000][0-0]            AccessibilityLabelBuilder
# 229>        OC_MSG_FUNC[               NONE][ 38/ 33/ 40/  1][3/8/0][       4000][0-0]                                      builder
# 229>       SQUARE_CLOSE[             OC_MSG][ 45/ 40/ 41/  0][3/7/0][  100004000][0-0]                                             ]
# 229>            NEWLINE[               NONE][ 46/ 41/  7/  0][3/7/0][       4000][1-0]
# 230>        OC_MSG_FUNC[               NONE][ 11/  7/ 19/  0][3/7/0][       4000][0-0]           appendPhrase
# 230>           OC_COLON[               NONE][ 23/ 19/ 20/  0][3/7/0][  100004000][0-0]                       :
# 230>               WORD[               NONE][ 24/ 20/ 35/  0][3/7/0][      64000][0-0]                        bottomSheetItem
# 230>             MEMBER[               NONE][ 39/ 35/ 36/  0][3/7/0][  100004000][0-0]                                       .
# 230>               WORD[               NONE][ 40/ 36/ 41/  0][3/7/0][       4000][0-0]                                        title
# 230>       SQUARE_CLOSE[             OC_MSG][ 45/ 41/ 42/  0][3/6/0][  100004000][0-0]                                             ]
# 230>            NEWLINE[               NONE][ 46/ 42/  5/  0][3/6/0][       4000][1-0]
# 231>        OC_MSG_FUNC[               NONE][ 10/  5/ 17/  0][3/6/0][       4000][0-0]          appendPhrase
# 231>           OC_COLON[               NONE][ 22/ 17/ 18/  0][3/6/0][  100004000][0-0]                      :
# 231>               WORD[               NONE][ 23/ 18/ 33/  0][3/6/0][      64000][0-0]                       bottomSheetItem
# 231>             MEMBER[               NONE][ 38/ 33/ 34/  0][3/6/0][  100004000][0-0]                                      .
# 231>               WORD[               NONE][ 39/ 34/ 38/  0][3/6/0][       4000][0-0]                                       body
# 231>       SQUARE_CLOSE[             OC_MSG][ 43/ 38/ 39/  0][3/5/0][  100004000][0-0]                                           ]
# 231>            NEWLINE[               NONE][ 44/ 39/  5/  0][3/5/0][       4000][1-0]
# 232>        OC_MSG_FUNC[               NONE][  9/  5/ 14/  0][3/5/0][       4000][0-0]         getResult
# 232>       SQUARE_CLOSE[             OC_MSG][ 18/ 14/ 15/  0][3/4/0][  100004000][0-0]                  ]
# 232>          SEMICOLON[             OC_MSG][ 19/ 15/ 16/  0][3/4/0][  100004000][0-0]                   ;
# 232>            NEWLINE[               NONE][ 20/ 16/  5/  0][3/4/0][       4000][1-0]
# 233>        BRACE_CLOSE[      OC_BLOCK_EXPR][  6/  5/  6/  0][2/3/0][  100004000][0-0]      }
# 233>              COMMA[               NONE][  7/  6/  7/  0][2/3/0][  100064000][0-0]       ,
# 233>            NEWLINE[               NONE][  8/  7/  4/  0][2/3/0][       4000][1-0]
# 234>        BRACE_CLOSE[   BRACED_INIT_LIST][  4/  4/  5/  0][1/2/0][  100004000][0-0]    }
# 234>            NEWLINE[               NONE][  5/  5/  2/  0][1/2/0][       4000][1-0]
# 235>        BRACE_CLOSE[               NONE][  2/  2/  3/  0][0/1/0][  100004000][0-0]  }
# 235>       SQUARE_CLOSE[             OC_MSG][  3/  3/  4/  0][0/0/0][  100004000][0-0]   ]
# 235>          SEMICOLON[             OC_MSG][  4/  4/  5/  0][0/0/0][  100000000][0-0]    ;
# 235>            NEWLINE[               NONE][  5/  5/  1/  0][0/0/0][          0][2-0]
# 237>        SQUARE_OPEN[             OC_MSG][  1/  1/  2/  0][0/0/0][  100064000][0-0] [
# 237>       OC_MSG_CLASS[               NONE][  2/  2/ 13/  0][0/1/0][      74000][0-0]  bottomSheet
# 237>        OC_MSG_FUNC[               NONE][ 14/ 15/ 22/  2][0/1/0][     184000][0-0]              dismiss
# 237>           OC_COLON[               NONE][ 21/ 22/ 23/  0][0/1/0][  100104000][0-0]                     :
# 237>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 22/ 23/ 24/  0][0/1/0][  100064000][0-0]                      ^
# 237>         BRACE_OPEN[      OC_BLOCK_EXPR][ 23/ 24/ 25/  0][0/1/0][  100044000][0-0]                       {
# 237>            NEWLINE[               NONE][ 24/ 25/ 15/  0][1/2/0][       4000][1-0]
# 238>               WORD[               NONE][  3/ 15/ 22/  0][1/2/0][      64000][0-0]   variant
# 238>             MEMBER[               NONE][ 10/ 22/ 23/  0][1/2/0][  100004000][0-0]          .
# 238>               WORD[               NONE][ 11/ 23/ 29/  0][1/2/0][       4000][0-0]           action
# 238>             MEMBER[               NONE][ 17/ 29/ 30/  0][1/2/0][  100004000][0-0]                 .
# 238>          FUNC_CALL[               NONE][ 18/ 30/ 34/  0][1/2/0][       4000][0-0]                  send
# 238>        FPAREN_OPEN[          FUNC_CALL][ 22/ 34/ 35/  0][1/2/0][  100004000][0-0]                      (
# 238>               WORD[               NONE][ 23/ 35/ 44/  0][1/3/0][      44010][0-0]                       component
# 238>       FPAREN_CLOSE[          FUNC_CALL][ 32/ 44/ 45/  0][1/2/0][  100004010][0-0]                                )
# 238>          SEMICOLON[               NONE][ 33/ 45/ 46/  0][1/2/0][  100004000][0-0]                                 ;
# 238>            NEWLINE[               NONE][ 34/ 46/  7/  0][1/2/0][       4000][1-0]
# 239>        BRACE_CLOSE[      OC_BLOCK_EXPR][  1/  7/  8/  0][0/1/0][  100004000][0-0] }
# 239>       SQUARE_CLOSE[             OC_MSG][  2/  8/  9/  0][0/0/0][  100004000][0-0]  ]
# 239>          SEMICOLON[             OC_MSG][  3/  9/ 10/  0][0/0/0][  100000000][0-0]   ;
# 239>            NEWLINE[               NONE][  4/ 10/  1/  0][0/0/0][          0][2-0]
# 241>          FUNC_CALL[               NONE][  1/  1/ 14/  0][0/0/0][      60000][0-0] MainComponent
# 241>        FPAREN_OPEN[          FUNC_CALL][ 14/ 14/ 15/  0][0/0/0][  100000000][0-0]              (
# 241>            NEWLINE[               NONE][ 15/ 15/  3/  0][0/1/0][         10][1-0]
# 242>             MEMBER[               NONE][  3/  3/  4/  0][0/1/0][  110040010][0-0]   .
# 242>               WORD[               NONE][  4/  4/ 11/  0][0/1/0][   10000010][0-0]    builder
# 242>             ASSIGN[               NONE][ 12/ 12/ 13/  1][0/1/0][  100000010][0-0]            =
# 242>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 14/ 14/ 15/  1][0/1/0][  100040010][0-0]              ^
# 242>         BRACE_OPEN[      OC_BLOCK_EXPR][ 15/ 15/ 16/  0][0/1/0][  100040010][0-0]               {
# 242>            NEWLINE[               NONE][ 16/ 16/  3/  0][1/2/0][         10][1-0]
# 243>             RETURN[               NONE][  5/  3/  9/  0][1/2/0][      60010][0-0]     return
# 243>            NEWLINE[               NONE][ 11/  9/  3/  0][1/2/0][         10][1-0]
# 244>               WORD[               NONE][  5/  3/  8/  0][1/2/0][      40010][0-0]     value
# 244>          SEMICOLON[               NONE][ 10/  8/  9/  0][1/2/0][  100000010][0-0]          ;
# 244>            NEWLINE[               NONE][ 11/  9/  1/  0][1/2/0][         10][1-0]
# 245>        BRACE_CLOSE[      OC_BLOCK_EXPR][  3/  1/  2/  0][0/1/0][  100000010][0-0]   }
# 245>              COMMA[               NONE][  4/  2/  3/  0][0/1/0][  100060010][0-0]    ,
# 245>            NEWLINE[               NONE][  5/  3/  1/  0][0/1/0][         10][1-0]
# 246>               WORD[               NONE][  3/  1/  7/  0][0/1/0][      40010][0-0]   param1
# 246>              COMMA[               NONE][  9/  7/  8/  0][0/1/0][  100000010][0-0]         ,
# 246>            NEWLINE[               NONE][ 10/  8/  1/  0][0/1/0][         10][1-0]
# 247>               WORD[               NONE][  3/  1/  7/  0][0/1/0][      40010][0-0]   param2
# 247>              COMMA[               NONE][  9/  7/  8/  0][0/1/0][  100000010][0-0]         ,
# 247>            NEWLINE[               NONE][ 10/  8/  3/  0][0/1/0][         10][1-0]
# 248>       FPAREN_CLOSE[          FUNC_CALL][  1/  3/  4/  0][0/0/0][  100000010][0-0] )
# 248>          SEMICOLON[               NONE][  2/  4/  5/  0][0/0/0][  100000000][0-0]  ;
# 248>            NEWLINE[               NONE][  3/  5/  5/  0][0/0/0][          0][2-0]
# 251>        SQUARE_OPEN[             OC_MSG][  1/  5/  6/  0][0/0/0][  100064000][0-0] [
# 251>       OC_MSG_CLASS[               NONE][  2/  7/ 20/  1][0/1/0][   10064000][0-0]  MainComponent
# 251>            NEWLINE[               NONE][ 15/ 20/  1/  0][0/1/0][       4000][1-0]
# 252>        OC_MSG_FUNC[               NONE][  2/  1/  8/  0][0/1/0][   10004000][0-0]  builder
# 252>           OC_COLON[               NONE][  9/  8/  9/  0][0/1/0][  110004000][0-0]         :
# 252>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 10/  9/ 10/  0][0/1/0][  110064000][0-0]          ^
# 252>               TYPE[      OC_BLOCK_EXPR][ 11/ 10/ 12/  0][0/1/0][ 2010044000][0-0]           FS
# 252>          DC_MEMBER[      OC_BLOCK_EXPR][ 13/ 12/ 14/  0][0/1/0][ 2110004000][0-0]             ::
# 252>               TYPE[      OC_BLOCK_EXPR][ 15/ 14/ 24/  0][0/1/0][ 2010004000][0-0]               ActionCell
# 252>          DC_MEMBER[      OC_BLOCK_EXPR][ 25/ 24/ 26/  0][0/1/0][ 2110004000][0-0]                         ::
# 252>               TYPE[      OC_BLOCK_EXPR][ 27/ 26/ 30/  0][0/1/0][ 2010004000][0-0]                           Item
# 252>         BRACE_OPEN[      OC_BLOCK_EXPR][ 32/ 30/ 31/  0][0/1/0][  100004000][0-0]                                {
# 252>            NEWLINE[               NONE][ 33/ 31/  5/  0][1/2/0][       4000][1-0]
# 253>             RETURN[               NONE][  4/  5/ 11/  0][1/2/0][      64000][0-0]    return
# 253>            NEWLINE[               NONE][ 10/ 11/  3/  0][1/2/0][       4000][1-0]
# 254>               WORD[               NONE][  4/  3/  8/  0][1/2/0][      44000][0-0]    value
# 254>          SEMICOLON[               NONE][  9/  8/  9/  0][1/2/0][  100004000][0-0]         ;
# 254>            NEWLINE[               NONE][ 10/  9/ 11/  0][1/2/0][       4000][1-0]
# 255>        BRACE_CLOSE[      OC_BLOCK_EXPR][  2/ 11/ 12/  0][0/1/0][  100004000][0-0]  }
# 255>       SQUARE_CLOSE[             OC_MSG][  3/ 14/ 15/  2][0/0/0][  100004000][0-0]   ]
# 255>          SEMICOLON[             OC_MSG][  4/ 15/ 16/  0][0/0/0][  100000000][0-0]    ;
# 255>            NEWLINE[               NONE][  5/ 16/  1/  0][0/0/0][          0][2-0]
# 257>        SQUARE_OPEN[             OC_MSG][  1/  1/  2/  0][0/0/0][  100064000][0-0] [
# 257>       OC_MSG_CLASS[               NONE][  2/  2/ 11/  0][0/1/0][      64000][0-0]  something
# 257>            NEWLINE[               NONE][ 11/ 11/  2/  0][0/1/0][       4000][1-0]
# 258>        OC_MSG_FUNC[               NONE][  2/  2/ 11/  0][0/1/0][       4000][0-0]  withBlock
# 258>           OC_COLON[               NONE][ 11/ 11/ 12/  0][0/1/0][  100004000][0-0]           :
# 258>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 12/ 12/ 13/  0][0/1/0][  100064000][0-0]            ^
# 258>               TYPE[      OC_BLOCK_EXPR][ 13/ 13/ 15/  0][0/1/0][ 2000044000][0-0]             id
# 258>        FPAREN_OPEN[      OC_BLOCK_EXPR][ 16/ 16/ 17/  1][0/1/0][  100004000][0-0]                (
# 258>               TYPE[      OC_BLOCK_EXPR][ 17/ 17/ 26/  0][0/2/0][ 4000444000][0-0]                 Component
# 258>           PTR_TYPE[      OC_BLOCK_EXPR][ 27/ 27/ 28/  1][0/2/0][ 4100004000][0-0]                           *
# 258>               WORD[      OC_BLOCK_EXPR][ 28/ 28/ 29/  0][0/2/0][ 4000844000][0-0]                            c
# 258>       FPAREN_CLOSE[      OC_BLOCK_EXPR][ 29/ 29/ 30/  0][0/1/0][ 4100004000][0-0]                             )
# 258>         BRACE_OPEN[      OC_BLOCK_EXPR][ 31/ 31/ 32/  1][0/1/0][  100004000][0-0]                               {
# 258>            NEWLINE[               NONE][ 32/ 32/ 33/  0][1/2/0][       4000][1-0]
# 259>          FUNC_CALL[               NONE][  4/ 33/ 38/  0][1/2/0][      64000][0-0]    NSLog
# 259>        FPAREN_OPEN[          FUNC_CALL][  9/ 38/ 39/  0][1/2/0][  100004000][0-0]         (
# 259>             STRING[               NONE][ 10/ 39/ 51/  0][1/3/0][      44010][0-0]          @"Something"
# 259>       FPAREN_CLOSE[          FUNC_CALL][ 22/ 51/ 52/  0][1/2/0][  100004010][0-0]                      )
# 259>          SEMICOLON[               NONE][ 23/ 52/ 53/  0][1/2/0][  100004000][0-0]                       ;
# 259>            NEWLINE[               NONE][ 24/ 53/ 31/  0][1/2/0][       4000][1-0]
# 260>        BRACE_CLOSE[      OC_BLOCK_EXPR][  2/ 31/ 32/  0][0/1/0][  100004000][0-0]  }
# 260>       SQUARE_CLOSE[             OC_MSG][  3/ 32/ 33/  0][0/0/0][  100004000][0-0]   ]
# 260>          SEMICOLON[             OC_MSG][  4/ 33/ 34/  0][0/0/0][  100000000][0-0]    ;
# 260>            NEWLINE[               NONE][  5/ 34/  1/  0][0/0/0][          0][2-0]
# 262>        SQUARE_OPEN[             OC_MSG][  1/  1/  2/  0][0/0/0][  100064000][0-0] [
# 262>       OC_MSG_CLASS[               NONE][  2/  2/ 11/  0][0/1/0][      64000][0-0]  something
# 262>            NEWLINE[               NONE][ 11/ 11/  2/  0][0/1/0][       4000][1-0]
# 263>        OC_MSG_FUNC[               NONE][  2/  2/ 11/  0][0/1/0][       4000][0-0]  withBlock
# 263>           OC_COLON[               NONE][ 11/ 11/ 12/  0][0/1/0][  100004000][0-0]           :
# 263>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 12/ 12/ 13/  0][0/1/0][  100064000][0-0]            ^
# 263>        FPAREN_OPEN[      OC_BLOCK_EXPR][ 13/ 13/ 14/  0][0/1/0][  100044000][0-0]             (
# 263>               TYPE[      OC_BLOCK_EXPR][ 14/ 14/ 23/  0][0/2/0][ 4000444000][0-0]              Component
# 263>           PTR_TYPE[      OC_BLOCK_EXPR][ 24/ 24/ 25/  1][0/2/0][ 4100004000][0-0]                        *
# 263>               WORD[      OC_BLOCK_EXPR][ 25/ 25/ 26/  0][0/2/0][ 4000844000][0-0]                         c
# 263>       FPAREN_CLOSE[      OC_BLOCK_EXPR][ 26/ 26/ 27/  0][0/1/0][ 4100004000][0-0]                          )
# 263>         BRACE_OPEN[      OC_BLOCK_EXPR][ 28/ 28/ 29/  1][0/1/0][  100004000][0-0]                            {
# 263>            NEWLINE[               NONE][ 29/ 29/ 30/  0][1/2/0][       4000][1-0]
# 264>          FUNC_CALL[               NONE][  4/ 30/ 35/  0][1/2/0][      64000][0-0]    NSLog
# 264>        FPAREN_OPEN[          FUNC_CALL][  9/ 35/ 36/  0][1/2/0][  100004000][0-0]         (
# 264>             STRING[               NONE][ 10/ 36/ 48/  0][1/3/0][      44010][0-0]          @"Something"
# 264>       FPAREN_CLOSE[          FUNC_CALL][ 22/ 48/ 49/  0][1/2/0][  100004010][0-0]                      )
# 264>          SEMICOLON[               NONE][ 23/ 49/ 50/  0][1/2/0][  100004000][0-0]                       ;
# 264>            NEWLINE[               NONE][ 24/ 50/ 28/  0][1/2/0][       4000][1-0]
# 265>        BRACE_CLOSE[      OC_BLOCK_EXPR][  2/ 28/ 29/  0][0/1/0][  100004000][0-0]  }
# 265>       SQUARE_CLOSE[             OC_MSG][  3/ 29/ 30/  0][0/0/0][  100004000][0-0]   ]
# 265>          SEMICOLON[             OC_MSG][  4/ 30/ 31/  0][0/0/0][  100000000][0-0]    ;
# 265>            NEWLINE[               NONE][  5/ 31/  1/  0][0/0/0][          0][2-0]
# 267>               TYPE[               NONE][  1/  1/  3/  0][0/0/0][     460000][0-0] CK
# 267>          DC_MEMBER[               NONE][  3/  3/  5/  0][0/0/0][  100000000][0-0]   ::
# 267>          FUNC_CALL[               NONE][  5/  5/  8/  0][0/0/0][          0][0-0]     map
# 267>        FPAREN_OPEN[          FUNC_CALL][  8/  8/  9/  0][0/0/0][  100000000][0-0]        (
# 267>            NEWLINE[               NONE][  9/  9/  3/  0][0/1/0][         10][1-0]
# 268>               WORD[               NONE][  3/  3/  9/  0][0/1/0][      40010][0-0]   _items
# 268>              COMMA[               NONE][  9/  9/ 10/  0][0/1/0][  100000010][0-0]         ,
# 268>            NEWLINE[               NONE][ 10/ 10/  7/  0][0/1/0][         10][1-0]
# 269>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][  3/  7/  8/  0][0/1/0][  100040010][0-0]   ^
# 269>               TYPE[      OC_BLOCK_EXPR][  4/  9/ 11/  1][0/1/0][ 2000040010][0-0]    FS
# 269>          DC_MEMBER[      OC_BLOCK_EXPR][  6/ 11/ 13/  0][0/1/0][ 2100000010][0-0]      ::
# 269>               TYPE[      OC_BLOCK_EXPR][  8/ 13/ 23/  0][0/1/0][ 2000000010][0-0]        ActionCell
# 269>          DC_MEMBER[      OC_BLOCK_EXPR][ 18/ 23/ 25/  0][0/1/0][ 2100000010][0-0]                  ::
# 269>               TYPE[      OC_BLOCK_EXPR][ 20/ 25/ 29/  0][0/1/0][ 2000000010][0-0]                    Item
# 269>        FPAREN_OPEN[      OC_BLOCK_EXPR][ 25/ 30/ 31/  1][0/1/0][  100000010][0-0]                         (
# 269>               TYPE[      OC_BLOCK_EXPR][ 26/ 31/ 35/  0][0/2/0][ 4000450010][0-0]                          Item
# 269>               WORD[      OC_BLOCK_EXPR][ 31/ 36/ 40/  1][0/2/0][ 4000800010][0-0]                               item
# 269>       FPAREN_CLOSE[      OC_BLOCK_EXPR][ 35/ 40/ 41/  0][0/1/0][ 4100000010][0-0]                                   )
# 269>         BRACE_OPEN[      OC_BLOCK_EXPR][ 37/ 42/ 43/  2][0/1/0][  100000010][0-0]                                     {
# 269>            NEWLINE[               NONE][ 38/ 44/  6/  0][1/2/0][         10][1-0]
# 270>             RETURN[               NONE][  5/  6/ 12/  0][1/2/0][      70010][0-0]     return
# 270>               WORD[               NONE][ 12/ 13/ 14/  1][1/2/0][      40010][0-0]            x
# 270>          SEMICOLON[               NONE][ 13/ 14/ 15/  0][1/2/0][  100000010][0-0]             ;
# 270>            NEWLINE[               NONE][ 14/ 15/ 11/  0][1/2/0][         10][1-0]
# 271>        BRACE_CLOSE[      OC_BLOCK_EXPR][  3/ 11/ 12/  0][0/1/0][  100000010][0-0]   }
# 271>            NEWLINE[               NONE][  4/ 12/  1/  0][0/1/0][         10][1-0]
# 272>       FPAREN_CLOSE[          FUNC_CALL][  1/  1/  2/  0][0/0/0][  100000010][0-0] )
# 272>          SEMICOLON[               NONE][  2/  2/  3/  0][0/0/0][  100000000][0-0]  ;
# 272>            NEWLINE[               NONE][  3/  3/  1/  0][0/0/0][          0][2-0]
# 274>          FUNC_CALL[               NONE][  1/  1/  9/  0][0/0/0][      60000][0-0] Mutation
# 274>        FPAREN_OPEN[          FUNC_CALL][ 10/ 10/ 11/  1][0/0/0][  100000000][0-0]          (
# 274>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 11/ 11/ 12/  0][0/1/0][  100040000][0-0]           ^
# 274>        FPAREN_OPEN[      OC_BLOCK_EXPR][ 12/ 12/ 13/  0][0/1/0][  100040000][0-0]            (
# 274>               TYPE[      OC_BLOCK_EXPR][ 13/ 14/ 21/  1][0/2/0][ 4000440000][0-0]             NSError
# 274>           PTR_TYPE[      OC_BLOCK_EXPR][ 21/ 22/ 23/  1][0/2/0][ 4100000000][0-0]                     *
# 274>               WORD[      OC_BLOCK_EXPR][ 22/ 23/ 28/  0][0/2/0][ 4000840000][0-0]                      error
# 274>       FPAREN_CLOSE[      OC_BLOCK_EXPR][ 27/ 28/ 29/  0][0/1/0][ 4100000000][0-0]                           )
# 274>         BRACE_OPEN[      OC_BLOCK_EXPR][ 29/ 30/ 31/  1][0/1/0][  100000000][0-0]                             {
# 274>            NEWLINE[               NONE][ 30/ 31/  9/  0][1/2/0][          0][1-0]
# 275>                 IF[               NONE][  3/  9/ 11/  0][1/2/0][      60000][0-0]   if
# 275>        SPAREN_OPEN[                 IF][  6/ 12/ 13/  1][1/2/0][  100000000][0-0]      (
# 275>               WORD[               NONE][  7/ 13/ 21/  0][1/3/0][      40020][0-0]       weakSelf
# 275>       SPAREN_CLOSE[                 IF][ 15/ 21/ 22/  0][1/2/0][  100000000][0-0]               )
# 275>         BRACE_OPEN[                 IF][ 17/ 23/ 24/  1][1/2/0][  100000000][0-0]                 {
# 275>            NEWLINE[               NONE][ 18/ 24/  7/  0][2/3/0][          0][1-0]
# 276>          FUNC_CALL[               NONE][  5/  7/ 12/  0][2/3/0][      60000][0-0]     Error
# 276>        FPAREN_OPEN[          FUNC_CALL][ 10/ 12/ 13/  0][2/3/0][  100000000][0-0]          (
# 276>               WORD[               NONE][ 11/ 13/ 18/  0][2/4/0][      40010][0-0]           error
# 276>       FPAREN_CLOSE[          FUNC_CALL][ 16/ 18/ 19/  0][2/3/0][  100000010][0-0]                )
# 276>          SEMICOLON[               NONE][ 17/ 19/ 20/  0][2/3/0][  100000000][0-0]                 ;
# 276>            NEWLINE[               NONE][ 18/ 20/  4/  0][2/3/0][          0][1-0]
# 277>        BRACE_CLOSE[                 IF][  3/  4/  5/  0][1/2/0][  100000000][0-0]   }
# 277>            NEWLINE[               NONE][  4/  5/  2/  0][1/2/0][          0][1-0]
# 278>        BRACE_CLOSE[      OC_BLOCK_EXPR][  1/  2/  3/  0][0/1/0][  100000000][0-0] }
# 278>       FPAREN_CLOSE[          FUNC_CALL][  2/  3/  4/  0][0/0/0][  100000000][0-0]  )
# 278>          SEMICOLON[               NONE][  3/  4/  5/  0][0/0/0][  100000000][0-0]   ;
# 278>            NEWLINE[               NONE][  4/  5/  1/  0][0/0/0][          0][2-0]
# 280>             RETURN[               NONE][  1/  1/  7/  0][0/0/0][      60000][0-0] return
# 280>            NEWLINE[               NONE][  7/  7/  1/  0][0/0/0][          0][1-0]
# 281>               WORD[               NONE][  1/  1/ 11/  0][0/0/0][      40000][0-0] _isEnabled
# 281>            NEWLINE[               NONE][ 11/ 11/  1/  0][0/0/0][          0][1-0]
# 282>               BOOL[               NONE][  1/  1/  3/  0][0/0/0][  100000000][0-0] &&
# 282>        SQUARE_OPEN[             OC_MSG][  4/  4/  5/  1][0/0/0][  100044000][0-0]    [
# 282>        SQUARE_OPEN[             OC_MSG][  5/  5/  6/  0][0/1/0][  100064000][0-0]     [
# 282>       OC_MSG_CLASS[               NONE][  6/  6/ 32/  0][0/2/0][      74000][0-0]      MobileConfigStartupConfigs
# 282>        OC_MSG_FUNC[               NONE][ 33/ 33/ 44/  1][0/2/0][       4000][0-0]                                 getInstance
# 282>       SQUARE_CLOSE[             OC_MSG][ 44/ 44/ 45/  0][0/1/0][  100004000][0-0]                                            ]
# 282>        OC_MSG_FUNC[               NONE][ 46/ 46/ 53/  1][0/1/0][     384000][0-0]                                              getBool
# 282>           OC_COLON[               NONE][ 53/ 53/ 54/  0][0/1/0][  100304000][0-0]                                                     :
# 282>             STRING[               NONE][ 54/ 54/ 60/  0][0/1/0][      64000][0-0]                                                      @"YES"
# 282>            NEWLINE[               NONE][ 60/ 60/ 44/  0][0/1/0][       4000][1-0]
# 283>        OC_MSG_NAME[               NONE][ 42/ 44/ 55/  0][0/1/0][     284000][0-0]                                          withDefault
# 283>           OC_COLON[        OC_MSG_NAME][ 53/ 55/ 56/  0][0/1/0][  100204000][0-0]                                                     :
# 283>               WORD[               NONE][ 54/ 56/ 58/  0][0/1/0][      64000][0-0]                                                      NO
# 283>       SQUARE_CLOSE[             OC_MSG][ 56/ 58/ 59/  0][0/0/0][  100004000][0-0]                                                        ]
# 283>          SEMICOLON[             OC_MSG][ 57/ 59/ 60/  0][0/0/0][  100000000][0-0]                                                         ;
# 283>            NEWLINE[               NONE][ 58/ 60/  1/  0][0/0/0][          0][2-0]
# 285>        SQUARE_OPEN[             OC_MSG][  1/  1/  2/  0][0/0/0][  100064000][0-0] [
# 285>       OC_MSG_CLASS[               NONE][  2/  2/  6/  0][0/1/0][      74000][0-0]  self
# 285>        OC_MSG_FUNC[               NONE][  7/  7/ 24/  1][0/1/0][     384000][0-0]       dismissWithReason
# 285>           OC_COLON[               NONE][ 24/ 24/ 25/  0][0/1/0][  100304000][0-0]                        :
# 285>               TYPE[               NONE][ 25/ 25/ 38/  0][0/1/0][      64000][0-0]                         DismissReason
# 285>          DC_MEMBER[               NONE][ 38/ 38/ 40/  0][0/1/0][  100004000][0-0]                                      ::
# 285>               TYPE[               NONE][ 40/ 40/ 44/  0][0/1/0][       4000][0-0]                                        Auto
# 285>            NEWLINE[               NONE][ 44/ 44/ 16/  0][0/1/0][       4000][1-0]
# 286>        OC_MSG_NAME[               NONE][ 16/ 16/ 24/  0][0/1/0][     284000][0-0]                animated
# 286>           OC_COLON[        OC_MSG_NAME][ 24/ 24/ 25/  0][0/1/0][  100204000][0-0]                        :
# 286>               WORD[               NONE][ 25/ 25/ 29/  0][0/1/0][      64000][0-0]                         TRUE
# 286>       SQUARE_CLOSE[             OC_MSG][ 29/ 29/ 30/  0][0/0/0][  100004000][0-0]                             ]
# 286>          SEMICOLON[             OC_MSG][ 30/ 30/ 31/  0][0/0/0][  100000000][0-0]                              ;
# 286>            NEWLINE[               NONE][ 31/ 31/  1/  0][0/0/0][          0][2-0]
# 288>        SQUARE_OPEN[             OC_MSG][  1/  1/  2/  0][0/0/0][  100064000][0-0] [
# 288>       OC_MSG_CLASS[               NONE][  2/  2/  6/  0][0/1/0][      64000][0-0]  self
# 288>            NEWLINE[               NONE][  6/  6/  2/  0][0/1/0][       4000][1-0]
# 289>        OC_MSG_FUNC[               NONE][  2/  2/ 19/  0][0/1/0][       4000][0-0]  dismissWithReason
# 289>           OC_COLON[               NONE][ 19/ 19/ 20/  0][0/1/0][  100004000][0-0]                   :
# 289>               TYPE[               NONE][ 20/ 20/ 33/  0][0/1/0][      64000][0-0]                    DismissReason
# 289>          DC_MEMBER[               NONE][ 33/ 33/ 35/  0][0/1/0][  100004000][0-0]                                 ::
# 289>               TYPE[               NONE][ 35/ 35/ 39/  0][0/1/0][       4000][0-0]                                   Auto
# 289>            NEWLINE[               NONE][ 39/ 39/  2/  0][0/1/0][       4000][1-0]
# 290>        OC_MSG_NAME[               NONE][  2/  2/ 13/  0][0/1/0][       4000][0-0]  withContext
# 290>           OC_COLON[        OC_MSG_NAME][ 13/ 13/ 14/  0][0/1/0][  100004000][0-0]             :
# 290>             NUMBER[               NONE][ 14/ 14/ 15/  0][0/1/0][      64000][0-0]              1
# 290>            NEWLINE[               NONE][ 15/ 15/  2/  0][0/1/0][       4000][1-0]
# 291>        OC_MSG_NAME[               NONE][  2/  2/ 10/  0][0/1/0][       4000][0-0]  animated
# 291>           OC_COLON[        OC_MSG_NAME][ 10/ 10/ 11/  0][0/1/0][  100004000][0-0]          :
# 291>               WORD[               NONE][ 11/ 11/ 15/  0][0/1/0][      64000][0-0]           TRUE
# 291>       SQUARE_CLOSE[             OC_MSG][ 15/ 15/ 16/  0][0/0/0][  100004000][0-0]               ]
# 291>          SEMICOLON[             OC_MSG][ 16/ 16/ 17/  0][0/0/0][  100000000][0-0]                ;
# 291>            NEWLINE[               NONE][ 17/ 17/  1/  0][0/0/0][          0][2-0]
# 293>        SQUARE_OPEN[             OC_MSG][  1/  1/  2/  0][0/0/0][  100064000][0-0] [
# 293>       OC_MSG_CLASS[               NONE][  2/  2/ 14/  0][0/1/0][      64000][0-0]  _hostingView
# 293>            NEWLINE[               NONE][ 14/ 14/  2/  0][0/1/0][       4000][1-0]
# 294>        OC_MSG_FUNC[               NONE][  2/  2/ 13/  0][0/1/0][       4000][0-0]  updateModel
# 294>           OC_COLON[               NONE][ 13/ 13/ 14/  0][0/1/0][  100004000][0-0]             :
# 294>        SQUARE_OPEN[             OC_MSG][ 14/ 14/ 15/  0][0/1/0][  100064000][0-0]              [
# 294>       OC_MSG_CLASS[               NONE][ 15/ 15/ 50/  0][0/2/0][      64000][0-0]               FSTooltipViewControllerPropsWrapper
# 294>            NEWLINE[               NONE][ 50/ 50/ 15/  0][0/2/0][       4000][1-0]
# 295>        OC_MSG_FUNC[               NONE][ 15/ 15/ 27/  0][0/2/0][       4000][0-0]               newWithProps
# 295>           OC_COLON[               NONE][ 27/ 27/ 28/  0][0/2/0][  100004000][0-0]                           :
# 295>               TYPE[               NONE][ 28/ 28/ 33/  0][0/2/0][      64000][0-0]                            props
# 295>            NEWLINE[               NONE][ 33/ 33/ 15/  0][0/2/0][       4000][1-0]
# 296>        OC_MSG_NAME[               NONE][ 15/ 15/ 20/  0][0/2/0][       4000][0-0]               theme
# 296>           OC_COLON[        OC_MSG_NAME][ 20/ 20/ 21/  0][0/2/0][  100004000][0-0]                    :
# 296>               WORD[               NONE][ 21/ 21/ 29/  0][0/2/0][      64000][0-0]                     _tooltip
# 296>             MEMBER[               NONE][ 29/ 29/ 30/  0][0/2/0][  100004000][0-0]                             .
# 296>               WORD[               NONE][ 30/ 30/ 35/  0][0/2/0][       4000][0-0]                              props
# 296>             MEMBER[               NONE][ 35/ 35/ 36/  0][0/2/0][  100004000][0-0]                                   .
# 296>               WORD[               NONE][ 36/ 36/ 41/  0][0/2/0][       4000][0-0]                                    theme
# 296>       SQUARE_CLOSE[             OC_MSG][ 41/ 41/ 42/  0][0/1/0][  100004000][0-0]                                         ]
# 296>       SQUARE_CLOSE[             OC_MSG][ 42/ 42/ 43/  0][0/0/0][  100004000][0-0]                                          ]
# 296>          SEMICOLON[             OC_MSG][ 43/ 43/ 44/  0][0/0/0][  100000000][0-0]                                           ;
# 296>            NEWLINE[               NONE][ 44/ 44/  1/  0][0/0/0][          0][2-0]
# 298>        SQUARE_OPEN[             OC_MSG][  1/  1/  2/  0][0/0/0][  100064000][0-0] [
# 298>        SQUARE_OPEN[             OC_MSG][  2/  2/  3/  0][0/1/0][  100064000][0-0]  [
# 298>        SQUARE_OPEN[             OC_MSG][  3/  3/  4/  0][0/2/0][  100064000][0-0]   [
# 298>       OC_MSG_CLASS[               NONE][  4/  4/ 20/  0][0/3/0][      74000][0-0]    ComponentBuilder
# 298>        OC_MSG_FUNC[               NONE][ 21/ 21/ 26/  1][0/3/0][       4000][0-0]                     alloc
# 298>       SQUARE_CLOSE[             OC_MSG][ 26/ 26/ 27/  0][0/2/0][  100004000][0-0]                          ]
# 298>            NEWLINE[               NONE][ 27/ 27/  3/  0][0/2/0][       4000][1-0]
# 299>        OC_MSG_FUNC[               NONE][  3/  3/ 24/  0][0/2/0][       4000][0-0]   initWithHeadlineTitle
# 299>           OC_COLON[               NONE][ 24/ 24/ 25/  0][0/2/0][  100004000][0-0]                        :
# 299>        SQUARE_OPEN[             OC_MSG][ 25/ 25/ 26/  0][0/2/0][  100064000][0-0]                         [
# 299>       OC_MSG_CLASS[               NONE][ 26/ 26/ 34/  0][0/3/0][      64000][0-0]                          NSString
# 299>            NEWLINE[               NONE][ 34/ 34/ 26/  0][0/3/0][       4000][1-0]
# 300>        OC_MSG_FUNC[               NONE][ 26/ 26/ 42/  0][0/3/0][       4000][0-0]                          stringWithFormat
# 300>           OC_COLON[               NONE][ 42/ 42/ 43/  0][0/3/0][  100004000][0-0]                                          :
# 300>             STRING[               NONE][ 43/ 43/ 70/  0][0/3/0][      64000][0-0]                                           @"ContextRow button tapped"
# 300>            NEWLINE[               NONE][ 70/ 70/ 26/  0][0/3/0][       4000][1-0]
# 301>        OC_MSG_NAME[               NONE][ 26/ 26/ 35/  0][0/3/0][       4000][0-0]                          something
# 301>           OC_COLON[        OC_MSG_NAME][ 35/ 35/ 36/  0][0/3/0][  100004000][0-0]                                   :
# 301>               WORD[               NONE][ 36/ 36/ 41/  0][0/3/0][      64000][0-0]                                    great
# 301>       SQUARE_CLOSE[             OC_MSG][ 41/ 41/ 42/  0][0/2/0][  100004000][0-0]                                         ]
# 301>            NEWLINE[               NONE][ 42/ 42/  3/  0][0/2/0][       4000][1-0]
# 302>        OC_MSG_NAME[               NONE][  3/  3/ 16/  0][0/2/0][       4000][0-0]   withBodyTitle
# 302>           OC_COLON[        OC_MSG_NAME][ 16/ 16/ 17/  0][0/2/0][  100004000][0-0]                :
# 302>               WORD[               NONE][ 17/ 17/ 20/  0][0/2/0][      64000][0-0]                 nil
# 302>       SQUARE_CLOSE[             OC_MSG][ 20/ 20/ 21/  0][0/1/0][  100004000][0-0]                    ]
# 302>        OC_MSG_FUNC[               NONE][ 22/ 22/ 27/  1][0/1/0][       4000][0-0]                      build
# 302>       SQUARE_CLOSE[             OC_MSG][ 27/ 27/ 28/  0][0/0/0][  100004000][0-0]                           ]
# 302>          SEMICOLON[             OC_MSG][ 28/ 28/ 29/  0][0/0/0][  100000000][0-0]                            ;
# 302>            NEWLINE[               NONE][ 29/ 29/  1/  0][0/0/0][          0][2-0]
# 304>          NAMESPACE[               NONE][  1/  1/ 10/  0][0/0/0][   10070000][0-0] namespace
# 304>               WORD[          NAMESPACE][ 11/ 11/ 24/  1][0/0/0][   10000000][0-0]           SomeNamespace
# 304>         BRACE_OPEN[          NAMESPACE][ 25/ 25/ 26/  1][0/0/0][  100000000][0-0]                         {
# 304>            NEWLINE[               NONE][ 26/ 26/  3/  0][1/1/0][       1000][1-0]
# 305>          NAMESPACE[               NONE][  3/  3/ 12/  0][1/1/0][   10071000][0-0]   namespace
# 305>               WORD[          NAMESPACE][ 13/ 13/ 31/  1][1/1/0][   10001000][0-0]             SomeOtherNamespace
# 305>         BRACE_OPEN[          NAMESPACE][ 32/ 32/ 33/  1][1/1/0][  100001000][0-0]                                {
# 305>            NEWLINE[               NONE][ 33/ 33/  5/  0][2/2/0][       1000][1-0]
# 306>               TYPE[           FUNC_DEF][  5/  5/ 14/  0][2/2/0][      61000][0-0]     Component
# 306>           PTR_TYPE[           FUNC_DEF][ 15/ 15/ 16/  1][2/2/0][  100001000][0-0]               *
# 306>           FUNC_DEF[               NONE][ 16/ 16/ 31/  0][2/2/0][      41000][0-0]                createComponent
# 306>        FPAREN_OPEN[           FUNC_DEF][ 31/ 31/ 32/  0][2/2/0][  100001000][0-0]                               (
# 306>       FPAREN_CLOSE[           FUNC_DEF][ 32/ 32/ 33/  0][2/2/0][  100001008][0-0]                                )
# 306>            NEWLINE[               NONE][ 33/ 33/  5/  0][2/2/0][       1000][1-0]
# 307>         BRACE_OPEN[           FUNC_DEF][  5/  5/  6/  0][2/2/0][  100001000][0-0]     {
# 307>            NEWLINE[               NONE][  6/  6/  7/  0][3/3/0][       1000][1-0]
# 308>             RETURN[               NONE][  7/  7/ 13/  0][3/3/0][      61000][0-0]       return
# 308>            NEWLINE[               NONE][ 13/ 13/  7/  0][3/3/0][       1000][1-0]
# 309>          FUNC_CALL[               NONE][  7/  7/ 21/  0][3/3/0][      41000][0-0]       BuildComponent
# 309>        FPAREN_OPEN[          FUNC_CALL][ 21/ 21/ 22/  0][3/3/0][  100001000][0-0]                     (
# 309>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 22/ 22/ 23/  0][3/4/0][  100041000][0-0]                      ^
# 309>        FPAREN_OPEN[      OC_BLOCK_EXPR][ 23/ 23/ 24/  0][3/4/0][  100041000][0-0]                       (
# 309>               TYPE[      OC_BLOCK_EXPR][ 24/ 24/ 35/  0][3/5/0][ 4000441000][0-0]                        CKComponent
# 309>           PTR_TYPE[      OC_BLOCK_EXPR][ 36/ 36/ 37/  1][3/5/0][ 4100001000][0-0]                                    *
# 309>       FPAREN_CLOSE[      OC_BLOCK_EXPR][ 37/ 37/ 38/  0][3/4/0][ 4100001000][0-0]                                     )
# 309>         BRACE_OPEN[      OC_BLOCK_EXPR][ 39/ 39/ 40/  1][3/4/0][  100001000][0-0]                                       {
# 309>            NEWLINE[               NONE][ 40/ 40/ 41/  0][4/5/0][       1000][1-0]
# 310>        SQUARE_OPEN[             OC_MSG][  9/ 41/ 42/  0][4/5/0][  100065000][0-0]         [
# 310>        SQUARE_OPEN[             OC_MSG][ 10/ 42/ 43/  0][4/6/0][  100065000][0-0]          [
# 310>        SQUARE_OPEN[             OC_MSG][ 11/ 43/ 44/  0][4/7/0][  100065000][0-0]           [
# 310>       OC_MSG_CLASS[               NONE][ 12/ 44/ 60/  0][4/8/0][      75000][0-0]            ComponentBuilder
# 310>        OC_MSG_FUNC[               NONE][ 29/ 61/ 66/  1][4/8/0][       5000][0-0]                             alloc
# 310>       SQUARE_CLOSE[             OC_MSG][ 34/ 66/ 67/  0][4/7/0][  100005000][0-0]                                  ]
# 310>            NEWLINE[               NONE][ 35/ 67/ 43/  0][4/7/0][       5000][1-0]
# 311>        OC_MSG_FUNC[               NONE][ 11/ 43/ 64/  0][4/7/0][       5000][0-0]           initWithHeadlineTitle
# 311>           OC_COLON[               NONE][ 32/ 64/ 65/  0][4/7/0][  100005000][0-0]                                :
# 311>        SQUARE_OPEN[             OC_MSG][ 33/ 65/ 66/  0][4/7/0][  100065000][0-0]                                 [
# 311>       OC_MSG_CLASS[               NONE][ 34/ 66/ 74/  0][4/8/0][      75000][0-0]                                  NSString
# 311>        OC_MSG_FUNC[               NONE][ 43/ 75/ 91/  1][4/8/0][     185000][0-0]                                           stringWithFormat
# 311>           OC_COLON[               NONE][ 59/ 91/ 92/  0][4/8/0][  100105000][0-0]                                                           :
# 311>             STRING[               NONE][ 60/ 92/119/  0][4/8/0][      65000][0-0]                                                            @"ContextRow button tapped"
# 311>       SQUARE_CLOSE[             OC_MSG][ 87/119/120/  0][4/7/0][  100005000][0-0]                                                                                       ]
# 311>            NEWLINE[               NONE][ 88/120/ 43/  0][4/7/0][       5000][1-0]
# 312>        OC_MSG_NAME[               NONE][ 11/ 43/ 58/  0][4/7/0][       5000][0-0]           withButtonTitle
# 312>           OC_COLON[        OC_MSG_NAME][ 26/ 58/ 59/  0][4/7/0][  100005000][0-0]                          :
# 312>          FUNC_CALL[               NONE][ 27/ 59/ 72/  0][4/7/0][      65000][0-0]                           OKButtonTitle
# 312>        FPAREN_OPEN[          FUNC_CALL][ 40/ 72/ 73/  0][4/7/0][  100005000][0-0]                                        (
# 312>       FPAREN_CLOSE[          FUNC_CALL][ 41/ 73/ 74/  0][4/7/0][  100005010][0-0]                                         )
# 312>            NEWLINE[               NONE][ 42/ 74/ 43/  0][4/7/0][       5000][1-0]
# 313>        OC_MSG_NAME[               NONE][ 11/ 43/ 56/  0][4/7/0][       5000][0-0]           withBodyTitle
# 313>           OC_COLON[        OC_MSG_NAME][ 24/ 56/ 57/  0][4/7/0][  100005000][0-0]                        :
# 313>               WORD[               NONE][ 25/ 57/ 60/  0][4/7/0][      65000][0-0]                         nil
# 313>       SQUARE_CLOSE[             OC_MSG][ 28/ 60/ 61/  0][4/6/0][  100005000][0-0]                            ]
# 313>        OC_MSG_FUNC[               NONE][ 30/ 62/ 67/  1][4/6/0][       5000][0-0]                              build
# 313>       SQUARE_CLOSE[             OC_MSG][ 35/ 67/ 68/  0][4/5/0][  100005000][0-0]                                   ]
# 313>          SEMICOLON[             OC_MSG][ 36/ 68/ 69/  0][4/5/0][  100001000][0-0]                                    ;
# 313>            NEWLINE[               NONE][ 37/ 69/ 39/  0][4/5/0][       1000][1-0]
# 314>        BRACE_CLOSE[      OC_BLOCK_EXPR][  7/ 39/ 40/  0][3/4/0][  100001000][0-0]       }
# 314>       FPAREN_CLOSE[          FUNC_CALL][  8/ 40/ 41/  0][3/3/0][  100000000][0-0]        )
# 314>          SEMICOLON[               NONE][  9/ 41/ 42/  0][3/3/0][  100000000][0-0]         ;
# 314>            NEWLINE[               NONE][ 10/ 42/  5/  0][3/3/0][          0][1-0]
# 315>        BRACE_CLOSE[           FUNC_DEF][  5/  5/  6/  0][2/2/0][  100000000][0-0]     }
# 315>            NEWLINE[               NONE][  6/  6/  3/  0][2/2/0][          0][1-0]
# 316>        BRACE_CLOSE[          NAMESPACE][  3/  3/  4/  0][1/1/0][  100000000][0-0]   }
# 316>            NEWLINE[               NONE][  4/  4/  1/  0][1/1/0][          0][1-0]
# 317>        BRACE_CLOSE[          NAMESPACE][  1/  1/  2/  0][0/0/0][  100000000][0-0] }
# 317>            NEWLINE[               NONE][  2/  2/  1/  0][0/0/0][          0][1-0]
# -=====-
