# Uncrustify_d-backup_20191216-dirty
input_tab_size                  = 2
output_tab_size                 = 2
disable_processing_cmt          = "UNCRUSTIFY_FORMAT_OFF"
enable_processing_cmt           = "UNCRUSTIFY_FORMAT_ON"
sp_do_brace_open                = force
sp_brace_close_while            = force
sp_while_paren_open             = force
sp_assign                       = force
sp_cpp_lambda_assign            = remove
sp_cpp_lambda_square_paren      = remove
sp_cpp_lambda_square_brace      = force
sp_cpp_lambda_paren_brace       = force
sp_cpp_lambda_fparen            = remove
sp_assign_default               = force
sp_before_assign                = force
sp_after_assign                 = force
sp_enum_paren                   = remove
sp_enum_assign                  = force
sp_enum_before_assign           = force
sp_enum_after_assign            = force
sp_pp_concat                    = force
sp_bool                         = force
sp_compare                      = force
sp_inside_paren                 = remove
sp_paren_brace                  = force
sp_before_ptr_star              = force
sp_after_ptr_star               = remove
sp_after_ptr_star_func          = remove
sp_ptr_star_paren               = remove
sp_before_ptr_star_func         = force
sp_before_byref                 = force
sp_before_unnamed_byref         = force
sp_after_byref                  = remove
sp_after_byref_func             = remove
sp_before_byref_func            = force
sp_before_template_paren        = remove
sp_template_angle               = force
sp_before_angle                 = remove
sp_inside_angle                 = remove
sp_inside_angle_empty           = remove
sp_angle_paren                  = remove
sp_angle_paren_empty            = remove
sp_angle_word                   = force
sp_angle_shift                  = remove
sp_permit_cpp11_shift           = true
sp_before_sparen                = force
sp_inside_sparen                = remove
sp_inside_sparen_open           = remove
sp_inside_sparen_close          = remove
sp_sparen_brace                 = force
sp_after_semi                   = ignore
sp_inside_square                = remove
sp_after_comma                  = force
sp_paren_comma                  = remove
sp_inside_paren_cast            = remove
sp_cpp_cast_paren               = remove
sp_sizeof_paren                 = remove
sp_inside_braces_enum           = force
sp_inside_braces_struct         = remove
sp_inside_braces_empty          = remove
sp_type_brace_init_lst          = remove
sp_func_proto_paren             = remove
sp_func_def_paren               = remove
sp_inside_fparens               = remove
sp_inside_fparen                = remove
sp_inside_tparen                = remove
sp_after_tparen_close           = remove
sp_fparen_brace                 = force
sp_func_call_paren_empty        = remove
sp_return_paren                 = force
sp_return_brace                 = force
sp_catch_paren                  = force
sp_oc_classname_paren           = force
sp_scope_paren                  = force
sp_else_brace                   = force
sp_brace_else                   = force
sp_catch_brace                  = force
sp_finally_brace                = force
sp_try_brace                    = force
sp_getset_brace                 = force
sp_before_dc                    = remove
sp_after_dc                     = remove
sp_after_oc_scope               = force
sp_after_oc_colon               = remove
sp_before_oc_colon              = remove
sp_after_oc_dict_colon          = force
sp_before_oc_dict_colon         = force
sp_after_send_oc_colon          = remove
sp_before_send_oc_colon         = remove
sp_after_oc_type                = remove
sp_after_oc_return_type         = remove
sp_after_oc_at_sel              = remove
sp_after_oc_at_sel_parens       = force
sp_inside_oc_at_sel_parens      = remove
sp_after_oc_block_caret         = remove
sp_after_oc_property            = force
sp_after_oc_synchronized        = force
sp_cond_colon                   = force
sp_cond_colon_before            = force
sp_cond_colon_after             = force
sp_cond_question                = force
sp_cond_question_before         = force
sp_cond_question_after          = force
sp_cond_ternary_short           = remove
sp_case_label                   = force
sp_cmt_cpp_start                = force
sp_cmt_cpp_doxygen              = true
sp_before_tr_emb_cmt            = force
indent_columns                  = 2
indent_with_tabs                = 0
indent_paren_open_brace         = true
indent_namespace                = true
indent_class                    = true
indent_func_call_param          = true
indent_func_class_param         = true
indent_func_ctor_var_param      = true
indent_relative_single_line_comments = true
indent_switch_case              = 2
indent_col1_comment             = true
indent_label                    = -2
indent_access_spec              = -2
indent_paren_close              = 2
indent_align_assign             = false
indent_align_paren              = false
indent_oc_block                 = true
indent_oc_msg_prioritize_first_colon = false
indent_oc_block_msg_xcode_style = true
indent_compound_literal_return  = false
indent_off_after_return_new     = true
indent_single_after_return      = true
nl_class_leave_one_liners       = true
nl_enum_leave_one_liners        = true
nl_func_leave_one_liners        = true
nl_cpp_lambda_leave_one_liners  = true
nl_oc_msg_leave_one_liner       = true
nl_oc_mdef_brace                = force
nl_oc_block_brace               = remove
nl_oc_before_implementation     = force
nl_oc_interface_brace           = force
nl_oc_implementation_brace      = force
nl_start_of_file                = remove
nl_end_of_file                  = force
nl_end_of_file_min              = 1
nl_enum_brace                   = remove
nl_struct_brace                 = remove
nl_union_brace                  = remove
nl_if_brace                     = remove
nl_brace_else                   = remove
nl_elseif_brace                 = remove
nl_else_brace                   = remove
nl_else_if                      = remove
nl_brace_finally                = remove
nl_finally_brace                = remove
nl_try_brace                    = remove
nl_for_brace                    = remove
nl_catch_brace                  = remove
nl_brace_catch                  = remove
nl_while_brace                  = remove
nl_do_brace                     = remove
nl_brace_while                  = remove
nl_switch_brace                 = remove
nl_multi_line_define            = true
nl_case_colon_brace             = remove
nl_namespace_brace              = remove
nl_class_brace                  = remove
nl_constr_init_args             = force
nl_func_paren                   = remove
nl_func_def_paren               = remove
nl_func_def_start               = remove
nl_func_decl_start_single       = remove
nl_func_def_start_single        = remove
nl_func_decl_end_single         = remove
nl_func_decl_empty              = remove
nl_fdef_brace                   = force
nl_cpp_ldef_brace               = remove
nl_constr_colon                 = force
nl_create_if_one_liner          = true
nl_max                          = 2
nl_after_func_body              = 2
nl_after_func_body_one_liner    = 2
nl_after_multiline_comment      = true
nl_before_class                 = 1
nl_after_class                  = 1
nl_before_namespace             = 1
nl_after_access_spec            = 1
eat_blanks_after_open_brace     = true
eat_blanks_before_close_brace   = true
pos_arith                       = lead
pos_bool                        = lead
pos_conditional                 = lead
pos_enum_comma                  = trail_break
pos_constr_comma                = trail_break
pos_constr_colon                = trail_break
align_oc_msg_colon_span         = 1
align_oc_decl_colon             = true
align_oc_msg_colon_xcode_like   = true
cmt_convert_tab_to_spaces       = true
cmt_indent_multi                = false
cmt_c_nl_start                  = true
cmt_cpp_nl_start                = true
cmt_cpp_nl_end                  = true
cmt_sp_after_star_cont          = 1
mod_full_brace_for              = force
mod_full_brace_if               = force
mod_full_brace_nl_block_rem_mlcond = true
mod_sort_case_sensitive         = true
mod_sort_import                 = true
mod_sort_include                = true
mod_remove_empty_return         = true
mod_enum_last_comma             = force
mod_sort_oc_properties          = true
mod_sort_oc_property_class_weight = 7
mod_sort_oc_property_thread_safe_weight = 5
mod_sort_oc_property_readwrite_weight = 4
mod_sort_oc_property_reference_weight = 1
mod_sort_oc_property_getter_weight = 3
mod_sort_oc_property_setter_weight = 2
mod_sort_oc_property_nullability_weight = 6
pp_indent                       = force
pp_indent_at_level              = true
pp_indent_if                    = -2
# option(s) with 'not default' value: 221
#
# -=====-
# Line                Tag              Parent          Columns Br/Lvl/pp     Flag   Nl  Text
#   1>               WORD[               NONE][  1/  1/  5/  0][0/0/0][      60000][0-0] flag
#   1>            NEWLINE[               NONE][  5/  5/  8/  0][0/0/0][          0][1-0]
#   2>           QUESTION[               NONE][  1/  8/  9/  0][0/0/0][  100000000][0-0] ?
#   2>               WORD[               NONE][  3/ 10/ 17/  1][0/0/0][      40000][0-0]   isChild
#   2>            NEWLINE[               NONE][ 10/ 17/  5/  0][0/0/0][          0][1-0]
#   3>           QUESTION[               NONE][  3/  5/  6/  0][0/0/0][  100000000][0-0]   ?
#   3>               WORD[               NONE][  5/  7/ 15/  1][0/0/0][      40000][0-0]     TypeBack
#   3>            NEWLINE[               NONE][ 13/ 15/  1/  0][0/0/0][          0][1-0]
#   4>         COND_COLON[               NONE][  3/  1/  2/  0][0/0/0][  100000000][0-0]   :
#   4>               WORD[               NONE][  5/  3/ 13/  1][0/0/0][      60000][0-0]     TypeCancel
#   4>            NEWLINE[               NONE][ 15/ 13/  8/  0][0/0/0][          0][1-0]
#   5>         COND_COLON[               NONE][  1/  8/  9/  0][0/0/0][  100000000][0-0] :
#   5>               WORD[               NONE][  3/ 10/ 13/  1][0/0/0][      60000][0-0]   nil
#   5>          SEMICOLON[               NONE][  6/ 13/ 14/  0][0/0/0][  100000000][0-0]      ;
#   5>            NEWLINE[               NONE][  7/ 14/  1/  0][0/0/0][          0][2-0]
#   7>               WORD[               NONE][  1/  1/  5/  0][0/0/0][      60000][0-0] flag
#   7>            NEWLINE[               NONE][  5/  5/  8/  0][0/0/0][          0][1-0]
#   8>           QUESTION[               NONE][  1/  8/  9/  0][0/0/0][  100000000][0-0] ?
#   8>        SQUARE_OPEN[             OC_MSG][  3/ 10/ 11/  1][0/0/0][  100044000][0-0]   [
#   8>       OC_MSG_CLASS[               NONE][  4/ 11/ 20/  0][0/1/0][      64000][0-0]    Component
#   8>            NEWLINE[               NONE][ 13/ 20/ 11/  0][0/1/0][       4000][1-0]
#   9>        OC_MSG_FUNC[               NONE][  4/ 11/ 20/  0][0/1/0][       4000][0-0]    component
#   9>           OC_COLON[               NONE][ 13/ 20/ 21/  0][0/1/0][  100004000][0-0]             :
#   9>         PAREN_OPEN[               NONE][ 14/ 21/ 22/  0][0/1/0][  100064000][0-0]              (
#   9>               WORD[               NONE][ 15/ 22/ 40/  0][0/2/0][      44000][0-0]               isChildActionSheet
#   9>           QUESTION[               NONE][ 34/ 41/ 42/  1][0/2/0][  100004000][0-0]                                  ?
#   9>               WORD[               NONE][ 36/ 43/ 51/  1][0/2/0][      44000][0-0]                                    TypeBack
#   9>         COND_COLON[               NONE][ 45/ 52/ 53/  1][0/2/0][  100004000][0-0]                                             :
#   9>               WORD[               NONE][ 47/ 54/ 64/  1][0/2/0][      64000][0-0]                                               TypeCancel
#   9>        PAREN_CLOSE[               NONE][ 57/ 64/ 65/  0][0/1/0][  100004000][0-0]                                                         )
#   9>       SQUARE_CLOSE[             OC_MSG][ 58/ 65/ 66/  0][0/0/0][  100004000][0-0]                                                          ]
#   9>            NEWLINE[               NONE][ 59/ 66/  8/  0][0/0/0][          0][1-0]
#  10>         COND_COLON[               NONE][  1/  8/  9/  0][0/0/0][  100000000][0-0] :
#  10>               WORD[               NONE][  3/ 10/ 13/  1][0/0/0][      60000][0-0]   nil
#  10>          SEMICOLON[               NONE][  6/ 13/ 14/  0][0/0/0][  100000000][0-0]      ;
#  10>            NEWLINE[               NONE][  7/ 14/  1/  0][0/0/0][          0][2-0]
#  12>        SQUARE_OPEN[             OC_MSG][  1/  1/  2/  0][0/0/0][  100064000][0-0] [
#  12>        SQUARE_OPEN[             OC_MSG][  2/  2/  3/  0][0/1/0][  100064000][0-0]  [
#  12>       OC_MSG_CLASS[               NONE][  3/  3/ 21/  0][0/2/0][      74000][0-0]   FIGBottomSheetItem
#  12>        OC_MSG_FUNC[               NONE][ 22/ 22/ 27/  1][0/2/0][       4000][0-0]                      alloc
#  12>       SQUARE_CLOSE[             OC_MSG][ 27/ 27/ 28/  0][0/1/0][  100004000][0-0]                           ]
#  12>            NEWLINE[               NONE][ 28/ 28/  2/  0][0/1/0][       4000][1-0]
#  13>        OC_MSG_FUNC[               NONE][  2/  2/ 10/  0][0/1/0][       4000][0-0]  iconName
#  13>           OC_COLON[               NONE][ 10/ 10/ 11/  0][0/1/0][  100004000][0-0]          :
#  13>               WORD[               NONE][ 11/ 11/ 19/  0][0/1/0][      64000][0-0]           selected
#  13>            NEWLINE[               NONE][ 19/ 19/  2/  0][0/1/0][       4000][1-0]
#  14>           QUESTION[               NONE][  2/  2/  3/  0][0/1/0][  100004000][0-0]  ?
#  14>               WORD[               NONE][  4/  4/  5/  1][0/1/0][      44000][0-0]    g
#  14>             MEMBER[               NONE][  5/  5/  6/  0][0/1/0][  100004000][0-0]     .
#  14>               WORD[               NONE][  6/  6/  8/  0][0/1/0][       4000][0-0]      re
#  14>            NEWLINE[               NONE][  8/  8/ 11/  0][0/1/0][       4000][1-0]
#  15>             MEMBER[               NONE][  4/ 11/ 12/  0][0/1/0][  100004000][0-0]    .
#  15>               WORD[               NONE][  5/ 12/ 14/  0][0/1/0][       4000][0-0]     at
#  15>            NEWLINE[               NONE][  7/ 14/ 11/  0][0/1/0][       4000][1-0]
#  16>         COND_COLON[               NONE][  2/ 11/ 12/  0][0/1/0][  100004000][0-0]  :
#  16>               WORD[               NONE][  4/ 13/ 14/  1][0/1/0][      64000][0-0]    g
#  16>            NEWLINE[               NONE][  5/ 14/ 11/  0][0/1/0][       4000][1-0]
#  17>             MEMBER[               NONE][  4/ 11/ 12/  0][0/1/0][  100004000][0-0]    .
#  17>               WORD[               NONE][  5/ 12/ 14/  0][0/1/0][       4000][0-0]     re
#  17>            NEWLINE[               NONE][  7/ 14/ 11/  0][0/1/0][       4000][1-0]
#  18>             MEMBER[               NONE][  4/ 11/ 12/  0][0/1/0][  100004000][0-0]    .
#  18>               TYPE[               NONE][  5/ 12/ 14/  0][0/1/0][       4000][0-0]     at
#  18>            NEWLINE[               NONE][  7/ 14/  4/  0][0/1/0][       4000][1-0]
#  19>        OC_MSG_NAME[               NONE][  2/  4/ 11/  0][0/1/0][       4000][0-0]  builder
#  19>           OC_COLON[        OC_MSG_NAME][  9/ 11/ 12/  0][0/1/0][  100004000][0-0]         :
#  19>               TYPE[               NONE][ 10/ 12/ 15/  0][0/1/0][      64000][0-0]          nil
#  19>            NEWLINE[               NONE][ 13/ 15/  7/  0][0/1/0][       4000][1-0]
#  20>        OC_MSG_NAME[               NONE][  2/  7/ 14/  0][0/1/0][       4000][0-0]  handler
#  20>           OC_COLON[        OC_MSG_NAME][  9/ 14/ 15/  0][0/1/0][  100004000][0-0]         :
#  20>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 10/ 15/ 16/  0][0/1/0][  100064000][0-0]          ^
#  20>         BRACE_OPEN[      OC_BLOCK_EXPR][ 11/ 16/ 17/  0][0/1/0][  140044000][0-0]           {
#  20>            NEWLINE[               NONE][ 12/ 17/  4/  0][1/2/0][       4000][1-0]
#  21>        BRACE_CLOSE[      OC_BLOCK_EXPR][  2/  4/  5/  0][0/1/0][  140004000][0-0]  }
#  21>            NEWLINE[               NONE][  3/  5/  1/  0][0/1/0][       4000][1-0]
#  22>       SQUARE_CLOSE[             OC_MSG][  1/  1/  2/  0][0/0/0][  100004000][0-0] ]
#  22>            NEWLINE[               NONE][  2/  2/  1/  0][0/0/0][          0][2-0]
#  24>        SQUARE_OPEN[               NONE][  1/  1/  2/  0][0/0/0][  100000000][0-0] [
#  24>        SQUARE_OPEN[             OC_MSG][  2/  2/  3/  0][0/1/0][  100064000][0-0]  [
#  24>       OC_MSG_CLASS[               NONE][  3/  3/ 21/  0][0/2/0][      74000][0-0]   FIGBottomSheetItem
#  24>        OC_MSG_FUNC[               NONE][ 22/ 22/ 27/  1][0/2/0][       4000][0-0]                      alloc
#  24>       SQUARE_CLOSE[             OC_MSG][ 27/ 27/ 28/  0][0/1/0][  100004000][0-0]                           ]
#  24>            NEWLINE[               NONE][ 28/ 28/  2/  0][0/1/0][          0][1-0]
#  25>              LABEL[               NONE][  0/  2/ 10/  0][0/1/0][          0][0-0]iconName
#  25>        LABEL_COLON[               NONE][  9/ 10/ 11/  0][0/1/0][  100000000][0-0]         :
#  25>               WORD[               NONE][ 11/ 11/ 19/  0][0/1/0][      60000][0-0]           selected
#  25>           QUESTION[               NONE][ 20/ 20/ 21/  1][0/1/0][  100000000][0-0]                    ?
#  25>               WORD[               NONE][ 22/ 22/ 30/  1][0/1/0][      40000][0-0]                      iconName
#  25>         COND_COLON[               NONE][ 31/ 31/ 32/  1][0/1/0][  100000000][0-0]                               :
#  25>               WORD[               NONE][ 33/ 33/ 34/  1][0/1/0][      60000][0-0]                                 g
#  25>            NEWLINE[               NONE][ 34/ 34/ 11/  0][0/1/0][          0][1-0]
#  26>             MEMBER[               NONE][  4/ 11/ 12/  0][0/1/0][  100000000][0-0]    .
#  26>               WORD[               NONE][  5/ 12/ 14/  0][0/1/0][          0][0-0]     re
#  26>            NEWLINE[               NONE][  7/ 14/ 11/  0][0/1/0][          0][1-0]
#  27>             MEMBER[               NONE][  4/ 11/ 12/  0][0/1/0][  100000000][0-0]    .
#  27>               TYPE[               NONE][  5/ 12/ 14/  0][0/1/0][          0][0-0]     at
#  27>            NEWLINE[               NONE][  7/ 14/  4/  0][0/1/0][          0][1-0]
#  28>              LABEL[               NONE][  2/  4/ 11/  0][0/1/0][          0][0-0]  builder
#  28>        LABEL_COLON[               NONE][  9/ 11/ 12/  0][0/1/0][  100000000][0-0]         :
#  28>               TYPE[               NONE][ 11/ 12/ 15/  0][0/1/0][      60000][0-0]           nil
#  28>            NEWLINE[               NONE][ 14/ 15/  7/  0][0/1/0][          0][1-0]
#  29>              LABEL[               NONE][  2/  7/ 14/  0][0/1/0][          0][0-0]  handler
#  29>        LABEL_COLON[               NONE][  9/ 14/ 15/  0][0/1/0][  100000000][0-0]         :
#  29>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 10/ 15/ 16/  0][0/1/0][  100060000][0-0]          ^
#  29>         BRACE_OPEN[      OC_BLOCK_EXPR][ 11/ 16/ 17/  0][0/1/0][  140040000][0-0]           {
#  29>            NEWLINE[               NONE][ 12/ 17/  4/  0][1/2/0][          0][1-0]
#  30>        BRACE_CLOSE[      OC_BLOCK_EXPR][  2/  4/  5/  0][0/1/0][  150000000][0-0]  }
#  30>            NEWLINE[               NONE][  3/  5/  1/  0][0/1/0][          0][1-0]
#  31>       SQUARE_CLOSE[               NONE][  1/  1/  2/  0][0/0/0][  110000000][0-0] ]
#  31>            NEWLINE[               NONE][  2/  2/  1/  0][0/0/0][          0][2-0]
#  33>               WORD[               NONE][  1/  1/ 14/  0][0/0/0][   10000000][0-0] accessoryType
#  33>            NEWLINE[               NONE][ 14/ 14/  7/  0][0/0/0][          0][1-0]
#  34>           QUESTION[               NONE][  1/  7/  8/  0][0/0/0][  110000000][0-0] ?
#  34>               WORD[               NONE][  3/  9/ 16/  1][0/0/0][   10040000][0-0]   Config1
#  34>         BRACE_OPEN[   BRACED_INIT_LIST][ 10/ 16/ 17/  0][0/0/0][  160000000][0-0]          {
#  34>        BRACE_CLOSE[   BRACED_INIT_LIST][ 11/ 17/ 18/  0][0/0/0][  170000000][0-0]           }
#  34>            NEWLINE[               NONE][ 12/ 18/  5/  0][0/0/0][          0][1-0]
#  35>         COND_COLON[               NONE][  1/  5/  6/  0][0/0/0][  110000000][0-0] :
#  35>               WORD[               NONE][  3/  7/ 11/  1][0/0/0][   10060000][0-0]   flag
#  35>            COMPARE[               NONE][  8/ 12/ 14/  1][0/0/0][  110000000][0-0]        ==
#  35>               WORD[               NONE][ 11/ 15/ 20/  1][0/0/0][   10040000][0-0]           false
#  35>            NEWLINE[               NONE][ 16/ 20/  9/  0][0/0/0][          0][1-0]
#  36>           QUESTION[               NONE][  3/  9/ 10/  0][0/0/0][  110000000][0-0]   ?
#  36>               WORD[               NONE][  5/ 11/ 18/  1][0/0/0][   10040000][0-0]     Config2
#  36>         BRACE_OPEN[   BRACED_INIT_LIST][ 12/ 18/ 19/  0][0/0/0][  160000000][0-0]            {
#  36>        BRACE_CLOSE[   BRACED_INIT_LIST][ 13/ 19/ 20/  0][0/0/0][  160000000][0-0]             }
#  36>            NEWLINE[               NONE][ 14/ 20/  9/  0][0/0/0][          0][1-0]
#  37>             MEMBER[               NONE][  5/  9/ 10/  0][0/0/0][  100000000][0-0]     .
#  37>          FUNC_CALL[               NONE][  6/ 10/ 15/  0][0/0/0][          0][0-0]      build
#  37>        FPAREN_OPEN[          FUNC_CALL][ 11/ 15/ 16/  0][0/0/0][  100000000][0-0]           (
#  37>       FPAREN_CLOSE[          FUNC_CALL][ 12/ 16/ 17/  0][0/0/0][  110000010][0-0]            )
#  37>            NEWLINE[               NONE][ 13/ 17/  3/  0][0/0/0][          0][1-0]
#  38>         COND_COLON[               NONE][  3/  3/  4/  0][0/0/0][  110000000][0-0]   :
#  38>               WORD[               NONE][  5/  5/  9/  1][0/0/0][   10060000][0-0]     flag
#  38>            COMPARE[               NONE][ 10/ 10/ 12/  1][0/0/0][  110000000][0-0]          ==
#  38>               WORD[               NONE][ 13/ 13/ 17/  1][0/0/0][   10040000][0-0]             true
#  38>            NEWLINE[               NONE][ 17/ 17/  7/  0][0/0/0][          0][1-0]
#  39>           QUESTION[               NONE][  5/  7/  8/  0][0/0/0][  110000000][0-0]     ?
#  39>               WORD[               NONE][  7/  9/ 16/  1][0/0/0][   10040000][0-0]       Config3
#  39>         BRACE_OPEN[   BRACED_INIT_LIST][ 14/ 16/ 17/  0][0/0/0][  160000000][0-0]              {
#  39>        BRACE_CLOSE[   BRACED_INIT_LIST][ 15/ 17/ 18/  0][0/0/0][  160000000][0-0]               }
#  39>            NEWLINE[               NONE][ 16/ 18/  7/  0][0/0/0][          0][1-0]
#  40>             MEMBER[               NONE][  7/  7/  8/  0][0/0/0][  100000000][0-0]       .
#  40>          FUNC_CALL[               NONE][  8/  8/ 13/  0][0/0/0][          0][0-0]        build
#  40>        FPAREN_OPEN[          FUNC_CALL][ 13/ 13/ 14/  0][0/0/0][  100000000][0-0]             (
#  40>       FPAREN_CLOSE[          FUNC_CALL][ 14/ 14/ 15/  0][0/0/0][  110000010][0-0]              )
#  40>            NEWLINE[               NONE][ 15/ 15/  3/  0][0/0/0][          0][1-0]
#  41>         COND_COLON[               NONE][  5/  3/  4/  0][0/0/0][  110000000][0-0]     :
#  41>               TYPE[               NONE][  7/  5/ 12/  1][0/0/0][   10060000][0-0]       Config4
#  41>         BRACE_OPEN[   BRACED_INIT_LIST][ 14/ 12/ 13/  0][0/0/0][  160000000][0-0]              {
#  41>        BRACE_CLOSE[   BRACED_INIT_LIST][ 15/ 13/ 14/  0][0/0/0][  160000000][0-0]               }
#  41>            NEWLINE[               NONE][ 16/ 14/  3/  0][0/0/0][          0][1-0]
#  42>             MEMBER[               NONE][  7/  3/  4/  0][0/0/0][  100000000][0-0]       .
#  42>          FUNC_CALL[               NONE][  8/  4/  9/  0][0/0/0][          0][0-0]        build
#  42>        FPAREN_OPEN[          FUNC_CALL][ 13/  9/ 10/  0][0/0/0][  100000000][0-0]             (
#  42>       FPAREN_CLOSE[          FUNC_CALL][ 14/ 10/ 11/  0][0/0/0][  100000010][0-0]              )
#  42>          SEMICOLON[               NONE][ 15/ 11/ 12/  0][0/0/0][  100000000][0-0]               ;
#  42>            NEWLINE[               NONE][ 16/ 12/  1/  0][0/0/0][          0][2-0]
#  44>               TYPE[               NONE][  1/  1/  8/  0][0/0/0][      60000][0-0] options
#  44>             MEMBER[               NONE][  8/  8/  9/  0][0/0/0][  100000000][0-0]        .
#  44>               WORD[               NONE][  9/  9/ 13/  0][0/0/0][          0][0-0]         meta
#  44>            COMPARE[               NONE][ 14/ 14/ 16/  1][0/0/0][  100000000][0-0]              ==
#  44>               WORD[               NONE][ 17/ 17/ 20/  1][0/0/0][      40000][0-0]                 nil
#  44>            NEWLINE[               NONE][ 20/ 20/  5/  0][0/0/0][          0][1-0]
#  45>           QUESTION[               NONE][  1/  5/  6/  0][0/0/0][  100000000][0-0] ?
#  45>               WORD[               NONE][  3/  7/ 20/  1][0/0/0][      40000][0-0]   metaComponent
#  45>            NEWLINE[               NONE][ 16/ 20/  5/  0][0/0/0][          0][1-0]
#  46>         COND_COLON[               NONE][  1/  5/  6/  0][0/0/0][  100000000][0-0] :
#  46>          FUNC_CALL[               NONE][  3/  8/ 16/  2][0/0/0][      60000][0-0]   CBuilder
#  46>        FPAREN_OPEN[          FUNC_CALL][ 11/ 16/ 17/  0][0/0/0][  100000000][0-0]           (
#  46>       FPAREN_CLOSE[          FUNC_CALL][ 12/ 17/ 18/  0][0/0/0][  100000010][0-0]            )
#  46>            NEWLINE[               NONE][ 13/ 18/  1/  0][0/0/0][          0][1-0]
#  47>             MEMBER[               NONE][  3/  1/  2/  0][0/0/0][  100000000][0-0]   .
#  47>          FUNC_CALL[               NONE][  4/  2/  9/  0][0/0/0][          0][0-0]    spacing
#  47>        FPAREN_OPEN[          FUNC_CALL][ 11/  9/ 10/  0][0/0/0][  100000000][0-0]           (
#  47>             NUMBER[               NONE][ 12/ 10/ 11/  0][0/1/0][      40010][0-0]            4
#  47>       FPAREN_CLOSE[          FUNC_CALL][ 13/ 11/ 12/  0][0/0/0][  100000010][0-0]             )
#  47>            NEWLINE[               NONE][ 14/ 12/  5/  0][0/0/0][          0][1-0]
#  48>             MEMBER[               NONE][  3/  5/  6/  0][0/0/0][  100000000][0-0]   .
#  48>          FUNC_CALL[               NONE][  4/  6/ 18/  0][0/0/0][          0][0-0]    subComponent
#  48>        FPAREN_OPEN[          FUNC_CALL][ 16/ 18/ 19/  0][0/0/0][  100000000][0-0]                (
#  48>            NEWLINE[               NONE][ 17/ 19/  3/  0][0/1/0][         10][1-0]
#  49>          FUNC_CALL[               NONE][  5/  3/ 11/  0][0/1/0][      40010][0-0]     CBuilder
#  49>        FPAREN_OPEN[          FUNC_CALL][ 13/ 11/ 12/  0][0/1/0][  100000010][0-0]             (
#  49>       FPAREN_CLOSE[          FUNC_CALL][ 14/ 12/ 13/  0][0/1/0][  100000010][0-0]              )
#  49>            NEWLINE[               NONE][ 15/ 13/  9/  0][0/1/0][         10][1-0]
#  50>             MEMBER[               NONE][  5/  9/ 10/  0][0/1/0][  100000010][0-0]     .
#  50>          FUNC_CALL[               NONE][  6/ 10/ 15/  0][0/1/0][         10][0-0]      build
#  50>        FPAREN_OPEN[          FUNC_CALL][ 11/ 15/ 16/  0][0/1/0][  100000010][0-0]           (
#  50>       FPAREN_CLOSE[          FUNC_CALL][ 12/ 16/ 17/  0][0/1/0][  100000010][0-0]            )
#  50>       FPAREN_CLOSE[          FUNC_CALL][ 13/ 17/ 18/  0][0/0/0][  100000010][0-0]             )
#  50>          SEMICOLON[               NONE][ 14/ 18/ 19/  0][0/0/0][  100000000][0-0]              ;
#  50>            NEWLINE[               NONE][ 15/ 19/  1/  0][0/0/0][          0][2-0]
#  52>               TYPE[               NONE][  1/  1/  8/  0][0/0/0][      60000][0-0] options
#  52>             MEMBER[               NONE][  8/  8/  9/  0][0/0/0][  100000000][0-0]        .
#  52>               WORD[               NONE][  9/  9/ 13/  0][0/0/0][          0][0-0]         meta
#  52>            COMPARE[               NONE][ 14/ 14/ 16/  1][0/0/0][  100000000][0-0]              ==
#  52>               WORD[               NONE][ 17/ 17/ 20/  1][0/0/0][      40000][0-0]                 nil
#  52>            NEWLINE[               NONE][ 20/ 20/  5/  0][0/0/0][          0][1-0]
#  53>           QUESTION[               NONE][  1/  5/  6/  0][0/0/0][  100000000][0-0] ?
#  53>          FUNC_CALL[               NONE][  3/  7/ 15/  1][0/0/0][      40000][0-0]   CBuilder
#  53>        FPAREN_OPEN[          FUNC_CALL][ 11/ 15/ 16/  0][0/0/0][  100000000][0-0]           (
#  53>       FPAREN_CLOSE[          FUNC_CALL][ 12/ 16/ 17/  0][0/0/0][  100000010][0-0]            )
#  53>            NEWLINE[               NONE][ 13/ 17/  3/  0][0/0/0][          0][1-0]
#  54>             MEMBER[               NONE][  3/  3/  4/  0][0/0/0][  100000000][0-0]   .
#  54>          FUNC_CALL[               NONE][  4/  4/ 11/  0][0/0/0][          0][0-0]    spacing
#  54>        FPAREN_OPEN[          FUNC_CALL][ 11/ 11/ 12/  0][0/0/0][  100000000][0-0]           (
#  54>             NUMBER[               NONE][ 12/ 12/ 13/  0][0/1/0][      40010][0-0]            4
#  54>       FPAREN_CLOSE[          FUNC_CALL][ 13/ 13/ 14/  0][0/0/0][  100000010][0-0]             )
#  54>            NEWLINE[               NONE][ 14/ 14/  1/  0][0/0/0][          0][1-0]
#  55>             MEMBER[               NONE][  3/  1/  2/  0][0/0/0][  100000000][0-0]   .
#  55>          FUNC_CALL[               NONE][  4/  2/ 14/  0][0/0/0][          0][0-0]    subComponent
#  55>        FPAREN_OPEN[          FUNC_CALL][ 16/ 14/ 15/  0][0/0/0][  100000000][0-0]                (
#  55>            NEWLINE[               NONE][ 17/ 15/  5/  0][0/1/0][         10][1-0]
#  56>          FUNC_CALL[               NONE][  5/  5/ 13/  0][0/1/0][      40010][0-0]     CBuilder
#  56>        FPAREN_OPEN[          FUNC_CALL][ 13/ 13/ 14/  0][0/1/0][  100000010][0-0]             (
#  56>       FPAREN_CLOSE[          FUNC_CALL][ 14/ 14/ 15/  0][0/1/0][  100000010][0-0]              )
#  56>            NEWLINE[               NONE][ 15/ 15/  1/  0][0/1/0][         10][1-0]
#  57>             MEMBER[               NONE][  5/  1/  2/  0][0/1/0][  100000010][0-0]     .
#  57>          FUNC_CALL[               NONE][  6/  2/  7/  0][0/1/0][         10][0-0]      build
#  57>        FPAREN_OPEN[          FUNC_CALL][ 11/  7/  8/  0][0/1/0][  100000010][0-0]           (
#  57>       FPAREN_CLOSE[          FUNC_CALL][ 12/  8/  9/  0][0/1/0][  100000010][0-0]            )
#  57>            NEWLINE[               NONE][ 13/  9/  1/  0][0/1/0][         10][1-0]
#  58>       FPAREN_CLOSE[          FUNC_CALL][  3/  1/  2/  0][0/0/0][  100000010][0-0]   )
#  58>            NEWLINE[               NONE][  4/  2/  1/  0][0/0/0][          0][1-0]
#  59>         COND_COLON[               NONE][  1/  1/  2/  0][0/0/0][  100000000][0-0] :
#  59>               WORD[               NONE][  3/  3/ 10/  1][0/0/0][      60000][0-0]   Builder
#  59>            NEWLINE[               NONE][ 10/ 10/  7/  0][0/0/0][          0][1-0]
#  60>             MEMBER[               NONE][  3/  7/  8/  0][0/0/0][  100000000][0-0]   .
#  60>               WORD[               NONE][  4/  8/ 15/  0][0/0/0][          0][0-0]    spacing
#  60>          SEMICOLON[               NONE][ 11/ 15/ 16/  0][0/0/0][  100000000][0-0]           ;
#  60>            NEWLINE[               NONE][ 12/ 16/  7/  0][0/0/0][          0][2-0]
#  62>               WORD[               NONE][  1/  7/ 14/  0][0/0/0][      60000][0-0] options
#  62>            COMPARE[               NONE][  9/ 15/ 17/  1][0/0/0][  100000000][0-0]         ==
#  62>               WORD[               NONE][ 12/ 18/ 21/  1][0/0/0][      40000][0-0]            nil
#  62>           QUESTION[               NONE][ 16/ 22/ 23/  1][0/0/0][  100000000][0-0]                ?
#  62>          FUNC_CALL[               NONE][ 18/ 24/ 32/  1][0/0/0][      40000][0-0]                  CBuilder
#  62>        FPAREN_OPEN[          FUNC_CALL][ 26/ 32/ 33/  0][0/0/0][  100000000][0-0]                          (
#  62>       FPAREN_CLOSE[          FUNC_CALL][ 27/ 33/ 34/  0][0/0/0][  100000010][0-0]                           )
#  62>            NEWLINE[               NONE][ 28/ 34/  3/  0][0/0/0][          0][1-0]
#  63>             MEMBER[               NONE][  3/  3/  4/  0][0/0/0][  100000000][0-0]   .
#  63>          FUNC_CALL[               NONE][  4/  4/ 11/  0][0/0/0][          0][0-0]    spacing
#  63>        FPAREN_OPEN[          FUNC_CALL][ 11/ 11/ 12/  0][0/0/0][  100000000][0-0]           (
#  63>             NUMBER[               NONE][ 12/ 12/ 13/  0][0/1/0][      40010][0-0]            6
#  63>       FPAREN_CLOSE[          FUNC_CALL][ 13/ 13/ 14/  0][0/0/0][  100000010][0-0]             )
#  63>            NEWLINE[               NONE][ 14/ 14/  1/  0][0/0/0][          0][1-0]
#  64>         COND_COLON[               NONE][  1/  1/  2/  0][0/0/0][  100000000][0-0] :
#  64>               WORD[               NONE][  3/  3/ 10/  1][0/0/0][      60000][0-0]   Builder
#  64>            NEWLINE[               NONE][ 10/ 10/  7/  0][0/0/0][          0][1-0]
#  65>             MEMBER[               NONE][  3/  7/  8/  0][0/0/0][  100000000][0-0]   .
#  65>               WORD[               NONE][  4/  8/ 15/  0][0/0/0][          0][0-0]    spacing
#  65>          SEMICOLON[               NONE][ 11/ 15/ 16/  0][0/0/0][  100000000][0-0]           ;
#  65>            NEWLINE[               NONE][ 12/ 16/  7/  0][0/0/0][          0][2-0]
#  67>               WORD[               NONE][  1/  7/ 14/  0][0/0/0][      60000][0-0] options
#  67>            COMPARE[               NONE][  9/ 15/ 17/  1][0/0/0][  100000000][0-0]         ==
#  67>               WORD[               NONE][ 12/ 18/ 21/  1][0/0/0][      40000][0-0]            nil
#  67>           QUESTION[               NONE][ 16/ 22/ 23/  1][0/0/0][  100000000][0-0]                ?
#  67>          FUNC_CALL[               NONE][ 18/ 24/ 32/  1][0/0/0][      40000][0-0]                  CBuilder
#  67>        FPAREN_OPEN[          FUNC_CALL][ 26/ 32/ 33/  0][0/0/0][  100000000][0-0]                          (
#  67>       FPAREN_CLOSE[          FUNC_CALL][ 27/ 33/ 34/  0][0/0/0][  100000010][0-0]                           )
#  67>            NEWLINE[               NONE][ 28/ 34/  3/  0][0/0/0][          0][1-0]
#  68>             MEMBER[               NONE][  3/  3/  4/  0][0/0/0][  100000000][0-0]   .
#  68>          FUNC_CALL[               NONE][  4/  4/ 11/  0][0/0/0][          0][0-0]    spacing
#  68>        FPAREN_OPEN[          FUNC_CALL][ 11/ 11/ 12/  0][0/0/0][  100000000][0-0]           (
#  68>             NUMBER[               NONE][ 12/ 12/ 13/  0][0/1/0][      40010][0-0]            6
#  68>       FPAREN_CLOSE[          FUNC_CALL][ 13/ 13/ 14/  0][0/0/0][  100000010][0-0]             )
#  68>         COND_COLON[               NONE][ 15/ 15/ 16/  1][0/0/0][  100000000][0-0]               :
#  68>               WORD[               NONE][ 17/ 17/ 24/  1][0/0/0][      60000][0-0]                 Builder
#  68>            NEWLINE[               NONE][ 24/ 24/  7/  0][0/0/0][          0][1-0]
#  69>             MEMBER[               NONE][  3/  7/  8/  0][0/0/0][  100000000][0-0]   .
#  69>               WORD[               NONE][  4/  8/ 15/  0][0/0/0][          0][0-0]    spacing
#  69>          SEMICOLON[               NONE][ 11/ 15/ 16/  0][0/0/0][  100000000][0-0]           ;
#  69>            NEWLINE[               NONE][ 12/ 16/  1/  0][0/0/0][          0][2-0]
#  72>          FUNC_CALL[               NONE][  1/  1/  9/  0][0/0/0][      60000][0-0] CBuilder
#  72>        FPAREN_OPEN[          FUNC_CALL][  9/  9/ 10/  0][0/0/0][  100000000][0-0]         (
#  72>       FPAREN_CLOSE[          FUNC_CALL][ 10/ 10/ 11/  0][0/0/0][  100000010][0-0]          )
#  72>            NEWLINE[               NONE][ 11/ 11/  1/  0][0/0/0][          0][1-0]
#  73>             MEMBER[               NONE][  1/  1/  2/  0][0/0/0][  100000000][0-0] .
#  73>          FUNC_CALL[               NONE][  2/  2/ 14/  0][0/0/0][          0][0-0]  subComponent
#  73>        FPAREN_OPEN[          FUNC_CALL][ 14/ 14/ 15/  0][0/0/0][  100000000][0-0]              (
#  73>            NEWLINE[               NONE][ 15/ 15/  3/  0][0/1/0][         10][1-0]
#  74>          FUNC_CALL[               NONE][  3/  3/ 11/  0][0/1/0][      40010][0-0]   CBuilder
#  74>        FPAREN_OPEN[          FUNC_CALL][ 11/ 11/ 12/  0][0/1/0][  100000010][0-0]           (
#  74>       FPAREN_CLOSE[          FUNC_CALL][ 12/ 12/ 13/  0][0/1/0][  100000010][0-0]            )
#  74>            NEWLINE[               NONE][ 13/ 13/  3/  0][0/1/0][         10][1-0]
#  75>             MEMBER[               NONE][  3/  3/  4/  0][0/1/0][  100000010][0-0]   .
#  75>          FUNC_CALL[               NONE][  4/  4/ 11/  0][0/1/0][         10][0-0]    spacing
#  75>        FPAREN_OPEN[          FUNC_CALL][ 11/ 11/ 12/  0][0/1/0][  100000010][0-0]           (
#  75>             NUMBER[               NONE][ 12/ 12/ 13/  0][0/2/0][      40010][0-0]            4
#  75>       FPAREN_CLOSE[          FUNC_CALL][ 13/ 13/ 14/  0][0/1/0][  100000010][0-0]             )
#  75>       FPAREN_CLOSE[          FUNC_CALL][ 14/ 14/ 15/  0][0/0/0][  100000010][0-0]              )
#  75>          SEMICOLON[               NONE][ 15/ 15/ 16/  0][0/0/0][  100000000][0-0]               ;
#  75>            NEWLINE[               NONE][ 16/ 16/  1/  0][0/0/0][          0][2-0]
#  77>               WORD[               NONE][  1/  1/  5/  0][0/0/0][      60000][0-0] flag
#  77>            NEWLINE[               NONE][  5/  5/  1/  0][0/0/0][          0][1-0]
#  78>           QUESTION[               NONE][  1/  1/  2/  0][0/0/0][  100000000][0-0] ?
#  78>               WORD[               NONE][  3/  3/ 10/  1][0/0/0][      40000][0-0]   Builder
#  78>            NEWLINE[               NONE][ 10/ 10/  1/  0][0/0/0][          0][1-0]
#  79>             MEMBER[               NONE][  3/  1/  2/  0][0/0/0][  100000000][0-0]   .
#  79>               WORD[               NONE][  4/  2/  9/  0][0/0/0][          0][0-0]    spacing
#  79>          SEMICOLON[               NONE][ 11/  9/ 10/  0][0/0/0][  100000000][0-0]           ;
#  79>            NEWLINE[               NONE][ 12/ 10/  1/  0][0/0/0][          0][1-0]
#  80>         COND_COLON[               NONE][  1/  1/  2/  0][0/0/0][  100060000][0-0] :
#  80>               TYPE[               NONE][  3/  3/ 10/  1][0/0/0][      60000][0-0]   Builder
#  80>            NEWLINE[               NONE][ 10/ 10/  7/  0][0/0/0][          0][1-0]
#  81>             MEMBER[               NONE][  3/  7/  8/  0][0/0/0][  100000000][0-0]   .
#  81>               WORD[               NONE][  4/  8/ 15/  0][0/0/0][          0][0-0]    spacing
#  81>          SEMICOLON[               NONE][ 11/ 15/ 16/  0][0/0/0][  100000000][0-0]           ;
#  81>            NEWLINE[               NONE][ 12/ 16/  1/  0][0/0/0][          0][2-0]
#  83>               TYPE[           FUNC_DEF][  1/  1/  5/  0][0/0/0][      70000][0-0] func
#  83>           FUNC_DEF[               NONE][  6/  6/ 15/  1][0/0/0][          0][0-0]      something
#  83>        FPAREN_OPEN[           FUNC_DEF][ 15/ 15/ 16/  0][0/0/0][  100000000][0-0]               (
#  83>       FPAREN_CLOSE[           FUNC_DEF][ 16/ 16/ 17/  0][0/0/0][  100000008][0-0]                )
#  83>            NEWLINE[               NONE][ 17/ 18/  0/  0][0/0/0][          8][1-0]
#  83>         BRACE_OPEN[           FUNC_DEF][  1/ 18/ 19/  1][0/0/0][  100000000][0-0] {
#  83>            NEWLINE[               NONE][  2/ 19/  3/  0][1/1/0][          0][1-0]
#  84>                 IF[               NONE][  3/  3/  5/  0][1/1/0][      60000][0-0]   if
#  84>        SPAREN_OPEN[                 IF][  6/  6/  7/  1][1/1/0][  100000000][0-0]      (
#  84>               WORD[               NONE][  7/  7/ 11/  0][1/2/0][      40020][0-0]       flag
#  84>       SPAREN_CLOSE[                 IF][ 11/ 11/ 12/  0][1/1/0][  100000000][0-0]           )
#  84>         BRACE_OPEN[                 IF][ 13/ 13/ 14/  1][1/1/0][  100000000][0-0]             {
#  84>            NEWLINE[               NONE][ 14/ 14/  5/  0][2/2/0][          0][1-0]
#  85>               WORD[               NONE][  5/  5/  6/  0][2/2/0][      60000][0-0]     x
#  85>            COMPARE[               NONE][  7/  7/  9/  1][2/2/0][  100000000][0-0]       ==
#  85>               WORD[               NONE][ 10/ 10/ 14/  1][2/2/0][      40000][0-0]          flag
#  85>            NEWLINE[               NONE][ 14/ 14/  5/  0][2/2/0][          0][1-0]
#  86>           QUESTION[               NONE][  5/  5/  6/  0][2/2/0][  100000000][0-0]     ?
#  86>               WORD[               NONE][  7/  7/ 14/  1][2/2/0][      40000][0-0]       Builder
#  86>            NEWLINE[               NONE][ 14/ 14/ 11/  0][2/2/0][          0][1-0]
#  87>             MEMBER[               NONE][  7/ 11/ 12/  0][2/2/0][  100000000][0-0]       .
#  87>               WORD[               NONE][  8/ 12/ 19/  0][2/2/0][          0][0-0]        spacing
#  87>            NEWLINE[               NONE][ 15/ 19/  7/  0][2/2/0][          0][1-0]
#  88>         COND_COLON[               NONE][  5/  7/  8/  0][2/2/0][  100000000][0-0]     :
#  88>               WORD[               NONE][  7/  9/ 16/  1][2/2/0][      60000][0-0]       Builder
#  88>            NEWLINE[               NONE][ 14/ 16/  7/  0][2/2/0][          0][1-0]
#  89>             MEMBER[               NONE][  7/  7/  8/  0][2/2/0][  100000000][0-0]       .
#  89>               WORD[               NONE][  8/  8/ 15/  0][2/2/0][          0][0-0]        spacing
#  89>          SEMICOLON[               NONE][ 15/ 15/ 16/  0][2/2/0][  100000000][0-0]               ;
#  89>            NEWLINE[               NONE][ 16/ 16/  3/  0][2/2/0][          0][1-0]
#  90>        BRACE_CLOSE[                 IF][  3/  3/  4/  0][1/1/0][  100000000][0-0]   }
#  90>            NEWLINE[               NONE][  4/  4/  1/  0][1/1/0][          0][1-0]
#  91>        BRACE_CLOSE[           FUNC_DEF][  1/  1/  2/  0][0/0/0][  100000000][0-0] }
#  91>            NEWLINE[               NONE][  2/  2/  1/  0][0/0/0][          0][2-0]
#  94>         PAREN_OPEN[               NONE][  1/  1/  2/  0][0/0/0][  100060000][0-0] (
#  94>               WORD[               NONE][  2/  2/  7/  0][0/1/0][      40000][0-0]  event
#  94>            NEWLINE[               NONE][  7/  7/  3/  0][0/1/0][          0][1-0]
#  95>           QUESTION[               NONE][  3/  3/  4/  0][0/1/0][  100000000][0-0]   ?
#  95>        SQUARE_OPEN[             OC_MSG][  5/  7/  8/  3][0/1/0][  100044000][0-0]     [
#  95>       OC_MSG_CLASS[               NONE][  6/  8/ 48/  0][0/2/0][      64000][0-0]      FDSTetraBottomSheetActionCellItemVariant
#  95>            NEWLINE[               NONE][ 46/ 48/  9/  0][0/2/0][       4000][1-0]
#  96>        OC_MSG_FUNC[               NONE][  6/  9/ 15/  0][0/2/0][       4000][0-0]      action
#  96>           OC_COLON[               NONE][ 12/ 15/ 16/  0][0/2/0][  100004000][0-0]            :
#  96>               WORD[               NONE][ 13/ 16/ 24/  0][0/2/0][      64000][0-0]             CKAction
#  96>         ANGLE_OPEN[           TEMPLATE][ 21/ 24/ 25/  0][0/2/0][  100004040][0-0]                     <
#  96>        ANGLE_CLOSE[           TEMPLATE][ 22/ 25/ 26/  0][0/2/0][  100044040][0-0]                      >
#  96>          DC_MEMBER[               NONE][ 23/ 27/ 29/  1][0/2/0][  100044000][0-0]                       ::
#  96>          FUNC_CALL[               NONE][ 25/ 30/ 55/  1][0/2/0][       4000][0-0]                         actionFromSenderlessBlock
#  96>        FPAREN_OPEN[          FUNC_CALL][ 50/ 55/ 56/  0][0/2/0][  100004000][0-0]                                                  (
#  96>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 51/ 56/ 57/  0][0/3/0][  100044000][0-0]                                                   ^
#  96>         BRACE_OPEN[      OC_BLOCK_EXPR][ 52/ 57/ 58/  0][0/3/0][  100044000][0-0]                                                    {
#  96>            NEWLINE[               NONE][ 53/ 58/  3/  0][1/4/0][       4000][1-0]
#  97>               TYPE[               NONE][  8/  3/  7/  0][1/4/0][   10074000][0-0]        auto
#  97>          QUALIFIER[               NONE][ 13/  8/ 13/  1][1/4/0][   10014000][0-0]             const
#  97>               WORD[               NONE][ 19/ 14/ 24/  1][1/4/0][   10004000][0-0]                   strongSelf
#  97>             ASSIGN[               NONE][ 30/ 25/ 26/  1][1/4/0][  100004000][0-0]                              =
#  97>               WORD[               NONE][ 32/ 27/ 35/  1][1/4/0][      44000][0-0]                                weakSelf
#  97>          SEMICOLON[               NONE][ 40/ 35/ 36/  0][1/4/0][  100004000][0-0]                                        ;
#  97>            NEWLINE[               NONE][ 41/ 36/  1/  0][1/4/0][       4000][1-0]
#  98>        BRACE_CLOSE[      OC_BLOCK_EXPR][  6/  1/  2/  0][0/3/0][  100004000][0-0]      }
#  98>       FPAREN_CLOSE[          FUNC_CALL][  7/  2/  3/  0][0/2/0][  100004000][0-0]       )
#  98>       SQUARE_CLOSE[             OC_MSG][  8/  3/  4/  0][0/1/0][  100004000][0-0]        ]
#  98>            NEWLINE[               NONE][  9/  4/  3/  0][0/1/0][          0][1-0]
#  99>         COND_COLON[               NONE][  3/  3/  4/  0][0/1/0][  100000000][0-0]   :
#  99>               WORD[               NONE][  5/  5/  8/  1][0/1/0][      60000][0-0]     nil
#  99>        PAREN_CLOSE[               NONE][  8/  8/  9/  0][0/0/0][  100000000][0-0]        )
#  99>          SEMICOLON[               NONE][  9/  9/ 10/  0][0/0/0][  100000000][0-0]         ;
#  99>            NEWLINE[               NONE][ 10/ 10/  1/  0][0/0/0][          0][2-0]
# 101>               TYPE[           FUNC_DEF][  1/  1/  5/  0][0/0/0][      70000][0-0] void
# 101>           FUNC_DEF[               NONE][  6/  6/ 12/  1][0/0/0][          0][0-0]      method
# 101>        FPAREN_OPEN[           FUNC_DEF][ 12/ 12/ 13/  0][0/0/0][  100000000][0-0]            (
# 101>       FPAREN_CLOSE[           FUNC_DEF][ 13/ 13/ 14/  0][0/0/0][  100000008][0-0]             )
# 101>            NEWLINE[               NONE][ 14/ 15/  0/  0][0/0/0][          8][1-0]
# 101>         BRACE_OPEN[           FUNC_DEF][  1/ 15/ 16/  1][0/0/0][  100000000][0-0] {
# 101>            NEWLINE[               NONE][  2/ 16/  3/  0][1/1/0][          0][1-0]
# 102>               TYPE[               NONE][  3/  3/ 10/  0][1/1/0][      60000][0-0]   options
# 102>             MEMBER[               NONE][ 10/ 10/ 11/  0][1/1/0][  100000000][0-0]          .
# 102>               WORD[               NONE][ 11/ 11/ 15/  0][1/1/0][          0][0-0]           meta
# 102>            COMPARE[               NONE][ 16/ 16/ 18/  1][1/1/0][  100000000][0-0]                ==
# 102>               WORD[               NONE][ 19/ 19/ 22/  1][1/1/0][      40000][0-0]                   nil
# 102>            NEWLINE[               NONE][ 22/ 22/  5/  0][1/1/0][          0][1-0]
# 103>           QUESTION[               NONE][  3/  5/  6/  0][1/1/0][  100000000][0-0]   ?
# 103>               WORD[               NONE][  5/  7/ 20/  1][1/1/0][      40000][0-0]     metaComponent
# 103>            NEWLINE[               NONE][ 18/ 20/  5/  0][1/1/0][          0][1-0]
# 104>         COND_COLON[               NONE][  3/  5/  6/  0][1/1/0][  100000000][0-0]   :
# 104>          FUNC_CALL[               NONE][  5/  7/ 23/  1][1/1/0][      60000][0-0]     ComponentBuilder
# 104>        FPAREN_OPEN[          FUNC_CALL][ 21/ 23/ 24/  0][1/1/0][  100000000][0-0]                     (
# 104>       FPAREN_CLOSE[          FUNC_CALL][ 22/ 24/ 25/  0][1/1/0][  100000010][0-0]                      )
# 104>            NEWLINE[               NONE][ 23/ 25/  1/  0][1/1/0][          0][1-0]
# 105>             MEMBER[               NONE][  5/  1/  2/  0][1/1/0][  100000000][0-0]     .
# 105>          FUNC_CALL[               NONE][  6/  2/  9/  0][1/1/0][          0][0-0]      spacing
# 105>        FPAREN_OPEN[          FUNC_CALL][ 13/  9/ 10/  0][1/1/0][  100000000][0-0]             (
# 105>             NUMBER[               NONE][ 14/ 10/ 11/  0][1/2/0][      40010][0-0]              4
# 105>       FPAREN_CLOSE[          FUNC_CALL][ 15/ 11/ 12/  0][1/1/0][  100000010][0-0]               )
# 105>            NEWLINE[               NONE][ 16/ 12/  1/  0][1/1/0][          0][1-0]
# 106>             MEMBER[               NONE][  5/  1/  2/  0][1/1/0][  100000000][0-0]     .
# 106>          FUNC_CALL[               NONE][  6/  2/ 14/  0][1/1/0][          0][0-0]      subComponent
# 106>        FPAREN_OPEN[          FUNC_CALL][ 18/ 14/ 15/  0][1/1/0][  100000000][0-0]                  (
# 106>            NEWLINE[               NONE][ 19/ 15/  3/  0][1/2/0][         10][1-0]
# 107>          FUNC_CALL[               NONE][  7/  3/ 19/  0][1/2/0][      40010][0-0]       ComponentBuilder
# 107>        FPAREN_OPEN[          FUNC_CALL][ 23/ 19/ 20/  0][1/2/0][  100000010][0-0]                       (
# 107>       FPAREN_CLOSE[          FUNC_CALL][ 24/ 20/ 21/  0][1/2/0][  100000010][0-0]                        )
# 107>            NEWLINE[               NONE][ 25/ 21/  1/  0][1/2/0][         10][1-0]
# 108>             MEMBER[               NONE][  7/  1/  2/  0][1/2/0][  100000010][0-0]       .
# 108>          FUNC_CALL[               NONE][  8/  2/  9/  0][1/2/0][         10][0-0]        spacing
# 108>        FPAREN_OPEN[          FUNC_CALL][ 15/  9/ 10/  0][1/2/0][  100000010][0-0]               (
# 108>             NUMBER[               NONE][ 16/ 10/ 11/  0][1/3/0][      40010][0-0]                4
# 108>       FPAREN_CLOSE[          FUNC_CALL][ 17/ 11/ 12/  0][1/2/0][  100000010][0-0]                 )
# 108>       FPAREN_CLOSE[          FUNC_CALL][ 18/ 12/ 13/  0][1/1/0][  100000010][0-0]                  )
# 108>          SEMICOLON[               NONE][ 19/ 13/ 14/  0][1/1/0][  100000000][0-0]                   ;
# 108>            NEWLINE[               NONE][ 20/ 14/  1/  0][1/1/0][          0][1-0]
# 109>        BRACE_CLOSE[           FUNC_DEF][  1/  1/  2/  0][0/0/0][  100000000][0-0] }
# 109>            NEWLINE[               NONE][  2/  2/  1/  0][0/0/0][          0][2-0]
# 112>               TYPE[               NONE][  1/  1/ 17/  0][0/0/0][      70000][0-0] CKComponentScope
# 112>      FUNC_CTOR_VAR[               NONE][ 18/ 18/ 23/  1][0/0/0][    1800000][0-0]                  scope
# 112>        FPAREN_OPEN[      FUNC_CTOR_VAR][ 23/ 23/ 24/  0][0/0/0][  100000000][0-0]                       (
# 112>               WORD[               NONE][ 24/ 24/ 28/  0][0/1/0][20000040000][0-0]                        self
# 112>              COMMA[               NONE][ 28/ 28/ 29/  0][0/1/0][20100000000][0-0]                            ,
# 112>               WORD[               NONE][ 30/ 30/ 37/  1][0/1/0][20000040000][0-0]                              scopeId
# 112>              COMMA[               NONE][ 37/ 37/ 38/  0][0/1/0][20100000000][0-0]                                     ,
# 112>         PAREN_OPEN[             C_CAST][ 39/ 44/ 45/  6][0/1/0][20100040000][0-0]                                       (
# 112>               TYPE[             C_CAST][ 40/ 45/ 47/  0][0/2/0][20000040000][0-0]                                        id
# 112>        PAREN_CLOSE[             C_CAST][ 42/ 47/ 48/  0][0/1/0][20100000000][0-0]                                          )
# 112>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 44/ 49/ 50/  1][0/1/0][20100040000][0-0]                                            ^
# 112>         BRACE_OPEN[      OC_BLOCK_EXPR][ 45/ 51/ 52/  1][0/1/0][20100040000][0-0]                                             {
# 112>            NEWLINE[               NONE][ 46/ 52/  1/  0][1/2/0][20000000000][1-0]
# 113>             RETURN[               NONE][  3/  1/  7/  0][1/2/0][20000060000][0-0]   return
# 113>              OC_AT[               NONE][ 10/ 13/ 14/  6][1/2/0][20100040000][0-0]          @
# 113>         PAREN_OPEN[              OC_AT][ 11/ 14/ 15/  0][1/2/0][20100000000][0-0]           (
# 113>               WORD[               NONE][ 12/ 16/ 37/  1][1/3/0][20800040000][0-0]            actionSheetButtonItem
# 113>             MEMBER[               NONE][ 33/ 37/ 38/  0][1/3/0][20900000000][0-0]                                 .
# 113>               WORD[               NONE][ 34/ 38/ 48/  0][1/3/0][20800000000][0-0]                                  isSelected
# 113>        PAREN_CLOSE[              OC_AT][ 44/ 48/ 49/  0][1/2/0][20900000000][0-0]                                            )
# 113>          SEMICOLON[               NONE][ 45/ 49/ 50/  0][1/2/0][20100000000][0-0]                                             ;
# 113>            NEWLINE[               NONE][ 46/ 50/  7/  0][1/2/0][20000000000][1-0]
# 114>        BRACE_CLOSE[      OC_BLOCK_EXPR][  1/  7/  8/  0][0/1/0][20100000000][0-0] }
# 114>       FPAREN_CLOSE[      FUNC_CTOR_VAR][  2/  8/  9/  0][0/0/0][20100000000][0-0]  )
# 114>          SEMICOLON[      FUNC_CTOR_VAR][  3/  9/ 10/  0][0/0/0][  100000000][0-0]   ;
# 114>            NEWLINE[               NONE][  4/ 10/  1/  0][0/0/0][          0][2-0]
# 116>          QUALIFIER[               NONE][  1/  1/  6/  0][0/0/0][   10470000][0-0] const
# 116>               TYPE[               NONE][  7/ 10/ 18/  4][0/0/0][   10400000][0-0]       CKAction
# 116>         ANGLE_OPEN[           TEMPLATE][ 15/ 18/ 19/  0][0/0/0][  110000040][0-0]               <
# 116>        ANGLE_CLOSE[           TEMPLATE][ 16/ 19/ 20/  0][0/0/0][  110040040][0-0]                >
# 116>               WORD[               NONE][ 18/ 21/ 27/  1][0/0/0][   11840000][0-0]                  action
# 116>             ASSIGN[               NONE][ 25/ 28/ 29/  1][0/0/0][  100000000][0-0]                         =
# 116>            NEWLINE[               NONE][ 26/ 29/  9/  0][0/0/0][          0][1-0]
# 117>               WORD[               NONE][  1/  9/ 17/  0][0/0/0][      40000][0-0] CKAction
# 117>         ANGLE_OPEN[           TEMPLATE][  9/ 17/ 18/  0][0/0/0][  100000040][0-0]         <
# 117>        ANGLE_CLOSE[           TEMPLATE][ 10/ 18/ 19/  0][0/0/0][  100040040][0-0]          >
# 117>          DC_MEMBER[               NONE][ 11/ 19/ 21/  0][0/0/0][  100040000][0-0]           ::
# 117>          FUNC_CALL[               NONE][ 13/ 21/ 36/  0][0/0/0][          0][0-0]             actionFromBlock
# 117>        FPAREN_OPEN[          FUNC_CALL][ 28/ 36/ 37/  0][0/0/0][  100000000][0-0]                            (
# 117>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 29/ 37/ 38/  0][0/1/0][  100040000][0-0]                             ^
# 117>        FPAREN_OPEN[      OC_BLOCK_EXPR][ 30/ 38/ 39/  0][0/1/0][  100040000][0-0]                              (
# 117>               TYPE[      OC_BLOCK_EXPR][ 31/ 39/ 50/  0][0/2/0][ 4000440000][0-0]                               CKComponent
# 117>           PTR_TYPE[      OC_BLOCK_EXPR][ 43/ 51/ 52/  1][0/2/0][ 4100000000][0-0]                                           *
# 117>               WORD[      OC_BLOCK_EXPR][ 44/ 52/ 61/  0][0/2/0][ 4000840000][0-0]                                            component
# 117>       FPAREN_CLOSE[      OC_BLOCK_EXPR][ 53/ 61/ 62/  0][0/1/0][ 4100000000][0-0]                                                     )
# 117>         BRACE_OPEN[      OC_BLOCK_EXPR][ 55/ 63/ 64/  1][0/1/0][  100000000][0-0]                                                       {
# 117>            NEWLINE[               NONE][ 56/ 64/  3/  0][1/2/0][          0][1-0]
# 118>        SQUARE_OPEN[             OC_MSG][  3/  3/  4/  0][1/2/0][  100064000][0-0]   [
# 118>       OC_MSG_CLASS[               NONE][  4/  4/  8/  0][1/3/0][      64000][0-0]    self
# 118>             MEMBER[               NONE][  8/  8/ 10/  0][1/3/0][  100004000][0-0]        ->
# 118>               TYPE[               NONE][ 10/ 10/ 22/  0][1/3/0][      14000][0-0]          _bottomSheet
# 118>        OC_MSG_FUNC[               NONE][ 23/ 23/ 34/  1][1/3/0][     184000][0-0]                       coordinator
# 118>           OC_COLON[               NONE][ 34/ 34/ 35/  0][1/3/0][  100104000][0-0]                                  :
# 118>          FUNC_CALL[               NONE][ 35/ 35/ 46/  0][1/3/0][      64000][0-0]                                   coordinator
# 118>        FPAREN_OPEN[          FUNC_CALL][ 46/ 46/ 47/  0][1/3/0][  100004000][0-0]                                              (
# 118>       FPAREN_CLOSE[          FUNC_CALL][ 47/ 47/ 48/  0][1/3/0][  100004010][0-0]                                               )
# 118>        OC_MSG_NAME[               NONE][ 49/ 49/ 59/  1][1/3/0][       4000][0-0]                                                 completion
# 118>           OC_COLON[        OC_MSG_NAME][ 59/ 59/ 60/  0][1/3/0][  100004000][0-0]                                                           :
# 118>               WORD[               NONE][ 60/ 60/ 63/  0][1/3/0][      64000][0-0]                                                            nil
# 118>       SQUARE_CLOSE[             OC_MSG][ 63/ 63/ 64/  0][1/2/0][  100004000][0-0]                                                               ]
# 118>          SEMICOLON[             OC_MSG][ 64/ 64/ 65/  0][1/2/0][  100000000][0-0]                                                                ;
# 118>            NEWLINE[               NONE][ 65/ 65/  9/  0][1/2/0][          0][1-0]
# 119>        BRACE_CLOSE[      OC_BLOCK_EXPR][  1/  9/ 10/  0][0/1/0][  100000000][0-0] }
# 119>       FPAREN_CLOSE[          FUNC_CALL][  2/ 10/ 11/  0][0/0/0][  100000000][0-0]  )
# 119>          SEMICOLON[               NONE][  3/ 11/ 12/  0][0/0/0][  100000000][0-0]   ;
# 119>            NEWLINE[               NONE][  4/ 12/  1/  0][0/0/0][          0][2-0]
# 121>          QUALIFIER[               NONE][  1/  1/  6/  0][0/0/0][   10470000][0-0] const
# 121>               TYPE[               NONE][  7/  7/ 24/  1][0/0/0][   10410000][0-0]       CKComponentLayout
# 121>               WORD[               NONE][ 25/ 25/ 35/  1][0/0/0][   11800000][0-0]                         bodyLayout
# 121>             ASSIGN[               NONE][ 36/ 36/ 37/  1][0/0/0][  100000000][0-0]                                    =
# 121>            NEWLINE[               NONE][ 37/ 37/  1/  0][0/0/0][          0][1-0]
# 122>          FUNC_CALL[               NONE][  1/  1/  9/  0][0/0/0][      40000][0-0] FBLayout
# 122>        FPAREN_OPEN[          FUNC_CALL][  9/  9/ 10/  0][0/0/0][  100000000][0-0]         (
# 122>            NEWLINE[               NONE][ 10/ 10/  7/  0][0/1/0][         10][1-0]
# 123>               WORD[               NONE][  3/  7/ 13/  0][0/1/0][      40010][0-0]   layout
# 123>              COMMA[               NONE][  9/ 13/ 14/  0][0/1/0][  100000010][0-0]         ,
# 123>            NEWLINE[               NONE][ 10/ 14/  3/  0][0/1/0][         10][1-0]
# 124>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][  3/  3/  4/  0][0/1/0][  100040010][0-0]   ^
# 124>               TYPE[      OC_BLOCK_EXPR][  4/  4/  8/  0][0/1/0][ 2000040010][0-0]    BOOL
# 124>        FPAREN_OPEN[      OC_BLOCK_EXPR][  9/  9/ 10/  1][0/1/0][  100000010][0-0]         (
# 124>          QUALIFIER[      OC_BLOCK_EXPR][ 10/ 10/ 15/  0][0/2/0][ 4000050010][0-0]          const
# 124>               TYPE[      OC_BLOCK_EXPR][ 16/ 16/ 33/  1][0/2/0][ 4000400010][0-0]                CKComponentLayout
# 124>              BYREF[      OC_BLOCK_EXPR][ 34/ 34/ 35/  1][0/2/0][ 4100000010][0-0]                                  &
# 124>               WORD[      OC_BLOCK_EXPR][ 35/ 35/ 48/  0][0/2/0][ 4000800010][0-0]                                   currentLayout
# 124>       FPAREN_CLOSE[      OC_BLOCK_EXPR][ 48/ 48/ 49/  0][0/1/0][ 4100000010][0-0]                                                )
# 124>         BRACE_OPEN[      OC_BLOCK_EXPR][ 50/ 50/ 51/  1][0/1/0][  100000010][0-0]                                                  {
# 124>            NEWLINE[               NONE][ 51/ 51/  6/  0][1/2/0][         10][1-0]
# 125>             RETURN[               NONE][  5/  6/ 12/  0][1/2/0][      70010][0-0]     return
# 125>               WORD[               NONE][ 12/ 13/ 26/  1][1/2/0][      40010][0-0]            currentLayout
# 125>             MEMBER[               NONE][ 25/ 26/ 27/  0][1/2/0][  100000010][0-0]                         .
# 125>               WORD[               NONE][ 26/ 27/ 36/  0][1/2/0][         10][0-0]                          component
# 125>            COMPARE[               NONE][ 36/ 37/ 39/  1][1/2/0][  100000010][0-0]                                    ==
# 125>               THIS[               NONE][ 39/ 40/ 44/  1][1/2/0][      40010][0-0]                                       self
# 125>             MEMBER[               NONE][ 43/ 44/ 46/  0][1/2/0][  100000010][0-0]                                           ->
# 125>               WORD[               NONE][ 45/ 46/ 59/  0][1/2/0][         10][0-0]                                             _bodyVariants
# 125>             MEMBER[               NONE][ 58/ 59/ 60/  0][1/2/0][  100000010][0-0]                                                          .
# 125>          FUNC_CALL[               NONE][ 59/ 60/ 64/  0][1/2/0][         10][0-0]                                                           back
# 125>        FPAREN_OPEN[          FUNC_CALL][ 63/ 64/ 65/  0][1/2/0][  100000010][0-0]                                                               (
# 125>       FPAREN_CLOSE[          FUNC_CALL][ 64/ 65/ 66/  0][1/2/0][  100000010][0-0]                                                                )
# 125>          SEMICOLON[               NONE][ 65/ 66/ 67/  0][1/2/0][  100000010][0-0]                                                                 ;
# 125>            NEWLINE[               NONE][ 66/ 67/ 11/  0][1/2/0][         10][1-0]
# 126>        BRACE_CLOSE[      OC_BLOCK_EXPR][  3/ 11/ 12/  0][0/1/0][  100000010][0-0]   }
# 126>       FPAREN_CLOSE[          FUNC_CALL][  4/ 12/ 13/  0][0/0/0][  100000010][0-0]    )
# 126>          SEMICOLON[               NONE][  5/ 13/ 14/  0][0/0/0][  100000000][0-0]     ;
# 126>            NEWLINE[               NONE][  6/ 14/  1/  0][0/0/0][          0][2-0]
# 128>        SQUARE_OPEN[             OC_MSG][  1/  1/  2/  0][0/0/0][  100064000][0-0] [
# 128>        SQUARE_OPEN[             OC_MSG][  2/  2/  3/  0][0/1/0][  100064000][0-0]  [
# 128>       OC_MSG_CLASS[               NONE][  3/  3/ 13/  0][0/2/0][      74000][0-0]   ButtonItem
# 128>        OC_MSG_FUNC[               NONE][ 14/ 14/ 19/  1][0/2/0][       4000][0-0]              alloc
# 128>       SQUARE_CLOSE[             OC_MSG][ 19/ 19/ 20/  0][0/1/0][  100004000][0-0]                   ]
# 128>            NEWLINE[               NONE][ 20/ 20/  2/  0][0/1/0][       4000][1-0]
# 129>        OC_MSG_FUNC[               NONE][  2/  2/  8/  0][0/1/0][       4000][0-0]  action
# 129>           OC_COLON[               NONE][  8/  8/  9/  0][0/1/0][  100004000][0-0]        :
# 129>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][  9/  9/ 10/  0][0/1/0][  100064000][0-0]         ^
# 129>        FPAREN_OPEN[      OC_BLOCK_EXPR][ 10/ 10/ 11/  0][0/1/0][  100044000][0-0]          (
# 129>               TYPE[      OC_BLOCK_EXPR][ 11/ 11/ 19/  0][0/2/0][ 4000444000][0-0]           NSObject
# 129>         ANGLE_OPEN[      OC_BLOCK_EXPR][ 19/ 19/ 20/  0][0/2/0][ 4100004040][0-0]                   <
# 129>               TYPE[      OC_BLOCK_EXPR][ 20/ 20/ 28/  0][0/4/0][ 4000044040][0-0]                    Protocol
# 129>        ANGLE_CLOSE[      OC_BLOCK_EXPR][ 28/ 28/ 29/  0][0/2/0][ 4100004040][0-0]                            >
# 129>           PTR_TYPE[      OC_BLOCK_EXPR][ 30/ 30/ 31/  1][0/2/0][ 4100044000][0-0]                              *
# 129>          QUALIFIER[      OC_BLOCK_EXPR][ 31/ 31/ 39/  0][0/2/0][ 4000054000][0-0]                               _Nonnull
# 129>               WORD[      OC_BLOCK_EXPR][ 40/ 40/ 46/  1][0/2/0][ 4000804000][0-0]                                        dialog
# 129>       FPAREN_CLOSE[      OC_BLOCK_EXPR][ 46/ 46/ 47/  0][0/1/0][ 4100004000][0-0]                                              )
# 129>         BRACE_OPEN[      OC_BLOCK_EXPR][ 48/ 48/ 49/  1][0/1/0][  100004000][0-0]                                                {
# 129>            NEWLINE[               NONE][ 49/ 49/  4/  0][1/2/0][       4000][1-0]
# 130>                 IF[               NONE][  4/  4/  6/  0][1/2/0][      64000][0-0]    if
# 130>        SPAREN_OPEN[                 IF][  7/  6/  7/  0][1/2/0][  100004000][0-0]       (
# 130>               WORD[               NONE][  8/  7/ 15/  0][1/3/0][      44020][0-0]        weakSelf
# 130>       SPAREN_CLOSE[                 IF][ 16/ 15/ 16/  0][1/2/0][  100004000][0-0]                )
# 130>         BRACE_OPEN[                 IF][ 18/ 17/ 18/  1][1/2/0][  100004000][0-0]                  {
# 130>            NEWLINE[               NONE][ 19/ 18/  6/  0][2/3/0][       4000][1-0]
# 131>        SQUARE_OPEN[             OC_MSG][  6/  6/  7/  0][2/3/0][  100064000][0-0]      [
# 131>       OC_MSG_CLASS[               NONE][  7/  7/ 13/  0][2/4/0][      64000][0-0]       dialog
# 131>            NEWLINE[               NONE][ 13/ 13/  9/  0][2/4/0][       4000][1-0]
# 132>        OC_MSG_FUNC[               NONE][  7/  9/ 30/  0][2/4/0][       4000][0-0]       dismissWithCompletion
# 132>           OC_COLON[               NONE][ 28/ 30/ 31/  0][2/4/0][  100004000][0-0]                            :
# 132>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 29/ 31/ 32/  0][2/4/0][  100064000][0-0]                             ^
# 132>         BRACE_OPEN[      OC_BLOCK_EXPR][ 30/ 32/ 33/  0][2/4/0][  100044000][0-0]                              {
# 132>            NEWLINE[               NONE][ 31/ 33/ 11/  0][3/5/0][       4000][1-0]
# 133>          FUNC_CALL[               NONE][  9/ 11/ 30/  0][3/5/0][      64000][0-0]         _deleteConversation
# 133>        FPAREN_OPEN[          FUNC_CALL][ 28/ 30/ 31/  0][3/5/0][  100004000][0-0]                            (
# 133>            NEWLINE[               NONE][ 29/ 31/ 15/  0][3/6/0][       4010][1-0]
# 134>               WORD[               NONE][ 11/ 15/ 25/  0][3/6/0][      44010][0-0]           strongSelf
# 134>             MEMBER[               NONE][ 21/ 25/ 27/  0][3/6/0][  100004010][0-0]                     ->
# 134>               WORD[               NONE][ 23/ 27/ 35/  0][3/6/0][       4010][0-0]                       _session
# 134>              COMMA[               NONE][ 31/ 35/ 36/  0][3/6/0][  100004010][0-0]                               ,
# 134>            NEWLINE[               NONE][ 32/ 36/ 11/  0][3/6/0][       4010][1-0]
# 135>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 11/ 11/ 12/  0][3/6/0][  100044010][0-0]           ^
# 135>         BRACE_OPEN[      OC_BLOCK_EXPR][ 12/ 12/ 13/  0][3/6/0][  100044010][0-0]            {
# 135>            NEWLINE[               NONE][ 13/ 13/  9/  0][4/7/0][       4010][1-0]
# 136>                 IF[               NONE][ 13/  9/ 11/  0][4/7/0][      64010][0-0]             if
# 136>        SPAREN_OPEN[                 IF][ 16/ 12/ 13/  1][4/7/0][  100004010][0-0]                (
# 136>               TYPE[               NONE][ 17/ 13/ 17/  0][4/8/0][   10054030][0-0]                 auto
# 136>          QUALIFIER[               NONE][ 22/ 18/ 23/  1][4/8/0][   10014030][0-0]                      const
# 136>               WORD[               NONE][ 28/ 24/ 39/  1][4/8/0][   10004030][0-0]                            innerStrongSelf
# 136>             ASSIGN[               NONE][ 44/ 40/ 41/  1][4/8/0][  100004030][0-0]                                            =
# 136>               WORD[               NONE][ 46/ 42/ 50/  1][4/8/0][      44030][0-0]                                              weakSelf
# 136>       SPAREN_CLOSE[                 IF][ 54/ 50/ 51/  0][4/7/0][  100004010][0-0]                                                      )
# 136>         BRACE_OPEN[                 IF][ 56/ 52/ 53/  1][4/7/0][  100004010][0-0]                                                        {
# 136>            NEWLINE[               NONE][ 57/ 53/ 15/  0][5/8/0][       4010][1-0]
# 137>        SQUARE_OPEN[             OC_MSG][ 15/ 15/ 16/  0][5/8/0][  100064010][0-0]               [
# 137>          FUNC_CALL[               NONE][ 16/ 16/ 56/  0][5/9/0][      64010][0-0]                FBNavigationCoordinatorForViewController
# 137>        FPAREN_OPEN[          FUNC_CALL][ 56/ 56/ 57/  0][5/9/0][  100004010][0-0]                                                        (
# 137>               WORD[               NONE][ 57/ 57/ 72/  0][5/10/0][      44010][0-0]                                                         innerStrongSelf
# 137>       FPAREN_CLOSE[          FUNC_CALL][ 72/ 72/ 73/  0][5/9/0][  100004010][0-0]                                                                        )
# 137>            NEWLINE[               NONE][ 73/ 73/ 15/  0][5/9/0][       4010][1-0]
# 138>        OC_MSG_FUNC[               NONE][ 16/ 15/ 36/  0][5/9/0][       4010][0-0]                dismissViewController
# 138>           OC_COLON[               NONE][ 37/ 36/ 37/  0][5/9/0][  100004010][0-0]                                     :
# 138>               TYPE[               NONE][ 38/ 37/ 52/  0][5/9/0][      64010][0-0]                                      innerStrongSelf
# 138>            NEWLINE[               NONE][ 53/ 52/ 15/  0][5/9/0][       4010][1-0]
# 139>        OC_MSG_NAME[               NONE][ 16/ 15/ 25/  0][5/9/0][       4010][0-0]                completion
# 139>           OC_COLON[        OC_MSG_NAME][ 26/ 25/ 26/  0][5/9/0][  100004010][0-0]                          :
# 139>               WORD[               NONE][ 27/ 26/ 29/  0][5/9/0][      64010][0-0]                           nil
# 139>       SQUARE_CLOSE[             OC_MSG][ 30/ 29/ 30/  0][5/8/0][  100004010][0-0]                              ]
# 139>          SEMICOLON[             OC_MSG][ 31/ 30/ 31/  0][5/8/0][  100004010][0-0]                               ;
# 139>            NEWLINE[               NONE][ 32/ 31/ 13/  0][5/8/0][       4010][1-0]
# 140>        BRACE_CLOSE[                 IF][ 13/ 13/ 14/  0][4/7/0][  100004010][0-0]             }
# 140>            NEWLINE[               NONE][ 14/ 14/ 13/  0][4/7/0][       4010][1-0]
# 141>        BRACE_CLOSE[      OC_BLOCK_EXPR][ 11/ 13/ 14/  0][3/6/0][  100004010][0-0]           }
# 141>       FPAREN_CLOSE[          FUNC_CALL][ 12/ 14/ 15/  0][3/5/0][  100004010][0-0]            )
# 141>          SEMICOLON[               NONE][ 13/ 15/ 16/  0][3/5/0][  100004000][0-0]             ;
# 141>            NEWLINE[               NONE][ 14/ 16/  7/  0][3/5/0][       4000][1-0]
# 142>        BRACE_CLOSE[      OC_BLOCK_EXPR][  7/  7/  8/  0][2/4/0][  100004000][0-0]       }
# 142>       SQUARE_CLOSE[             OC_MSG][  8/  8/  9/  0][2/3/0][  100004000][0-0]        ]
# 142>          SEMICOLON[             OC_MSG][  9/  9/ 10/  0][2/3/0][  100004000][0-0]         ;
# 142>            NEWLINE[               NONE][ 10/ 10/  9/  0][2/3/0][       4000][1-0]
# 143>        BRACE_CLOSE[                 IF][  4/  9/ 10/  0][1/2/0][  100004000][0-0]    }
# 143>            NEWLINE[               NONE][  5/ 10/  3/  0][1/2/0][       4000][1-0]
# 144>        BRACE_CLOSE[      OC_BLOCK_EXPR][  2/  3/  4/  0][0/1/0][  100004000][0-0]  }
# 144>       SQUARE_CLOSE[             OC_MSG][  3/  4/  5/  0][0/0/0][  100004000][0-0]   ]
# 144>          SEMICOLON[             OC_MSG][  4/  5/  6/  0][0/0/0][  100000000][0-0]    ;
# 144>            NEWLINE[               NONE][  5/  6/  3/  0][0/0/0][          0][2-0]
# 146>               WORD[               NONE][  1/  3/ 37/  0][0/0/0][      60000][0-0] FBProfileGemstoneBlockUserMutation
# 146>         PAREN_OPEN[               NONE][ 36/ 37/ 38/  0][0/0/0][  100000000][0-0]                                    (
# 146>            NEWLINE[               NONE][ 37/ 38/ 41/  0][0/1/0][          0][1-0]
# 147>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][  3/ 41/ 42/  0][0/1/0][  100040000][0-0]   ^
# 147>        FPAREN_OPEN[      OC_BLOCK_EXPR][  4/ 42/ 43/  0][0/1/0][  100040000][0-0]    (
# 147>               TYPE[      OC_BLOCK_EXPR][  5/ 43/ 50/  0][0/2/0][ 4000440000][0-0]     NSError
# 147>           PTR_TYPE[      OC_BLOCK_EXPR][ 13/ 51/ 52/  1][0/2/0][ 4100000000][0-0]             *
# 147>               WORD[      OC_BLOCK_EXPR][ 14/ 52/ 57/  0][0/2/0][ 4000840000][0-0]              error
# 147>       FPAREN_CLOSE[      OC_BLOCK_EXPR][ 19/ 57/ 58/  0][0/1/0][ 4100000000][0-0]                   )
# 147>         BRACE_OPEN[      OC_BLOCK_EXPR][ 21/ 59/ 60/  1][0/1/0][  100000000][0-0]                     {
# 147>            NEWLINE[               NONE][ 22/ 60/  8/  0][1/2/0][          0][1-0]
# 148>                 IF[               NONE][  5/  8/ 10/  0][1/2/0][      60000][0-0]     if
# 148>        SPAREN_OPEN[                 IF][  8/ 11/ 12/  1][1/2/0][  100000000][0-0]        (
# 148>               WORD[               NONE][  9/ 12/ 20/  0][1/3/0][      40020][0-0]         weakSelf
# 148>       SPAREN_CLOSE[                 IF][ 17/ 20/ 21/  0][1/2/0][  100000000][0-0]                 )
# 148>         BRACE_OPEN[                 IF][ 19/ 22/ 23/  1][1/2/0][  100000000][0-0]                   {
# 148>            NEWLINE[               NONE][ 20/ 23/ 10/  0][2/3/0][          0][1-0]
# 149>          FUNC_CALL[               NONE][  7/ 10/ 42/  0][2/3/0][      60000][0-0]       FBProfileGemstoneHandleWithError
# 149>        FPAREN_OPEN[          FUNC_CALL][ 39/ 42/ 43/  0][2/3/0][  100000000][0-0]                                       (
# 149>               WORD[               NONE][ 40/ 43/ 48/  0][2/4/0][      40010][0-0]                                        error
# 149>       FPAREN_CLOSE[          FUNC_CALL][ 45/ 48/ 49/  0][2/3/0][  100000010][0-0]                                             )
# 149>          SEMICOLON[               NONE][ 46/ 49/ 50/  0][2/3/0][  100000000][0-0]                                              ;
# 149>            NEWLINE[               NONE][ 47/ 50/  8/  0][2/3/0][          0][1-0]
# 150>        BRACE_CLOSE[                 IF][  5/  8/  9/  0][1/2/0][  100000000][0-0]     }
# 150>            NEWLINE[               NONE][  6/  9/  6/  0][1/2/0][          0][1-0]
# 151>        BRACE_CLOSE[      OC_BLOCK_EXPR][  3/  6/  7/  0][0/1/0][  100000000][0-0]   }
# 151>              COMMA[               NONE][  4/  7/  8/  0][0/1/0][  100060000][0-0]    ,
# 151>            NEWLINE[               NONE][  5/  8/ 41/  0][0/1/0][          0][1-0]
# 152>               WORD[               NONE][  3/ 41/ 44/  0][0/1/0][      40000][0-0]   nil
# 152>        PAREN_CLOSE[               NONE][  6/ 44/ 45/  0][0/0/0][  100000000][0-0]      )
# 152>          SEMICOLON[               NONE][  7/ 45/ 46/  0][0/0/0][  100000000][0-0]       ;
# 152>            NEWLINE[               NONE][  8/ 46/  1/  0][0/0/0][          0][2-0]
# 154>        SQUARE_OPEN[             OC_MSG][  1/  1/  2/  0][0/0/0][  100064000][0-0] [
# 154>       OC_MSG_CLASS[               NONE][  2/  2/ 29/  0][0/1/0][      64000][0-0]  FIGActionBarButtonComponent
# 154>            NEWLINE[               NONE][ 29/ 29/  4/  0][0/1/0][       4000][1-0]
# 155>        OC_MSG_FUNC[               NONE][  2/  4/ 11/  0][0/1/0][       4000][0-0]  options
# 155>           OC_COLON[               NONE][  9/ 11/ 12/  0][0/1/0][  100004000][0-0]         :
# 155>         BRACE_OPEN[               NONE][ 10/ 12/ 13/  0][0/1/0][  100064000][0-0]          {
# 155>            NEWLINE[               NONE][ 11/ 13/  6/  0][1/2/0][       4000][1-0]
# 156>         C99_MEMBER[               NONE][  4/  6/  7/  0][1/2/0][  110064000][0-0]    .
# 156>               WORD[         C99_MEMBER][  5/  7/ 27/  0][1/2/0][   10004000][0-0]     colorForControlState
# 156>             ASSIGN[               NONE][ 26/ 28/ 29/  1][1/2/0][  100004000][0-0]                          =
# 156>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 28/ 30/ 31/  1][1/2/0][  100044000][0-0]                            ^
# 156>               TYPE[      OC_BLOCK_EXPR][ 29/ 31/ 38/  0][1/2/0][ 2000044000][0-0]                             UIColor
# 156>           PTR_TYPE[      OC_BLOCK_EXPR][ 37/ 39/ 40/  1][1/2/0][ 2100004000][0-0]                                     *
# 156>        FPAREN_OPEN[      OC_BLOCK_EXPR][ 38/ 40/ 41/  0][1/2/0][  100044000][0-0]                                      (
# 156>               TYPE[      OC_BLOCK_EXPR][ 39/ 41/ 55/  0][1/3/0][ 4000454000][0-0]                                       UIControlState
# 156>               WORD[      OC_BLOCK_EXPR][ 54/ 56/ 68/  1][1/3/0][ 4000804000][0-0]                                                      controlState
# 156>       FPAREN_CLOSE[      OC_BLOCK_EXPR][ 66/ 68/ 69/  0][1/2/0][ 4100004000][0-0]                                                                  )
# 156>         BRACE_OPEN[      OC_BLOCK_EXPR][ 68/ 70/ 71/  1][1/2/0][  100004000][0-0]                                                                    {
# 156>            NEWLINE[               NONE][ 69/ 71/  7/  0][2/3/0][       4000][1-0]
# 157>             RETURN[               NONE][  6/  7/ 13/  0][2/3/0][      64000][0-0]      return
# 157>        SQUARE_OPEN[             OC_MSG][ 13/ 14/ 15/  1][2/3/0][  100044000][0-0]             [
# 157>       OC_MSG_CLASS[               NONE][ 14/ 15/ 19/  0][2/4/0][      74000][0-0]              item
# 157>        OC_MSG_FUNC[               NONE][ 19/ 20/ 38/  1][2/4/0][     184000][0-0]                   titleColorForState
# 157>           OC_COLON[               NONE][ 37/ 38/ 39/  0][2/4/0][  100104000][0-0]                                     :
# 157>               WORD[               NONE][ 38/ 39/ 51/  0][2/4/0][      64000][0-0]                                      controlState
# 157>       SQUARE_CLOSE[             OC_MSG][ 50/ 51/ 52/  0][2/3/0][  100004000][0-0]                                                  ]
# 157>          SEMICOLON[             OC_MSG][ 51/ 52/ 53/  0][2/3/0][  100004000][0-0]                                                   ;
# 157>            NEWLINE[               NONE][ 52/ 53/  5/  0][2/3/0][       4000][1-0]
# 158>        BRACE_CLOSE[      OC_BLOCK_EXPR][  4/  5/  6/  0][1/2/0][  100004000][0-0]    }
# 158>              COMMA[               NONE][  5/  6/  7/  0][1/2/0][  100064000][0-0]     ,
# 158>            NEWLINE[               NONE][  6/  7/  4/  0][1/2/0][       4000][1-0]
# 159>        BRACE_CLOSE[               NONE][  2/  4/  5/  0][0/1/0][  100004000][0-0]  }
# 159>            NEWLINE[               NONE][  3/  5/  4/  0][0/1/0][       4000][1-0]
# 160>        OC_MSG_NAME[               NONE][  2/  4/ 11/  0][0/1/0][      64000][0-0]  session
# 160>           OC_COLON[        OC_MSG_NAME][  9/ 11/ 12/  0][0/1/0][  100004000][0-0]         :
# 160>               WORD[               NONE][ 10/ 12/ 19/  0][0/1/0][      64000][0-0]          session
# 160>       SQUARE_CLOSE[             OC_MSG][ 17/ 19/ 20/  0][0/0/0][  100004000][0-0]                 ]
# 160>          SEMICOLON[             OC_MSG][ 18/ 20/ 21/  0][0/0/0][  100000000][0-0]                  ;
# 160>            NEWLINE[               NONE][ 19/ 21/  1/  0][0/0/0][          0][2-0]
# 162>        SQUARE_OPEN[             OC_MSG][  1/  1/  2/  0][0/0/0][  100064000][0-0] [
# 162>       OC_MSG_CLASS[               NONE][  2/  2/ 20/  0][0/1/0][      64000][0-0]  CKFlexboxComponent
# 162>            NEWLINE[               NONE][ 20/ 20/  1/  0][0/1/0][       4000][1-0]
# 163>        OC_MSG_FUNC[               NONE][  2/  1/ 12/  0][0/1/0][       4000][0-0]  newWithView
# 163>           OC_COLON[               NONE][ 13/ 12/ 13/  0][0/1/0][  100004000][0-0]             :
# 163>         BRACE_OPEN[               NONE][ 14/ 13/ 14/  0][0/1/0][  100064000][0-0]              {
# 163>            NEWLINE[               NONE][ 15/ 14/  4/  0][1/2/0][       4000][1-0]
# 164>         BRACE_OPEN[   BRACED_INIT_LIST][  4/  4/  5/  0][1/2/0][  100064000][0-0]    {
# 164>            NEWLINE[               NONE][  5/  5/  3/  0][2/3/0][       4000][1-0]
# 165>         C99_MEMBER[               NONE][  6/  3/  4/  0][2/3/0][  110064000][0-0]      .
# 165>               WORD[         C99_MEMBER][  7/  4/ 22/  0][2/3/0][   10004000][0-0]       accessibilityLabel
# 165>             ASSIGN[               NONE][ 26/ 23/ 24/  1][2/3/0][  100004000][0-0]                          =
# 165>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 28/ 25/ 26/  1][2/3/0][  100044000][0-0]                            ^
# 165>         BRACE_OPEN[      OC_BLOCK_EXPR][ 29/ 26/ 27/  0][2/3/0][  100044000][0-0]                             {
# 165>            NEWLINE[               NONE][ 30/ 27/  5/  0][3/4/0][       4000][1-0]
# 166>             RETURN[               NONE][  8/  5/ 11/  0][3/4/0][      64000][0-0]        return
# 166>            NEWLINE[               NONE][ 14/ 11/  3/  0][3/4/0][       4000][1-0]
# 167>        SQUARE_OPEN[             OC_MSG][  8/  3/  4/  0][3/4/0][  100044000][0-0]        [
# 167>        SQUARE_OPEN[             OC_MSG][  9/  4/  5/  0][3/5/0][  100064000][0-0]         [
# 167>        SQUARE_OPEN[             OC_MSG][ 10/  5/  6/  0][3/6/0][  100064000][0-0]          [
# 167>        SQUARE_OPEN[             OC_MSG][ 11/  6/  7/  0][3/7/0][  100064000][0-0]           [
# 167>       OC_MSG_CLASS[               NONE][ 12/  7/ 34/  0][3/8/0][      74000][0-0]            FBAccessibilityLabelBuilder
# 167>        OC_MSG_FUNC[               NONE][ 40/ 35/ 42/  1][3/8/0][       4000][0-0]                                        builder
# 167>       SQUARE_CLOSE[             OC_MSG][ 47/ 42/ 43/  0][3/7/0][  100004000][0-0]                                               ]
# 167>            NEWLINE[               NONE][ 48/ 43/  7/  0][3/7/0][       4000][1-0]
# 168>        OC_MSG_FUNC[               NONE][ 11/  7/ 19/  0][3/7/0][       4000][0-0]           appendPhrase
# 168>           OC_COLON[               NONE][ 23/ 19/ 20/  0][3/7/0][  100004000][0-0]                       :
# 168>               WORD[               NONE][ 24/ 20/ 35/  0][3/7/0][      64000][0-0]                        bottomSheetItem
# 168>             MEMBER[               NONE][ 39/ 35/ 36/  0][3/7/0][  100004000][0-0]                                       .
# 168>               WORD[               NONE][ 40/ 36/ 41/  0][3/7/0][       4000][0-0]                                        title
# 168>       SQUARE_CLOSE[             OC_MSG][ 45/ 41/ 42/  0][3/6/0][  100004000][0-0]                                             ]
# 168>            NEWLINE[               NONE][ 46/ 42/  5/  0][3/6/0][       4000][1-0]
# 169>        OC_MSG_FUNC[               NONE][ 10/  5/ 17/  0][3/6/0][       4000][0-0]          appendPhrase
# 169>           OC_COLON[               NONE][ 22/ 17/ 18/  0][3/6/0][  100004000][0-0]                      :
# 169>               WORD[               NONE][ 23/ 18/ 33/  0][3/6/0][      64000][0-0]                       bottomSheetItem
# 169>             MEMBER[               NONE][ 38/ 33/ 34/  0][3/6/0][  100004000][0-0]                                      .
# 169>               WORD[               NONE][ 39/ 34/ 38/  0][3/6/0][       4000][0-0]                                       body
# 169>       SQUARE_CLOSE[             OC_MSG][ 43/ 38/ 39/  0][3/5/0][  100004000][0-0]                                           ]
# 169>            NEWLINE[               NONE][ 44/ 39/  5/  0][3/5/0][       4000][1-0]
# 170>        OC_MSG_FUNC[               NONE][  9/  5/ 14/  0][3/5/0][       4000][0-0]         getResult
# 170>       SQUARE_CLOSE[             OC_MSG][ 18/ 14/ 15/  0][3/4/0][  100004000][0-0]                  ]
# 170>          SEMICOLON[             OC_MSG][ 19/ 15/ 16/  0][3/4/0][  100004000][0-0]                   ;
# 170>            NEWLINE[               NONE][ 20/ 16/  5/  0][3/4/0][       4000][1-0]
# 171>        BRACE_CLOSE[      OC_BLOCK_EXPR][  6/  5/  6/  0][2/3/0][  100004000][0-0]      }
# 171>              COMMA[               NONE][  7/  6/  7/  0][2/3/0][  100064000][0-0]       ,
# 171>            NEWLINE[               NONE][  8/  7/  4/  0][2/3/0][       4000][1-0]
# 172>        BRACE_CLOSE[   BRACED_INIT_LIST][  4/  4/  5/  0][1/2/0][  100004000][0-0]    }
# 172>            NEWLINE[               NONE][  5/  5/  2/  0][1/2/0][       4000][1-0]
# 173>        BRACE_CLOSE[               NONE][  2/  2/  3/  0][0/1/0][  100004000][0-0]  }
# 173>       SQUARE_CLOSE[             OC_MSG][  3/  3/  4/  0][0/0/0][  100004000][0-0]   ]
# 173>          SEMICOLON[             OC_MSG][  4/  4/  5/  0][0/0/0][  100000000][0-0]    ;
# 173>            NEWLINE[               NONE][  5/  5/  1/  0][0/0/0][          0][2-0]
# 175>        SQUARE_OPEN[             OC_MSG][  1/  1/  2/  0][0/0/0][  100064000][0-0] [
# 175>       OC_MSG_CLASS[               NONE][  2/  2/ 13/  0][0/1/0][      74000][0-0]  bottomSheet
# 175>        OC_MSG_FUNC[               NONE][ 14/ 15/ 22/  2][0/1/0][     184000][0-0]              dismiss
# 175>           OC_COLON[               NONE][ 21/ 22/ 23/  0][0/1/0][  100104000][0-0]                     :
# 175>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 22/ 23/ 24/  0][0/1/0][  100064000][0-0]                      ^
# 175>         BRACE_OPEN[      OC_BLOCK_EXPR][ 23/ 24/ 25/  0][0/1/0][  100044000][0-0]                       {
# 175>            NEWLINE[               NONE][ 24/ 25/ 15/  0][1/2/0][       4000][1-0]
# 176>               WORD[               NONE][  3/ 15/ 22/  0][1/2/0][      64000][0-0]   variant
# 176>             MEMBER[               NONE][ 10/ 22/ 23/  0][1/2/0][  100004000][0-0]          .
# 176>               WORD[               NONE][ 11/ 23/ 29/  0][1/2/0][       4000][0-0]           action
# 176>             MEMBER[               NONE][ 17/ 29/ 30/  0][1/2/0][  100004000][0-0]                 .
# 176>          FUNC_CALL[               NONE][ 18/ 30/ 34/  0][1/2/0][       4000][0-0]                  send
# 176>        FPAREN_OPEN[          FUNC_CALL][ 22/ 34/ 35/  0][1/2/0][  100004000][0-0]                      (
# 176>               WORD[               NONE][ 23/ 35/ 44/  0][1/3/0][      44010][0-0]                       component
# 176>       FPAREN_CLOSE[          FUNC_CALL][ 32/ 44/ 45/  0][1/2/0][  100004010][0-0]                                )
# 176>          SEMICOLON[               NONE][ 33/ 45/ 46/  0][1/2/0][  100004000][0-0]                                 ;
# 176>            NEWLINE[               NONE][ 34/ 46/  7/  0][1/2/0][       4000][1-0]
# 177>        BRACE_CLOSE[      OC_BLOCK_EXPR][  1/  7/  8/  0][0/1/0][  100004000][0-0] }
# 177>       SQUARE_CLOSE[             OC_MSG][  2/  8/  9/  0][0/0/0][  100004000][0-0]  ]
# 177>          SEMICOLON[             OC_MSG][  3/  9/ 10/  0][0/0/0][  100000000][0-0]   ;
# 177>            NEWLINE[               NONE][  4/ 10/  1/  0][0/0/0][          0][2-0]
# 179>          FUNC_CALL[               NONE][  1/  1/ 14/  0][0/0/0][      60000][0-0] MainComponent
# 179>        FPAREN_OPEN[          FUNC_CALL][ 14/ 14/ 15/  0][0/0/0][  100000000][0-0]              (
# 179>            NEWLINE[               NONE][ 15/ 15/  3/  0][0/1/0][         10][1-0]
# 180>             MEMBER[               NONE][  3/  3/  4/  0][0/1/0][  110040010][0-0]   .
# 180>               WORD[               NONE][  4/  4/ 11/  0][0/1/0][   10000010][0-0]    builder
# 180>             ASSIGN[               NONE][ 12/ 12/ 13/  1][0/1/0][  100000010][0-0]            =
# 180>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 14/ 14/ 15/  1][0/1/0][  100040010][0-0]              ^
# 180>         BRACE_OPEN[      OC_BLOCK_EXPR][ 15/ 15/ 16/  0][0/1/0][  100040010][0-0]               {
# 180>            NEWLINE[               NONE][ 16/ 16/  3/  0][1/2/0][         10][1-0]
# 181>             RETURN[               NONE][  5/  3/  9/  0][1/2/0][      60010][0-0]     return
# 181>            NEWLINE[               NONE][ 11/  9/  3/  0][1/2/0][         10][1-0]
# 182>               WORD[               NONE][  5/  3/  8/  0][1/2/0][      40010][0-0]     value
# 182>          SEMICOLON[               NONE][ 10/  8/  9/  0][1/2/0][  100000010][0-0]          ;
# 182>            NEWLINE[               NONE][ 11/  9/  1/  0][1/2/0][         10][1-0]
# 183>        BRACE_CLOSE[      OC_BLOCK_EXPR][  3/  1/  2/  0][0/1/0][  100000010][0-0]   }
# 183>              COMMA[               NONE][  4/  2/  3/  0][0/1/0][  100060010][0-0]    ,
# 183>            NEWLINE[               NONE][  5/  3/  1/  0][0/1/0][         10][1-0]
# 184>               WORD[               NONE][  3/  1/  7/  0][0/1/0][      40010][0-0]   param1
# 184>              COMMA[               NONE][  9/  7/  8/  0][0/1/0][  100000010][0-0]         ,
# 184>            NEWLINE[               NONE][ 10/  8/  1/  0][0/1/0][         10][1-0]
# 185>               WORD[               NONE][  3/  1/  7/  0][0/1/0][      40010][0-0]   param2
# 185>              COMMA[               NONE][  9/  7/  8/  0][0/1/0][  100000010][0-0]         ,
# 185>            NEWLINE[               NONE][ 10/  8/  3/  0][0/1/0][         10][1-0]
# 186>       FPAREN_CLOSE[          FUNC_CALL][  1/  3/  4/  0][0/0/0][  100000010][0-0] )
# 186>          SEMICOLON[               NONE][  2/  4/  5/  0][0/0/0][  100000000][0-0]  ;
# 186>            NEWLINE[               NONE][  3/  5/  5/  0][0/0/0][          0][2-0]
# 189>        SQUARE_OPEN[             OC_MSG][  1/  5/  6/  0][0/0/0][  100064000][0-0] [
# 189>       OC_MSG_CLASS[               NONE][  2/  7/ 20/  1][0/1/0][   10064000][0-0]  MainComponent
# 189>            NEWLINE[               NONE][ 15/ 20/  1/  0][0/1/0][       4000][1-0]
# 190>        OC_MSG_FUNC[               NONE][  2/  1/  8/  0][0/1/0][   10004000][0-0]  builder
# 190>           OC_COLON[               NONE][  9/  8/  9/  0][0/1/0][  110004000][0-0]         :
# 190>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 10/  9/ 10/  0][0/1/0][  110064000][0-0]          ^
# 190>               TYPE[      OC_BLOCK_EXPR][ 11/ 10/ 13/  0][0/1/0][ 2010044000][0-0]           FDS
# 190>          DC_MEMBER[      OC_BLOCK_EXPR][ 14/ 13/ 15/  0][0/1/0][ 2110004000][0-0]              ::
# 190>               TYPE[      OC_BLOCK_EXPR][ 16/ 15/ 25/  0][0/1/0][ 2010004000][0-0]                ActionCell
# 190>          DC_MEMBER[      OC_BLOCK_EXPR][ 26/ 25/ 27/  0][0/1/0][ 2110004000][0-0]                          ::
# 190>               TYPE[      OC_BLOCK_EXPR][ 28/ 27/ 31/  0][0/1/0][ 2010004000][0-0]                            Item
# 190>         BRACE_OPEN[      OC_BLOCK_EXPR][ 33/ 31/ 32/  0][0/1/0][  100004000][0-0]                                 {
# 190>            NEWLINE[               NONE][ 34/ 32/  5/  0][1/2/0][       4000][1-0]
# 191>             RETURN[               NONE][  4/  5/ 11/  0][1/2/0][      64000][0-0]    return
# 191>            NEWLINE[               NONE][ 10/ 11/  3/  0][1/2/0][       4000][1-0]
# 192>               WORD[               NONE][  4/  3/  8/  0][1/2/0][      44000][0-0]    value
# 192>          SEMICOLON[               NONE][  9/  8/  9/  0][1/2/0][  100004000][0-0]         ;
# 192>            NEWLINE[               NONE][ 10/  9/ 11/  0][1/2/0][       4000][1-0]
# 193>        BRACE_CLOSE[      OC_BLOCK_EXPR][  2/ 11/ 12/  0][0/1/0][  100004000][0-0]  }
# 193>       SQUARE_CLOSE[             OC_MSG][  3/ 14/ 15/  2][0/0/0][  100004000][0-0]   ]
# 193>          SEMICOLON[             OC_MSG][  4/ 15/ 16/  0][0/0/0][  100000000][0-0]    ;
# 193>            NEWLINE[               NONE][  5/ 16/  1/  0][0/0/0][          0][2-0]
# 195>        SQUARE_OPEN[             OC_MSG][  1/  1/  2/  0][0/0/0][  100064000][0-0] [
# 195>       OC_MSG_CLASS[               NONE][  2/  2/ 11/  0][0/1/0][      64000][0-0]  something
# 195>            NEWLINE[               NONE][ 11/ 11/  2/  0][0/1/0][       4000][1-0]
# 196>        OC_MSG_FUNC[               NONE][  2/  2/ 11/  0][0/1/0][       4000][0-0]  withBlock
# 196>           OC_COLON[               NONE][ 11/ 11/ 12/  0][0/1/0][  100004000][0-0]           :
# 196>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 12/ 12/ 13/  0][0/1/0][  100064000][0-0]            ^
# 196>               TYPE[      OC_BLOCK_EXPR][ 13/ 13/ 15/  0][0/1/0][ 2000044000][0-0]             id
# 196>        FPAREN_OPEN[      OC_BLOCK_EXPR][ 16/ 16/ 17/  1][0/1/0][  100004000][0-0]                (
# 196>               TYPE[      OC_BLOCK_EXPR][ 17/ 17/ 26/  0][0/2/0][ 4000444000][0-0]                 Component
# 196>           PTR_TYPE[      OC_BLOCK_EXPR][ 27/ 27/ 28/  1][0/2/0][ 4100004000][0-0]                           *
# 196>               WORD[      OC_BLOCK_EXPR][ 28/ 28/ 29/  0][0/2/0][ 4000844000][0-0]                            c
# 196>       FPAREN_CLOSE[      OC_BLOCK_EXPR][ 29/ 29/ 30/  0][0/1/0][ 4100004000][0-0]                             )
# 196>         BRACE_OPEN[      OC_BLOCK_EXPR][ 31/ 31/ 32/  1][0/1/0][  100004000][0-0]                               {
# 196>            NEWLINE[               NONE][ 32/ 32/ 33/  0][1/2/0][       4000][1-0]
# 197>          FUNC_CALL[               NONE][  4/ 33/ 38/  0][1/2/0][      64000][0-0]    NSLog
# 197>        FPAREN_OPEN[          FUNC_CALL][  9/ 38/ 39/  0][1/2/0][  100004000][0-0]         (
# 197>             STRING[               NONE][ 10/ 39/ 51/  0][1/3/0][      44010][0-0]          @"Something"
# 197>       FPAREN_CLOSE[          FUNC_CALL][ 22/ 51/ 52/  0][1/2/0][  100004010][0-0]                      )
# 197>          SEMICOLON[               NONE][ 23/ 52/ 53/  0][1/2/0][  100004000][0-0]                       ;
# 197>            NEWLINE[               NONE][ 24/ 53/ 31/  0][1/2/0][       4000][1-0]
# 198>        BRACE_CLOSE[      OC_BLOCK_EXPR][  2/ 31/ 32/  0][0/1/0][  100004000][0-0]  }
# 198>       SQUARE_CLOSE[             OC_MSG][  3/ 32/ 33/  0][0/0/0][  100004000][0-0]   ]
# 198>          SEMICOLON[             OC_MSG][  4/ 33/ 34/  0][0/0/0][  100000000][0-0]    ;
# 198>            NEWLINE[               NONE][  5/ 34/  1/  0][0/0/0][          0][2-0]
# 200>        SQUARE_OPEN[             OC_MSG][  1/  1/  2/  0][0/0/0][  100064000][0-0] [
# 200>       OC_MSG_CLASS[               NONE][  2/  2/ 11/  0][0/1/0][      64000][0-0]  something
# 200>            NEWLINE[               NONE][ 11/ 11/  2/  0][0/1/0][       4000][1-0]
# 201>        OC_MSG_FUNC[               NONE][  2/  2/ 11/  0][0/1/0][       4000][0-0]  withBlock
# 201>           OC_COLON[               NONE][ 11/ 11/ 12/  0][0/1/0][  100004000][0-0]           :
# 201>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 12/ 12/ 13/  0][0/1/0][  100064000][0-0]            ^
# 201>        FPAREN_OPEN[      OC_BLOCK_EXPR][ 13/ 13/ 14/  0][0/1/0][  100044000][0-0]             (
# 201>               TYPE[      OC_BLOCK_EXPR][ 14/ 14/ 23/  0][0/2/0][ 4000444000][0-0]              Component
# 201>           PTR_TYPE[      OC_BLOCK_EXPR][ 24/ 24/ 25/  1][0/2/0][ 4100004000][0-0]                        *
# 201>               WORD[      OC_BLOCK_EXPR][ 25/ 25/ 26/  0][0/2/0][ 4000844000][0-0]                         c
# 201>       FPAREN_CLOSE[      OC_BLOCK_EXPR][ 26/ 26/ 27/  0][0/1/0][ 4100004000][0-0]                          )
# 201>         BRACE_OPEN[      OC_BLOCK_EXPR][ 28/ 28/ 29/  1][0/1/0][  100004000][0-0]                            {
# 201>            NEWLINE[               NONE][ 29/ 29/ 30/  0][1/2/0][       4000][1-0]
# 202>          FUNC_CALL[               NONE][  4/ 30/ 35/  0][1/2/0][      64000][0-0]    NSLog
# 202>        FPAREN_OPEN[          FUNC_CALL][  9/ 35/ 36/  0][1/2/0][  100004000][0-0]         (
# 202>             STRING[               NONE][ 10/ 36/ 48/  0][1/3/0][      44010][0-0]          @"Something"
# 202>       FPAREN_CLOSE[          FUNC_CALL][ 22/ 48/ 49/  0][1/2/0][  100004010][0-0]                      )
# 202>          SEMICOLON[               NONE][ 23/ 49/ 50/  0][1/2/0][  100004000][0-0]                       ;
# 202>            NEWLINE[               NONE][ 24/ 50/ 28/  0][1/2/0][       4000][1-0]
# 203>        BRACE_CLOSE[      OC_BLOCK_EXPR][  2/ 28/ 29/  0][0/1/0][  100004000][0-0]  }
# 203>       SQUARE_CLOSE[             OC_MSG][  3/ 29/ 30/  0][0/0/0][  100004000][0-0]   ]
# 203>          SEMICOLON[             OC_MSG][  4/ 30/ 31/  0][0/0/0][  100000000][0-0]    ;
# 203>            NEWLINE[               NONE][  5/ 31/  1/  0][0/0/0][          0][2-0]
# 205>               TYPE[               NONE][  1/  1/  3/  0][0/0/0][     460000][0-0] CK
# 205>          DC_MEMBER[               NONE][  3/  3/  5/  0][0/0/0][  100000000][0-0]   ::
# 205>          FUNC_CALL[               NONE][  5/  5/  8/  0][0/0/0][          0][0-0]     map
# 205>        FPAREN_OPEN[          FUNC_CALL][  8/  8/  9/  0][0/0/0][  100000000][0-0]        (
# 205>            NEWLINE[               NONE][  9/  9/  3/  0][0/1/0][         10][1-0]
# 206>               WORD[               NONE][  3/  3/  9/  0][0/1/0][      40010][0-0]   _items
# 206>              COMMA[               NONE][  9/  9/ 10/  0][0/1/0][  100000010][0-0]         ,
# 206>            NEWLINE[               NONE][ 10/ 10/  7/  0][0/1/0][         10][1-0]
# 207>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][  3/  7/  8/  0][0/1/0][  100040010][0-0]   ^
# 207>               TYPE[      OC_BLOCK_EXPR][  4/  9/ 12/  1][0/1/0][ 2000040010][0-0]    FDS
# 207>          DC_MEMBER[      OC_BLOCK_EXPR][  7/ 12/ 14/  0][0/1/0][ 2100000010][0-0]       ::
# 207>               TYPE[      OC_BLOCK_EXPR][  9/ 14/ 24/  0][0/1/0][ 2000000010][0-0]         ActionCell
# 207>          DC_MEMBER[      OC_BLOCK_EXPR][ 19/ 24/ 26/  0][0/1/0][ 2100000010][0-0]                   ::
# 207>               TYPE[      OC_BLOCK_EXPR][ 21/ 26/ 30/  0][0/1/0][ 2000000010][0-0]                     Item
# 207>        FPAREN_OPEN[      OC_BLOCK_EXPR][ 26/ 31/ 32/  1][0/1/0][  100000010][0-0]                          (
# 207>               TYPE[      OC_BLOCK_EXPR][ 27/ 32/ 36/  0][0/2/0][ 4000450010][0-0]                           Item
# 207>               WORD[      OC_BLOCK_EXPR][ 32/ 37/ 41/  1][0/2/0][ 4000800010][0-0]                                item
# 207>       FPAREN_CLOSE[      OC_BLOCK_EXPR][ 36/ 41/ 42/  0][0/1/0][ 4100000010][0-0]                                    )
# 207>         BRACE_OPEN[      OC_BLOCK_EXPR][ 38/ 43/ 44/  2][0/1/0][  100000010][0-0]                                      {
# 207>            NEWLINE[               NONE][ 39/ 45/  6/  0][1/2/0][         10][1-0]
# 208>             RETURN[               NONE][  5/  6/ 12/  0][1/2/0][      70010][0-0]     return
# 208>               WORD[               NONE][ 12/ 13/ 14/  1][1/2/0][      40010][0-0]            x
# 208>          SEMICOLON[               NONE][ 13/ 14/ 15/  0][1/2/0][  100000010][0-0]             ;
# 208>            NEWLINE[               NONE][ 14/ 15/ 11/  0][1/2/0][         10][1-0]
# 209>        BRACE_CLOSE[      OC_BLOCK_EXPR][  3/ 11/ 12/  0][0/1/0][  100000010][0-0]   }
# 209>            NEWLINE[               NONE][  4/ 12/  1/  0][0/1/0][         10][1-0]
# 210>       FPAREN_CLOSE[          FUNC_CALL][  1/  1/  2/  0][0/0/0][  100000010][0-0] )
# 210>          SEMICOLON[               NONE][  2/  2/  3/  0][0/0/0][  100000000][0-0]  ;
# 210>            NEWLINE[               NONE][  3/  3/  1/  0][0/0/0][          0][2-0]
# 212>          FUNC_CALL[               NONE][  1/  1/  9/  0][0/0/0][      60000][0-0] Mutation
# 212>        FPAREN_OPEN[          FUNC_CALL][ 10/ 10/ 11/  1][0/0/0][  100000000][0-0]          (
# 212>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 11/ 11/ 12/  0][0/1/0][  100040000][0-0]           ^
# 212>        FPAREN_OPEN[      OC_BLOCK_EXPR][ 12/ 12/ 13/  0][0/1/0][  100040000][0-0]            (
# 212>               TYPE[      OC_BLOCK_EXPR][ 13/ 14/ 21/  1][0/2/0][ 4000440000][0-0]             NSError
# 212>           PTR_TYPE[      OC_BLOCK_EXPR][ 21/ 22/ 23/  1][0/2/0][ 4100000000][0-0]                     *
# 212>               WORD[      OC_BLOCK_EXPR][ 22/ 23/ 28/  0][0/2/0][ 4000840000][0-0]                      error
# 212>       FPAREN_CLOSE[      OC_BLOCK_EXPR][ 27/ 28/ 29/  0][0/1/0][ 4100000000][0-0]                           )
# 212>         BRACE_OPEN[      OC_BLOCK_EXPR][ 29/ 30/ 31/  1][0/1/0][  100000000][0-0]                             {
# 212>            NEWLINE[               NONE][ 30/ 31/  9/  0][1/2/0][          0][1-0]
# 213>                 IF[               NONE][  3/  9/ 11/  0][1/2/0][      60000][0-0]   if
# 213>        SPAREN_OPEN[                 IF][  6/ 12/ 13/  1][1/2/0][  100000000][0-0]      (
# 213>               WORD[               NONE][  7/ 13/ 21/  0][1/3/0][      40020][0-0]       weakSelf
# 213>       SPAREN_CLOSE[                 IF][ 15/ 21/ 22/  0][1/2/0][  100000000][0-0]               )
# 213>         BRACE_OPEN[                 IF][ 17/ 23/ 24/  1][1/2/0][  100000000][0-0]                 {
# 213>            NEWLINE[               NONE][ 18/ 24/  7/  0][2/3/0][          0][1-0]
# 214>          FUNC_CALL[               NONE][  5/  7/ 12/  0][2/3/0][      60000][0-0]     Error
# 214>        FPAREN_OPEN[          FUNC_CALL][ 10/ 12/ 13/  0][2/3/0][  100000000][0-0]          (
# 214>               WORD[               NONE][ 11/ 13/ 18/  0][2/4/0][      40010][0-0]           error
# 214>       FPAREN_CLOSE[          FUNC_CALL][ 16/ 18/ 19/  0][2/3/0][  100000010][0-0]                )
# 214>          SEMICOLON[               NONE][ 17/ 19/ 20/  0][2/3/0][  100000000][0-0]                 ;
# 214>            NEWLINE[               NONE][ 18/ 20/  4/  0][2/3/0][          0][1-0]
# 215>        BRACE_CLOSE[                 IF][  3/  4/  5/  0][1/2/0][  100000000][0-0]   }
# 215>            NEWLINE[               NONE][  4/  5/  2/  0][1/2/0][          0][1-0]
# 216>        BRACE_CLOSE[      OC_BLOCK_EXPR][  1/  2/  3/  0][0/1/0][  100000000][0-0] }
# 216>       FPAREN_CLOSE[          FUNC_CALL][  2/  3/  4/  0][0/0/0][  100000000][0-0]  )
# 216>          SEMICOLON[               NONE][  3/  4/  5/  0][0/0/0][  100000000][0-0]   ;
# 216>            NEWLINE[               NONE][  4/  5/  1/  0][0/0/0][          0][2-0]
# 218>             RETURN[               NONE][  1/  1/  7/  0][0/0/0][      60000][0-0] return
# 218>            NEWLINE[               NONE][  7/  7/  1/  0][0/0/0][          0][1-0]
# 219>               WORD[               NONE][  1/  1/ 11/  0][0/0/0][      40000][0-0] _isEnabled
# 219>            NEWLINE[               NONE][ 11/ 11/  1/  0][0/0/0][          0][1-0]
# 220>               BOOL[               NONE][  1/  1/  3/  0][0/0/0][  100000000][0-0] &&
# 220>        SQUARE_OPEN[             OC_MSG][  4/  4/  5/  1][0/0/0][  100044000][0-0]    [
# 220>        SQUARE_OPEN[             OC_MSG][  5/  5/  6/  0][0/1/0][  100064000][0-0]     [
# 220>       OC_MSG_CLASS[               NONE][  6/  6/ 34/  0][0/2/0][      74000][0-0]      FBMobileConfigStartupConfigs
# 220>        OC_MSG_FUNC[               NONE][ 35/ 35/ 46/  1][0/2/0][       4000][0-0]                                   getInstance
# 220>       SQUARE_CLOSE[             OC_MSG][ 46/ 46/ 47/  0][0/1/0][  100004000][0-0]                                              ]
# 220>        OC_MSG_FUNC[               NONE][ 48/ 48/ 55/  1][0/1/0][     384000][0-0]                                                getBool
# 220>           OC_COLON[               NONE][ 55/ 55/ 56/  0][0/1/0][  100304000][0-0]                                                       :
# 220>             STRING[               NONE][ 56/ 56/ 62/  0][0/1/0][      64000][0-0]                                                        @"YES"
# 220>            NEWLINE[               NONE][ 62/ 62/ 44/  0][0/1/0][       4000][1-0]
# 221>        OC_MSG_NAME[               NONE][ 44/ 44/ 55/  0][0/1/0][     284000][0-0]                                            withDefault
# 221>           OC_COLON[        OC_MSG_NAME][ 55/ 55/ 56/  0][0/1/0][  100204000][0-0]                                                       :
# 221>               WORD[               NONE][ 56/ 56/ 58/  0][0/1/0][      64000][0-0]                                                        NO
# 221>       SQUARE_CLOSE[             OC_MSG][ 58/ 58/ 59/  0][0/0/0][  100004000][0-0]                                                          ]
# 221>          SEMICOLON[             OC_MSG][ 59/ 59/ 60/  0][0/0/0][  100000000][0-0]                                                           ;
# 221>            NEWLINE[               NONE][ 60/ 60/  1/  0][0/0/0][          0][2-0]
# 223>        SQUARE_OPEN[             OC_MSG][  1/  1/  2/  0][0/0/0][  100064000][0-0] [
# 223>       OC_MSG_CLASS[               NONE][  2/  2/  6/  0][0/1/0][      74000][0-0]  self
# 223>        OC_MSG_FUNC[               NONE][  7/  7/ 24/  1][0/1/0][     384000][0-0]       dismissWithReason
# 223>           OC_COLON[               NONE][ 24/ 24/ 25/  0][0/1/0][  100304000][0-0]                        :
# 223>               TYPE[               NONE][ 25/ 25/ 38/  0][0/1/0][      64000][0-0]                         DismissReason
# 223>          DC_MEMBER[               NONE][ 38/ 38/ 40/  0][0/1/0][  100004000][0-0]                                      ::
# 223>               TYPE[               NONE][ 40/ 40/ 44/  0][0/1/0][       4000][0-0]                                        Auto
# 223>            NEWLINE[               NONE][ 44/ 44/ 16/  0][0/1/0][       4000][1-0]
# 224>        OC_MSG_NAME[               NONE][ 16/ 16/ 24/  0][0/1/0][     284000][0-0]                animated
# 224>           OC_COLON[        OC_MSG_NAME][ 24/ 24/ 25/  0][0/1/0][  100204000][0-0]                        :
# 224>               WORD[               NONE][ 25/ 25/ 29/  0][0/1/0][      64000][0-0]                         TRUE
# 224>       SQUARE_CLOSE[             OC_MSG][ 29/ 29/ 30/  0][0/0/0][  100004000][0-0]                             ]
# 224>          SEMICOLON[             OC_MSG][ 30/ 30/ 31/  0][0/0/0][  100000000][0-0]                              ;
# 224>            NEWLINE[               NONE][ 31/ 31/  1/  0][0/0/0][          0][2-0]
# 226>        SQUARE_OPEN[             OC_MSG][  1/  1/  2/  0][0/0/0][  100064000][0-0] [
# 226>       OC_MSG_CLASS[               NONE][  2/  2/  6/  0][0/1/0][      64000][0-0]  self
# 226>            NEWLINE[               NONE][  6/  6/  2/  0][0/1/0][       4000][1-0]
# 227>        OC_MSG_FUNC[               NONE][  2/  2/ 19/  0][0/1/0][       4000][0-0]  dismissWithReason
# 227>           OC_COLON[               NONE][ 19/ 19/ 20/  0][0/1/0][  100004000][0-0]                   :
# 227>               TYPE[               NONE][ 20/ 20/ 33/  0][0/1/0][      64000][0-0]                    DismissReason
# 227>          DC_MEMBER[               NONE][ 33/ 33/ 35/  0][0/1/0][  100004000][0-0]                                 ::
# 227>               TYPE[               NONE][ 35/ 35/ 39/  0][0/1/0][       4000][0-0]                                   Auto
# 227>            NEWLINE[               NONE][ 39/ 39/  2/  0][0/1/0][       4000][1-0]
# 228>        OC_MSG_NAME[               NONE][  2/  2/ 13/  0][0/1/0][       4000][0-0]  withContext
# 228>           OC_COLON[        OC_MSG_NAME][ 13/ 13/ 14/  0][0/1/0][  100004000][0-0]             :
# 228>             NUMBER[               NONE][ 14/ 14/ 15/  0][0/1/0][      64000][0-0]              1
# 228>            NEWLINE[               NONE][ 15/ 15/  2/  0][0/1/0][       4000][1-0]
# 229>        OC_MSG_NAME[               NONE][  2/  2/ 10/  0][0/1/0][       4000][0-0]  animated
# 229>           OC_COLON[        OC_MSG_NAME][ 10/ 10/ 11/  0][0/1/0][  100004000][0-0]          :
# 229>               WORD[               NONE][ 11/ 11/ 15/  0][0/1/0][      64000][0-0]           TRUE
# 229>       SQUARE_CLOSE[             OC_MSG][ 15/ 15/ 16/  0][0/0/0][  100004000][0-0]               ]
# 229>          SEMICOLON[             OC_MSG][ 16/ 16/ 17/  0][0/0/0][  100000000][0-0]                ;
# 229>            NEWLINE[               NONE][ 17/ 17/  1/  0][0/0/0][          0][2-0]
# 231>        SQUARE_OPEN[             OC_MSG][  1/  1/  2/  0][0/0/0][  100064000][0-0] [
# 231>       OC_MSG_CLASS[               NONE][  2/  2/ 14/  0][0/1/0][      64000][0-0]  _hostingView
# 231>            NEWLINE[               NONE][ 14/ 14/  2/  0][0/1/0][       4000][1-0]
# 232>        OC_MSG_FUNC[               NONE][  2/  2/ 13/  0][0/1/0][       4000][0-0]  updateModel
# 232>           OC_COLON[               NONE][ 13/ 13/ 14/  0][0/1/0][  100004000][0-0]             :
# 232>        SQUARE_OPEN[             OC_MSG][ 14/ 14/ 15/  0][0/1/0][  100064000][0-0]              [
# 232>       OC_MSG_CLASS[               NONE][ 15/ 15/ 51/  0][0/2/0][      64000][0-0]               FDSTooltipViewControllerPropsWrapper
# 232>            NEWLINE[               NONE][ 51/ 51/ 15/  0][0/2/0][       4000][1-0]
# 233>        OC_MSG_FUNC[               NONE][ 15/ 15/ 27/  0][0/2/0][       4000][0-0]               newWithProps
# 233>           OC_COLON[               NONE][ 27/ 27/ 28/  0][0/2/0][  100004000][0-0]                           :
# 233>               TYPE[               NONE][ 28/ 28/ 33/  0][0/2/0][      64000][0-0]                            props
# 233>            NEWLINE[               NONE][ 33/ 33/ 15/  0][0/2/0][       4000][1-0]
# 234>        OC_MSG_NAME[               NONE][ 15/ 15/ 20/  0][0/2/0][       4000][0-0]               theme
# 234>           OC_COLON[        OC_MSG_NAME][ 20/ 20/ 21/  0][0/2/0][  100004000][0-0]                    :
# 234>               WORD[               NONE][ 21/ 21/ 29/  0][0/2/0][      64000][0-0]                     _tooltip
# 234>             MEMBER[               NONE][ 29/ 29/ 30/  0][0/2/0][  100004000][0-0]                             .
# 234>               WORD[               NONE][ 30/ 30/ 35/  0][0/2/0][       4000][0-0]                              props
# 234>             MEMBER[               NONE][ 35/ 35/ 36/  0][0/2/0][  100004000][0-0]                                   .
# 234>               WORD[               NONE][ 36/ 36/ 41/  0][0/2/0][       4000][0-0]                                    theme
# 234>       SQUARE_CLOSE[             OC_MSG][ 41/ 41/ 42/  0][0/1/0][  100004000][0-0]                                         ]
# 234>       SQUARE_CLOSE[             OC_MSG][ 42/ 42/ 43/  0][0/0/0][  100004000][0-0]                                          ]
# 234>          SEMICOLON[             OC_MSG][ 43/ 43/ 44/  0][0/0/0][  100000000][0-0]                                           ;
# 234>            NEWLINE[               NONE][ 44/ 44/  1/  0][0/0/0][          0][2-0]
# 236>        SQUARE_OPEN[             OC_MSG][  1/  1/  2/  0][0/0/0][  100064000][0-0] [
# 236>        SQUARE_OPEN[             OC_MSG][  2/  2/  3/  0][0/1/0][  100064000][0-0]  [
# 236>        SQUARE_OPEN[             OC_MSG][  3/  3/  4/  0][0/2/0][  100064000][0-0]   [
# 236>       OC_MSG_CLASS[               NONE][  4/  4/ 20/  0][0/3/0][      74000][0-0]    ComponentBuilder
# 236>        OC_MSG_FUNC[               NONE][ 21/ 21/ 26/  1][0/3/0][       4000][0-0]                     alloc
# 236>       SQUARE_CLOSE[             OC_MSG][ 26/ 26/ 27/  0][0/2/0][  100004000][0-0]                          ]
# 236>            NEWLINE[               NONE][ 27/ 27/  3/  0][0/2/0][       4000][1-0]
# 237>        OC_MSG_FUNC[               NONE][  3/  3/ 24/  0][0/2/0][       4000][0-0]   initWithHeadlineTitle
# 237>           OC_COLON[               NONE][ 24/ 24/ 25/  0][0/2/0][  100004000][0-0]                        :
# 237>        SQUARE_OPEN[             OC_MSG][ 25/ 25/ 26/  0][0/2/0][  100064000][0-0]                         [
# 237>       OC_MSG_CLASS[               NONE][ 26/ 26/ 34/  0][0/3/0][      64000][0-0]                          NSString
# 237>            NEWLINE[               NONE][ 34/ 34/ 26/  0][0/3/0][       4000][1-0]
# 238>        OC_MSG_FUNC[               NONE][ 26/ 26/ 42/  0][0/3/0][       4000][0-0]                          stringWithFormat
# 238>           OC_COLON[               NONE][ 42/ 42/ 43/  0][0/3/0][  100004000][0-0]                                          :
# 238>             STRING[               NONE][ 43/ 43/ 70/  0][0/3/0][      64000][0-0]                                           @"ContextRow button tapped"
# 238>            NEWLINE[               NONE][ 70/ 70/ 26/  0][0/3/0][       4000][1-0]
# 239>        OC_MSG_NAME[               NONE][ 26/ 26/ 35/  0][0/3/0][       4000][0-0]                          something
# 239>           OC_COLON[        OC_MSG_NAME][ 35/ 35/ 36/  0][0/3/0][  100004000][0-0]                                   :
# 239>               WORD[               NONE][ 36/ 36/ 41/  0][0/3/0][      64000][0-0]                                    great
# 239>       SQUARE_CLOSE[             OC_MSG][ 41/ 41/ 42/  0][0/2/0][  100004000][0-0]                                         ]
# 239>            NEWLINE[               NONE][ 42/ 42/  3/  0][0/2/0][       4000][1-0]
# 240>        OC_MSG_NAME[               NONE][  3/  3/ 16/  0][0/2/0][       4000][0-0]   withBodyTitle
# 240>           OC_COLON[        OC_MSG_NAME][ 16/ 16/ 17/  0][0/2/0][  100004000][0-0]                :
# 240>               WORD[               NONE][ 17/ 17/ 20/  0][0/2/0][      64000][0-0]                 nil
# 240>       SQUARE_CLOSE[             OC_MSG][ 20/ 20/ 21/  0][0/1/0][  100004000][0-0]                    ]
# 240>        OC_MSG_FUNC[               NONE][ 22/ 22/ 27/  1][0/1/0][       4000][0-0]                      build
# 240>       SQUARE_CLOSE[             OC_MSG][ 27/ 27/ 28/  0][0/0/0][  100004000][0-0]                           ]
# 240>          SEMICOLON[             OC_MSG][ 28/ 28/ 29/  0][0/0/0][  100000000][0-0]                            ;
# 240>            NEWLINE[               NONE][ 29/ 29/  1/  0][0/0/0][          0][2-0]
# 242>          NAMESPACE[               NONE][  1/  1/ 10/  0][0/0/0][   10070000][0-0] namespace
# 242>               WORD[          NAMESPACE][ 11/ 11/ 24/  1][0/0/0][   10000000][0-0]           SomeNamespace
# 242>         BRACE_OPEN[          NAMESPACE][ 25/ 25/ 26/  1][0/0/0][  100000000][0-0]                         {
# 242>            NEWLINE[               NONE][ 26/ 26/  3/  0][1/1/0][       1000][1-0]
# 243>          NAMESPACE[               NONE][  3/  3/ 12/  0][1/1/0][   10071000][0-0]   namespace
# 243>               WORD[          NAMESPACE][ 13/ 13/ 31/  1][1/1/0][   10001000][0-0]             SomeOtherNamespace
# 243>         BRACE_OPEN[          NAMESPACE][ 32/ 32/ 33/  1][1/1/0][  100001000][0-0]                                {
# 243>            NEWLINE[               NONE][ 33/ 33/  5/  0][2/2/0][       1000][1-0]
# 244>               TYPE[           FUNC_DEF][  5/  5/ 14/  0][2/2/0][      61000][0-0]     Component
# 244>           PTR_TYPE[           FUNC_DEF][ 15/ 15/ 16/  1][2/2/0][  100001000][0-0]               *
# 244>           FUNC_DEF[               NONE][ 16/ 16/ 31/  0][2/2/0][      41000][0-0]                createComponent
# 244>        FPAREN_OPEN[           FUNC_DEF][ 31/ 31/ 32/  0][2/2/0][  100001000][0-0]                               (
# 244>       FPAREN_CLOSE[           FUNC_DEF][ 32/ 32/ 33/  0][2/2/0][  100001008][0-0]                                )
# 244>            NEWLINE[               NONE][ 33/ 33/  5/  0][2/2/0][       1000][1-0]
# 245>         BRACE_OPEN[           FUNC_DEF][  5/  5/  6/  0][2/2/0][  100001000][0-0]     {
# 245>            NEWLINE[               NONE][  6/  6/  7/  0][3/3/0][       1000][1-0]
# 246>             RETURN[               NONE][  7/  7/ 13/  0][3/3/0][      61000][0-0]       return
# 246>            NEWLINE[               NONE][ 13/ 13/  7/  0][3/3/0][       1000][1-0]
# 247>          FUNC_CALL[               NONE][  7/  7/ 21/  0][3/3/0][      41000][0-0]       BuildComponent
# 247>        FPAREN_OPEN[          FUNC_CALL][ 21/ 21/ 22/  0][3/3/0][  100001000][0-0]                     (
# 247>     OC_BLOCK_CARET[      OC_BLOCK_EXPR][ 22/ 22/ 23/  0][3/4/0][  100041000][0-0]                      ^
# 247>        FPAREN_OPEN[      OC_BLOCK_EXPR][ 23/ 23/ 24/  0][3/4/0][  100041000][0-0]                       (
# 247>               TYPE[      OC_BLOCK_EXPR][ 24/ 24/ 35/  0][3/5/0][ 4000441000][0-0]                        CKComponent
# 247>           PTR_TYPE[      OC_BLOCK_EXPR][ 36/ 36/ 37/  1][3/5/0][ 4100001000][0-0]                                    *
# 247>       FPAREN_CLOSE[      OC_BLOCK_EXPR][ 37/ 37/ 38/  0][3/4/0][ 4100001000][0-0]                                     )
# 247>         BRACE_OPEN[      OC_BLOCK_EXPR][ 39/ 39/ 40/  1][3/4/0][  100001000][0-0]                                       {
# 247>            NEWLINE[               NONE][ 40/ 40/ 41/  0][4/5/0][       1000][1-0]
# 248>        SQUARE_OPEN[             OC_MSG][  9/ 41/ 42/  0][4/5/0][  100065000][0-0]         [
# 248>        SQUARE_OPEN[             OC_MSG][ 10/ 42/ 43/  0][4/6/0][  100065000][0-0]          [
# 248>        SQUARE_OPEN[             OC_MSG][ 11/ 43/ 44/  0][4/7/0][  100065000][0-0]           [
# 248>       OC_MSG_CLASS[               NONE][ 12/ 44/ 60/  0][4/8/0][      75000][0-0]            ComponentBuilder
# 248>        OC_MSG_FUNC[               NONE][ 29/ 61/ 66/  1][4/8/0][       5000][0-0]                             alloc
# 248>       SQUARE_CLOSE[             OC_MSG][ 34/ 66/ 67/  0][4/7/0][  100005000][0-0]                                  ]
# 248>            NEWLINE[               NONE][ 35/ 67/ 43/  0][4/7/0][       5000][1-0]
# 249>        OC_MSG_FUNC[               NONE][ 11/ 43/ 64/  0][4/7/0][       5000][0-0]           initWithHeadlineTitle
# 249>           OC_COLON[               NONE][ 32/ 64/ 65/  0][4/7/0][  100005000][0-0]                                :
# 249>        SQUARE_OPEN[             OC_MSG][ 33/ 65/ 66/  0][4/7/0][  100065000][0-0]                                 [
# 249>       OC_MSG_CLASS[               NONE][ 34/ 66/ 74/  0][4/8/0][      75000][0-0]                                  NSString
# 249>        OC_MSG_FUNC[               NONE][ 43/ 75/ 91/  1][4/8/0][     185000][0-0]                                           stringWithFormat
# 249>           OC_COLON[               NONE][ 59/ 91/ 92/  0][4/8/0][  100105000][0-0]                                                           :
# 249>             STRING[               NONE][ 60/ 92/119/  0][4/8/0][      65000][0-0]                                                            @"ContextRow button tapped"
# 249>       SQUARE_CLOSE[             OC_MSG][ 87/119/120/  0][4/7/0][  100005000][0-0]                                                                                       ]
# 249>            NEWLINE[               NONE][ 88/120/ 43/  0][4/7/0][       5000][1-0]
# 250>        OC_MSG_NAME[               NONE][ 11/ 43/ 58/  0][4/7/0][       5000][0-0]           withButtonTitle
# 250>           OC_COLON[        OC_MSG_NAME][ 26/ 58/ 59/  0][4/7/0][  100005000][0-0]                          :
# 250>          FUNC_CALL[               NONE][ 27/ 59/ 83/  0][4/7/0][      65000][0-0]                           FBLocalizedOKButtonTitle
# 250>        FPAREN_OPEN[          FUNC_CALL][ 51/ 83/ 84/  0][4/7/0][  100005000][0-0]                                                   (
# 250>       FPAREN_CLOSE[          FUNC_CALL][ 52/ 84/ 85/  0][4/7/0][  100005010][0-0]                                                    )
# 250>            NEWLINE[               NONE][ 53/ 85/ 43/  0][4/7/0][       5000][1-0]
# 251>        OC_MSG_NAME[               NONE][ 11/ 43/ 56/  0][4/7/0][       5000][0-0]           withBodyTitle
# 251>           OC_COLON[        OC_MSG_NAME][ 24/ 56/ 57/  0][4/7/0][  100005000][0-0]                        :
# 251>               WORD[               NONE][ 25/ 57/ 60/  0][4/7/0][      65000][0-0]                         nil
# 251>       SQUARE_CLOSE[             OC_MSG][ 28/ 60/ 61/  0][4/6/0][  100005000][0-0]                            ]
# 251>        OC_MSG_FUNC[               NONE][ 30/ 62/ 67/  1][4/6/0][       5000][0-0]                              build
# 251>       SQUARE_CLOSE[             OC_MSG][ 35/ 67/ 68/  0][4/5/0][  100005000][0-0]                                   ]
# 251>          SEMICOLON[             OC_MSG][ 36/ 68/ 69/  0][4/5/0][  100001000][0-0]                                    ;
# 251>            NEWLINE[               NONE][ 37/ 69/ 39/  0][4/5/0][       1000][1-0]
# 252>        BRACE_CLOSE[      OC_BLOCK_EXPR][  7/ 39/ 40/  0][3/4/0][  100001000][0-0]       }
# 252>       FPAREN_CLOSE[          FUNC_CALL][  8/ 40/ 41/  0][3/3/0][  100000000][0-0]        )
# 252>          SEMICOLON[               NONE][  9/ 41/ 42/  0][3/3/0][  100000000][0-0]         ;
# 252>            NEWLINE[               NONE][ 10/ 42/  5/  0][3/3/0][          0][1-0]
# 253>        BRACE_CLOSE[           FUNC_DEF][  5/  5/  6/  0][2/2/0][  100000000][0-0]     }
# 253>            NEWLINE[               NONE][  6/  6/  3/  0][2/2/0][          0][1-0]
# 254>        BRACE_CLOSE[          NAMESPACE][  3/  3/  4/  0][1/1/0][  100000000][0-0]   }
# 254>            NEWLINE[               NONE][  4/  4/  1/  0][1/1/0][          0][1-0]
# 255>        BRACE_CLOSE[          NAMESPACE][  1/  1/  2/  0][0/0/0][  100000000][0-0] }
# 255>            NEWLINE[               NONE][  2/  2/  1/  0][0/0/0][          0][1-0]
# -=====-
